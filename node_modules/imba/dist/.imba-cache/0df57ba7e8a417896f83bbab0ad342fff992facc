{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};\nimport {accessor as imba_accessor} from 'imba';\nvar $1 = Symbol('creator'), $2 = Symbol(), $3 = Symbol('name'), $4 = Symbol(), $5 = Symbol(), $7, $8;\nconst $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__');\n\n/*body*/\nimport setup from '../setup';\n\nexport class Item extends OP.Object {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $6;\n\t\tsuper[$__patch__$] && super[$__patch__$]($$,fields);\n\t\tfields && ($6 = $$.creator) !== undefined && this.ααcreator.$init($6,this,$1,'creator',$$);\n\t\tfields && ($6 = $$.name) !== undefined && this.ααname.$init($6,this,$3,'name',$$);\n\t\t\n\t}\n\tconstructor(){\n\t\tsuper(...arguments);\n\t\tsuper[$__init__$] || this[$__init__$]();this[$__initor__$]===$5 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tdeep && super[$__init__$] && super[$__init__$](...arguments);\n\t\tfields && this.ααcreator.$init($$ ? $$.creator : undefined,this,$1,'creator',$$);\n\t\tfields && this.ααname.$init($$ ? $$.name : undefined,this,$3,'name',$$);\n\t\t\n\t}\n\tset creator(val){ this.ααcreator.$set(val,this,$1,'creator') }\n\tget creator(){ return this.ααcreator.$get(this,$1,'creator') }\n\tget ααcreator(){ return this[$2] || imba_accessor(($7 = this.αref(OP.User),$7),this,$1,'creator',$2,Item.prototype) }\n\tset name(val){ this.ααname.$set(val,this,$3,'name') }\n\tget name(){ return this.ααname.$get(this,$3,'name') }\n\tget ααname(){ return this[$4] || imba_accessor(($8 = this.αstring(),$8),this,$3,'name',$4,Item.prototype) }\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $5;defineName$__(this,'Item');inheritClass$__(this);}\n};\n\nawait setup(__filename,{data: {\n\tU01: {name: 'Sindre'},\n\titem01: {name: 'Item',creator: 'U01'},\n\tnamed_thing: function() { return Item.new({name: \"Hello\"}); },\n\tsaved_item: function() { return Item.create({name: \"saved\"}); }\n}});\n\ntest(\"access item\",function({U01: U01}) {\n\t\n\tok(U01 instanceof OPUser);\n\treturn ok(U01.name,\"Sindre\");\n});\n\n// Built-in fixture\ntest(\"user\",function({user: user}) {\n\t\n\treturn ok(user instanceof OPUser);\n});\n\n// Built-in fixture\ntest(\"session\",function({session: session}) {\n\t\n\treturn ok(session instanceof OPSession);\n});\n\n// Built-in fixture\ntest(\"client\",function({client: client}) {\n\t\n\treturn ok(client instanceof OPClient);\n});\n\n// Function-based fixture\n\n// In the setup.data you can supply [key]: function\n// entries where the func is evaluated and returned\n// if you refer to it in a test. It will be reevaluated\n// for every test, so perfect if you want to test\n// a lot of different things with the same base item\ntest(\"fixture named_thing\",function({named_thing: named_thing}) {\n\t\n\tok(named_thing instanceof Item);\n\tok(named_thing.name,\"Hello\");\n\treturn ok(named_thing.unsavedΦ);\n});\n\ntest(\"fixture saved_item\",function({saved_item: saved_item}) {\n\t\n\tok(saved_item instanceof Item);\n\tok(saved_item.name,\"saved\");\n\treturn ok(saved_item.savedΦ);\n});\n","dependencies":[],"map":{"version":3,"file":"fixtures.test.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/test/misc/fixtures.test.imba"],"sourcesContent":["import setup from '../setup'\n\nexport class Item < OP.Object\n\tcreator @ref(OP.User)\n\tname @string\n\nawait setup(__filename, data: {\n\tU01: {name: 'Sindre'}\n\titem01: {name: 'Item', creator: 'U01'}\n\tnamed_thing: do Item.new(name: \"Hello\")\n\tsaved_item: do Item.create(name: \"saved\")\n})\n\ntest \"access item\" do({U01})\n\tok U01 isa OPUser\n\tok U01.name,\"Sindre\"\n\n# Built-in fixture\ntest \"user\" do({user})\n\tok user isa OPUser\n\n# Built-in fixture\ntest \"session\" do({session})\n\tok session isa OPSession\n\n# Built-in fixture\ntest \"client\" do({client})\n\tok client isa OPClient\n\n# Function-based fixture\n\n# In the setup.data you can supply [key]: function\n# entries where the func is evaluated and returned\n# if you refer to it in a test. It will be reevaluated\n# for every test, so perfect if you want to test\n# a lot of different things with the same base item\ntest \"fixture named_thing\" do({named_thing})\n\tok named_thing isa Item\n\tok named_thing.name,\"Hello\"\n\tok named_thing.unsaved?\n\ntest \"fixture saved_item\" do({saved_item})\n\tok saved_item isa Item\n\tok saved_item.name,\"saved\"\n\tok saved_item.saved?"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAAM,CAAC,KAAK,MAAM,UAAU;;AAE5B,MAAM,CAAC,KAAK,CAAC,IAAI,SAAG,EAAE,CAAC,MAAM,EAAA;qCAF7B;;;qBAGC,OAAO,CAAA;qBACP,IAAI,CAAA;;EAJL;cAAA;;;EAAA;kDAAA;;yCAGC,OAAO;sCACP,IAAI;;EAJL;KAGC,OAAO;KAAP,OAAO;KAAP,SAAO,gDAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,0BADT,IAAI;KAEhB,IAAI;KAAJ,IAAI;KAAJ,MAAI,gDAAC,OAAO,EAAA,uBAFA,IAAI;;;AAEJ,CAAA;;MAEP,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE;CAC7B,GAAG,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC;CACrB,MAAM,EAAE,CAAC,IAAI,EAAE,MAAM,CAAE,OAAO,EAAE,KAAK,CAAC;CACtC,WAAW,EAAE,QAAE,KAAC,OAAA,IAAI,CAAC,GAAG,EAAC,IAAI,EAAE,OAAO,EAAC;CACvC,UAAU,EAAE,QAAE,KAAC,OAAA,IAAI,CAAC,MAAM,EAAC,IAAI,EAAE,OAAO,EAAC;CACzC,EAAC;;AAEF,IAAI,CAAC,aAAa,CAAC,QAAE,CAAC,CAAC,GAAG,EAAH,GAAG,CAAC,EAAC;;CAC3B,EAAE,CAAC,GAAG,YAAK,MAAM,CAAA;CACjB,OAAA,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAA;CAAA,CAFjB;;;AAKJ,IAAI,CAAC,MAAM,CAAC,QAAE,CAAC,CAAC,IAAI,EAAJ,IAAI,CAAC,EAAC;;CACrB,OAAA,EAAE,CAAC,IAAI,YAAK,MAAM,CAAA;CAAA,CADf;;;AAIJ,IAAI,CAAC,SAAS,CAAC,QAAE,CAAC,CAAC,OAAO,EAAP,OAAO,CAAC,EAAC;;CAC3B,OAAA,EAAE,CAAC,OAAO,YAAK,SAAS,CAAA;CAAA,CADrB;;;AAIJ,IAAI,CAAC,QAAQ,CAAC,QAAE,CAAC,CAAC,MAAM,EAAN,MAAM,CAAC,EAAC;;CACzB,OAAA,EAAE,CAAC,MAAM,YAAK,QAAQ,CAAA;CAAA,CADnB;;;;;;;;;AAUJ,IAAI,CAAC,qBAAqB,CAAC,QAAE,CAAC,CAAC,WAAW,EAAX,WAAW,CAAC,EAAC;;CAC3C,EAAE,CAAC,WAAW,YAAK,IAAI,CAAA;CACvB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAA;CAC3B,OAAA,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAA;CAAA,CAHpB;;AAKJ,IAAI,CAAC,oBAAoB,CAAC,QAAE,CAAC,CAAC,UAAU,EAAV,UAAU,CAAC,EAAC;;CACzC,EAAE,CAAC,UAAU,YAAK,IAAI,CAAA;CACtB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAA;CAC1B,OAAA,EAAE,CAAC,UAAU,CAAC,MAAM,CAAA;CAAA,CAHjB;AAGiB;"}},"css":{"code":""},"warnings":[],"errors":[]}
{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};\n\n/*body*/\nimport * as os from '../util/os';\n\nexport class OPAudio extends OPMedia {\n\t\n\tstatic _for(blob,parameters = {}){\n\t\t\n\t\tconst params = parameters.params;\n\t\tif (false) {};\n\t\t\n\t\treturn this.get(this.encodeKey(params));\n\t}\n\tstatic {\n\t\tdefineName$__(this,'OPAudio');this.alias = 'AUD';\n\t\tinheritClass$__(this);}\n}; globalThis.OPAudio = OPAudio;\n","dependencies":[],"map":{"version":3,"file":"audio.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/types/audio.imba"],"sourcesContent":["import * as os from '../util/os'\n\nexport global class OPAudio < OPMedia\n\tstatic alias = 'AUD'\n\n\tstatic def _for blob, parameters = {}\n\t\tconst params = parameters.params\n\t\tif $browser$\n\t\t\tconst el = <audio[d:none] src=parameters.blob-url>\n\t\t\tconst promise = new Promise do(resolve)\n\t\t\t\tel.addEventListener('loadedmetadata') do\n\t\t\t\t\tresolve el.duration\n\t\t\tel.load!\n\t\t\tconst duration = await promise\n\t\t\tparams.push duration\n\n\t\tself.get(encodeKey(params))\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,CAAC,IAAI,EAAE,MAAM,YAAY;;AAEhC,MAAM,CAAQ,KAAK,CAAC,OAAO,SAAG,OAAO,EAAA;;CAGpC,MAAM,CAAK,IAAI,CAAC,IAAI,CAAE,UAAU,GAAG,EAAE,CAAA;;QAC9B,MAAM,GAAG,UAAU,CAAC,MAAM;EAChC,EAAE,EAAC,KAAS;;EASZ,OAAA,IAAI,CAAC,GAAG,CAAC,KAAA,SAAS,CAAC,MAAM,CAAC,CAAC;EAAA;;qCAbrB,KAAK,GAAG,KAAK;;AAaQ,cAdT,OAAO,GAAP,OAAO;AAe3B;"}},"css":{"code":""},"warnings":[],"errors":[]}
{"js":{"code":"function iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };;\nfunction defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction decorate$__(decorators,target,key,desc){\n\tvar c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\tif (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\telse for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\treturn c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport {αlazy as imba_αlazy, use_hooks as imba_use_hooks, hooks as imba_hooks} from 'imba';\n(imba_use_hooks());\nconst $__hooks__$ = Symbol.for('#__hooks__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__');\n\n/*body*/\nconst ShapesMap = new WeakMap;\nimport {STACK} from '../stack';\n\nclass OPShape {\n\t\n\t\n\tstatic for(item){\n\t\tvar $4;\n\t\t\n\t\tlet base = item;\n\t\tlet curr = base;\n\t\t\n\t\tlet cached = ShapesMap.get(base);\n\t\tif (cached) { return cached };\n\t\t\n\t\tlet all = {};\n\t\t\n\t\twhile (curr && curr != Object){\n\t\t\t\n\t\t\tlet proto = Object.getOwnPropertyDescriptors(curr);\n\t\t\tfor (let $1 = 0, $2 = Object.keys(proto), $3 = $2.length, name, val; $1 < $3; $1++){\n\t\t\t\tname = $2[$1];val = proto[name];if (name.indexOf('αα') != 0) { continue; };\n\t\t\t\tall[name.slice(2)] ||= curr;\n\t\t\t};\n\t\t\tcurr = Object.getPrototypeOf(curr);\n\t\t\t// curr = curr.parent\n\t\t};\n\t\t\n\t\t$4 = [];\n\t\tfor (let $5 = 0, $6 = Object.keys(all), $7 = $6.length, k, v; $5 < $7; $5++){\n\t\t\tk = $6[$5];v = all[k];\n\t\t\t$4.push(v[(`αα` + k)]);\n\t\t};\n\t\tlet fields = $4;\n\t\t\n\t\tlet shape = new OPShape(base,fields);\n\t\tShapesMap.set(base,shape);\n\t\treturn shape;\n\t\treturn this;\n\t}\n\t\n\tconstructor($type,fields = null){\n\t\t\n\t\tObject.defineProperties(this,{\n\t\t\t$type: {enumerable: false,value: $type},\n\t\t\t$symbol: {enumerable: false,value: Symbol()}\n\t\t});\n\t\t\n\t\tif (fields instanceof Array) {\n\t\t\t\n\t\t\tfor (let $8 = 0, $9 = iter$__(fields), $10 = $9.length; $8 < $10; $8++) {\n\t\t\t\tlet f = $9[$8];\n\t\t\t\tthis[f.name] = f;\n\t\t\t};\n\t\t};\n\t\t\n\t\tthis;\n\t\t!this[$__initor__$] && this[$__hooks__$].inited(this);\n\t}\n\t\n\t[Symbol.toPrimitive](){\n\t\t\n\t\treturn this.$symbol;\n\t}\n\t\n\ttoIterable(){\n\t\t\n\t\treturn Object.values(this);\n\t}\n\t\n\tfilter(cb,alt = undefined){\n\t\tvar $11;\n\t\t\n\t\t$11 = [];\n\t\tfor (let $12 = 0, $13 = iter$__(this), $14 = $13.length; $12 < $14; $12++) {\n\t\t\tlet v = $13[$12];\n\t\t\tif (!(cb(v))) { continue; };\n\t\t\t$11.push(v);\n\t\t};\n\t\tlet matches = $11;\n\t\t\n\t\treturn (matches.length || alt === undefined) ? (new OPShape(this.$type,matches)) : alt;\n\t}\n\t\n\tfind(cb){\n\t\t\n\t\tfor (let $15 = 0, $16 = iter$__(this), $17 = $16.length; $15 < $17; $15++) {\n\t\t\tlet v = $16[$15];\n\t\t\tif (cb(v)) { return v };\n\t\t};\n\t\treturn null;\n\t}\n\t\n\t[Symbol.iterator](){\n\t\t\n\t\treturn Object.values(this)[Symbol.iterator]();\n\t}\n\t\n\tget anyΦ(){\n\t\t\n\t\treturn Object.keys(this).length > 0;\n\t}\n\t\n\t$for(value){\n\t\t\n\t\treturn this.filter(function(_0) {\n\t\t\t\n\t\t\treturn _0.type && (_0.type == value || _0.type == value.constructor);\n\t\t});\n\t}\n\t\n\t// ?\n\t$diff(a = {},b = {},o = {}){\n\t\t\n\t\tlet upd = {};\n\t\tfor (let $18 = 0, $19 = iter$__(this), $20 = $19.length; $18 < $20; $18++) {\n\t\t\tlet f = $19[$18];\n\t\t\tlet plain = f.$diff(b[f.name],a[f.name]);\n\t\t\tif (plain !== undefined) { upd[f.name] = plain };\n\t\t};\n\t\treturn Object.keys(upd).length ? upd : null;\n\t}\n\t\n\t$serialize(item,roles = null){\n\t\tvar self = this;\n\t\t\n\t\t// Serialization still used\n\t\tlet out = new OPSerialization(this,item);\n\t\tout.id = item.id;\n\t\t\n\t\tout._ ||= 0;\n\t\tout._ |= OPFLAGS.CLOUD;\n\t\t\n\t\tSTACK.serialize(function() {\n\t\t\tvar $21;\n\t\t\t\n\t\t\t$21 = [];\n\t\t\tfor (let $22 = 0, $23 = iter$__(self), $24 = $23.length; $22 < $24; $22++) {\n\t\t\t\tlet f = $23[$22];\n\t\t\t\tif (roles != null && f.R) {\n\t\t\t\t\t\n\t\t\t\t\tif (!((f.R & +roles))) { continue; };\n\t\t\t\t};\n\t\t\t\t// should we not just serialize the raw item\n\t\t\t\tlet plain = f.$serialize(item,out);\n\t\t\t\t$21.push((plain !== undefined) && (out[f.name] = plain));\n\t\t\t};\n\t\t\treturn $21;\n\t\t});\n\t\treturn out;\n\t}\n\t\n\tget $pov(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.pov; });\n\t}\n\t\n\tget $shared(){\n\t\t\n\t\treturn this.filter(function(_0) { return !(_0.pov); });\n\t}\n\t\n\tget $local(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.local; });\n\t}\n\t\n\tget $rich(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.richΦ; });\n\t}\n\t\n\tget $cloud(){\n\t\t\n\t\treturn this.filter(function(_0) { return !(_0.local) && !(_0.session) && !(_0.virtual) && !(_0.hidden); });\n\t}\n\t\n\tget $qs(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.qs; });\n\t}\n\t\n\tget $shallow(){\n\t\t\n\t\treturn this.filter(function(_0) { return (!(_0.lazy) || _0.refΦ) || _0.name == 'id'; });\n\t}\n\t\n\tget $default(){\n\t\t\n\t\treturn this.filter(function(_0) { return !(!(_0.default)); });\n\t}\n\t\n\tget $complex(){\n\t\t\n\t\treturn this.filter(function(_0) { return !(!(_0.complexΦ)); });\n\t}\n\t\n\tget $embeds(){\n\t\t\n\t\treturn this.filter(function(_0) { return !(!(_0.embeddedΦ)); });\n\t}\n\t\n\tget $idb(){\n\t\t\n\t\treturn this.filter(function(_0) { return !(_0.hidden) && !(_0.virtual); });// and $1.column? - what about embeds?\n\t}\n\t\n\tget $writable(){\n\t\t\n\t\t// hidden props will be writable on the ser\n\t\treturn this.filter(function(_0) { return (true || !(_0.hidden)) && !(_0.virtual) && !(_0.generated); });\n\t}\n\t\n\t// properties to push from client\n\t// @lazy get $push\n\t\n\tget $serializable(){\n\t\t\n\t\treturn this.filter(function(_0) { return !(_0.hidden) && !(_0.virtual); });\n\t}\n\t\n\tget $children(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.children; });\n\t}\n\t\n\tget $columns(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.columnΦ && (!(_0.pov) || _0.count); });\n\t}\n\t\n\tget $actions(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.actionΦ; });\n\t}\n\t\n\t// Fields that are only readable by specific users\n\tget $r(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.name != 'id' && _0.R; },null);\n\t}\n\t\n\tget $w(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.name != 'id' && _0.W; },null);\n\t}\n\t\n\t// end up not using?\n\tget $rg(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.RG; });\n\t}\n\t\n\tget $pg(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.columnΦ && (!(_0.pov) || _0.count); });\n\t}\n\t\n\tget $refs(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.refΦ; });\n\t}\n\t\n\tget $acl(){\n\t\t\n\t\treturn this.find(function(_0) { return _0 instanceof OPACLField; });\n\t}\n\t\n\tget $parents(){\n\t\t\n\t\treturn this.filter(function(_0) { return _0.parent; });\n\t}\n\t\n\tget $names(){\n\t\t\n\t\treturn Object.values(this).map(function(_0) { return _0.name; });\n\t}\n\tstatic {\n\t\tthis.prototype[$__hooks__$] = imba_hooks;\n\t\tdefineName$__(this,'OPShape');decorate$__([imba_αlazy.bind([])],this.prototype,'anyΦ',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$pov',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$shared',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$local',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$rich',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$cloud',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$qs',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$shallow',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$default',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$complex',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$embeds',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$idb',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$writable',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$serializable',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$children',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$columns',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$actions',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$r',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$w',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$rg',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$pg',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$refs',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$acl',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'$parents',null);\n\t}\n}; globalThis.OPShape = OPShape;\n","dependencies":[],"map":{"version":3,"file":"shape.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/core/shape.imba"],"sourcesContent":["const ShapesMap = new WeakMap\nimport { STACK } from '../stack'\n\nglobal class OPShape\n\n\tdeclare $symbol\\Symbol\n\tdeclare $type\\(OPObject)\n\n\tstatic def for item\n\t\tlet base = item\n\t\tlet curr = base\n\n\t\tlet cached = ShapesMap.get(base)\n\t\treturn cached if cached\n\n\t\tlet all = {}\n\n\t\twhile curr and curr != Object\n\t\t\tlet proto = Object.getOwnPropertyDescriptors(curr)\n\t\t\tfor own name,val of proto when name.indexOf('αα') == 0\n\t\t\t\tall[name.slice(2)] ||= curr\n\t\t\tcurr = Object.getPrototypeOf(curr)\n\t\t\t# curr = curr.parent\n\n\t\tlet fields = for own k,v of all\n\t\t\tv[`αα{k}`]\n\n\t\tlet shape = new OPShape(base,fields)\n\t\tShapesMap.set(base,shape)\n\t\treturn shape\n\t\tself\n\n\tdef constructor $type, fields = null\n\t\tObject.defineProperties(self,{\n\t\t\t$type: {enumerable: no, value: $type},\n\t\t\t$symbol: {enumerable: no, value: Symbol!}\n\t\t})\n\n\t\tif fields isa Array\n\t\t\tfor f in fields\n\t\t\t\tself[f.name] = f\n\n\t\tself\n\n\tdef [Symbol.toPrimitive]\n\t\t$symbol\n\n\tdef toIterable\n\t\tObject.values(self)\n\n\tdef filter cb, alt = undefined\n\t\tlet matches = for v in self\n\t\t\tcontinue unless cb(v)\n\t\t\tv\n\n\t\treturn (matches.length or alt === undefined) ? new OPShape($type,matches) : alt\n\n\tdef find cb\n\t\tfor v in self\n\t\t\treturn v if cb(v)\n\t\treturn null\n\n\tdef [Symbol.iterator]\n\t\treturn Object.values(self)[Symbol.iterator]()\n\n\t@lazy get any?\n\t\tObject.keys(self).length > 0\n\n\tdef $for value\n\t\tfilter do\n\t\t\t$1.type and ($1.type == value or $1.type == value.constructor)\n\n\t# ?\n\tdef $diff a = {},b = {}, o = {}\n\t\tlet upd = {}\n\t\tfor f in self\n\t\t\tlet plain = f.$diff(b[f.name],a[f.name])\n\t\t\tupd[f.name] = plain unless plain === undefined\n\t\treturn Object.keys(upd).length ? upd : null\n\n\tdef $serialize item, roles = null\n\t\t# Serialization still used\n\t\tlet out = new OPSerialization(self,item)\n\t\tout.id = item.id\n\n\t\tout._ ||= 0\n\t\tout._ |= OPFLAGS.CLOUD if $node$\n\n\t\tSTACK.serialize do\n\t\t\tfor f in self\n\t\t\t\tif roles != null and f.R\n\t\t\t\t\tcontinue unless (f.R & +roles)\n\t\t\t\t# should we not just serialize the raw item\n\t\t\t\tlet plain = f.$serialize(item,out)\n\t\t\t\tout[f.name] = plain unless plain === undefined\n\t\treturn out\n\n\t@lazy get $pov\n\t\tfilter do $1.pov\n\n\t@lazy get $shared\n\t\tfilter do !$1.pov\n\n\t@lazy get $local\n\t\tfilter do $1.local\n\n\t@lazy get $rich\n\t\tfilter do $1.rich?\n\n\t@lazy get $cloud\n\t\tfilter do !$1.local and !$1.session and !$1.virtual and !$1.hidden\n\n\t@lazy get $qs\n\t\tfilter do $1.qs\n\n\t@lazy get $shallow\n\t\tfilter do (!$1.lazy or $1.ref?) or $1.name == 'id'\n\n\t@lazy get $default\n\t\tfilter do !!$1.default\n\n\t@lazy get $complex\n\t\tfilter do !!$1.complex?\n\n\t@lazy get $embeds\n\t\tfilter do !!$1.embedded?\n\n\t@lazy get $idb\n\t\tfilter do !$1.hidden and !$1.virtual # and $1.column? - what about embeds?\n\n\t@lazy get $writable\n\t\t# hidden props will be writable on the ser\n\t\tfilter do ($node$ or !$1.hidden) and !$1.virtual and !$1.generated\n\n\t# properties to push from client\n\t# @lazy get $push\n\n\t@lazy get $serializable\n\t\tfilter do (!$1.hidden and !$1.virtual)\n\n\t@lazy get $children\n\t\tfilter do $1.children\n\n\t@lazy get $columns\n\t\tfilter do ($1.column? and (!$1.pov or $1.count))\n\n\t@lazy get $actions\n\t\tfilter do $1.action?\n\n\t# Fields that are only readable by specific users\n\t@lazy get $r\n\t\tfilter(&,null) do $1.name != 'id' and $1.R\n\n\t@lazy get $w\n\t\tfilter(&,null) do $1.name != 'id' and $1.W\n\n\t# end up not using?\n\t@lazy get $rg\n\t\tfilter do $1.RG\n\n\t@lazy get $pg\n\t\tfilter do ($1.column? and (!$1.pov or $1.count))\n\n\t@lazy get $refs\n\t\tfilter do $1.ref?\n\n\t@lazy get $acl\n\t\tfind do $1 isa OPACLField\n\n\t@lazy get $parents\n\t\tfilter do $1.parent\n\n\tget $names\n\t\tObject.values(self).map do $1.name"],"names":[],"mappings":"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"}},"css":{"code":""},"warnings":[],"errors":[]}
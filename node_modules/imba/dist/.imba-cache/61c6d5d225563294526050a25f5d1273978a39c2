{"js":{"code":"\n/*body*/\nimport setup from '../setup';\n\nawait setup(__filename);\n\ndescribe(\"user login\",function() {\n\t\n\t\n\ttest.node(\"fail with invalid user\",async function({session: session}) {\n\t\t\n\t\treturn ok(await (async ()=>{ try { return await session.login('U000') } catch(e) { return e; } })() instanceof OPForeignKeyError);\n\t});\n\t\n\treturn test.node(\"succeed with valid user\",async function({session: session,user: user}) {\n\t\t\n\t\tlet res = await session.login(user);\n\t\tok(session.user,user);\n\t\tok(session.$cloud.user,user.id);\n\t\treturn ok(res,session);// returns session itself\n\t});\n});\n","dependencies":[],"map":{"version":3,"file":"session.test.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/test/misc/session.test.imba"],"sourcesContent":["import setup from '../setup'\n\nawait setup(__filename)\n\ndescribe \"user login\" do\n\n\ttest.node \"fail with invalid user\" do({session})\n\t\tok (rescue await session.login('U000')) isa OPForeignKeyError\n\n\ttest.node \"succeed with valid user\" do({session,user})\n\t\tlet res = await session.login(user)\n\t\tok session.user,user\n\t\tok session.$cloud.user,user.id\n\t\tok res,session # returns session itself\n"],"names":[],"mappings":";;AAAA,MAAM,CAAC,KAAK,MAAM,UAAU;;MAEtB,KAAK,CAAC,UAAU,CAAC;;AAEvB,QAAQ,CAAC,YAAY,CAAC,QAAE,GAAA;;;CAEvB,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,cAAE,CAAC,CAAC,OAAO,EAAP,OAAO,CAAC,EAAC;;EAC/C,OAAA,EAAE,uCAAe,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,0CAAM,iBAAiB,CAAA;EAAA,CADrD;;CAGT,OAAA,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,cAAE,CAAC,CAAC,OAAO,EAAP,OAAO,CAAC,IAAI,EAAJ,IAAI,CAAC,EAAC;;MACjD,GAAG,SAAS,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;EACnC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAA;EACpB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAA;EAC9B,OAAA,EAAE,CAAC,GAAG,CAAC,OAAO,CAAA;EAAyB,CAJ/B;CAI+B,CATjC;AAUR;"}},"css":{"code":""},"warnings":[],"errors":[]}
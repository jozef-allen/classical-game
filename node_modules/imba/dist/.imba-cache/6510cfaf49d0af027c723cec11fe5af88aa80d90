{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};;\nfunction decorate$__(decorators,target,key,desc){\n\tvar c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\tif (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\telse for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\treturn c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport {αbound as imba_αbound, αlazy as imba_αlazy, use_hooks as imba_use_hooks, hooks as imba_hooks, emit as imba_emit, env as imba_env, listen as imba_listen, once as imba_once, unlisten as imba_unlisten} from 'imba';\n(imba_use_hooks());\nconst $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__'), $body$ = Symbol.for('#body'), $cookies$ = Symbol.for('#cookies'), $authenticated$ = Symbol.for('#authenticated'), $started$ = Symbol.for('#started'), $hose$ = Symbol.for('#hose');\nvar $1 = Symbol();\n\n/*body*/\nimport {MemoMap} from './utils';\nimport {Serializer,pack,unpack} from './msgpack';\nimport {Message} from './protocol';\nimport {Component} from './component';\nimport cluster from 'cluster';\nimport np from 'path';\nimport nfs from 'fs';\nimport zlib from 'zlib';\nimport qsp from 'querystring';\nimport {Publication} from './publication';\nimport Branca from 'branca?external';\nimport * as uwsutil from './util/uws.mjs';\nimport {Buffer} from 'buffer';\n\nimport {BinaryChunk} from './fields/binarystream';\nimport {PassThrough} from 'stream';\nimport http from 'node:http';\nimport nfsp from 'node:fs/promises';\nimport fetch from 'node-fetch';\nimport mimes from '../vendor/mimes.js';\n\nimport {App,SSLApp,us_listen_socket_close,getParts} from 'uWebSockets.js?external';\nimport ustatic from '../vendor/ustatic';\nimport $2 from './webworker?sharedworker';\n\nfunction register(server,type,path,cb,options = {}){\n\t\n\tlet handler = new Handler(server,type,path,cb,options);\n\tserver.uws[type](path,handler.handler);\n\t// add route without trailing slash when applicable\n\tif (path.slice(-2) == '/*' && path.length > 2) {\n\t\t\n\t\tserver.uws[type](path.slice(0,-2),handler.handler);\n\t};\n\treturn server;\n};\n\n// rich interface for setting cache headers\nexport class CacheHeader {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $3;\n\t\t($3 = $$.age) !== undefined && (this.age = $3);\n\t\t\n\t}\n\tconstructor($$ = null){\n\t\tthis[$__init__$]($$);\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tthis.age = $$ ? $$.age : undefined;\n\t\t\n\t}\n\tstatic {\n\t\tdefineName$__(this,'CacheHeader');}\n};\n\nexport class Accept {\n\t\n\tstatic get(str){\n\t\t\n\t\treturn this.cache[str] ||= new this(str);\n\t}\n\t\n\tconstructor(str){\n\t\t\n\t\tthis.any = false;\n\t\tthis.html = false;\n\t\tthis.json = false;\n\t\tthis.msgpack = false;\n\t\tthis.gzip = false;\n\t\t\n\t\tlet types = str.split(',');\n\t\tfor (let $4 = 0, $5 = iter$__(types), $6 = $5.length; $4 < $6; $4++) {\n\t\t\tlet type = $5[$4];\n\t\t\tlet parts = type.match(/^\\s*([\\w\\-\\*]+)\\/([\\w\\-\\*]+)(;q=(0.9))?/);\n\t\t\tif (parts && (parts[1] == 'text' || parts[1] == 'application')) {\n\t\t\t\t\n\t\t\t\tthis[parts[2]] = true;\n\t\t\t};\n\t\t\t\n\t\t\tif (type == '*/*') {\n\t\t\t\t\n\t\t\t\tthis.any = true;\n\t\t\t};\n\t\t};\n\t\tthis;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Accept');this.cache = {};\n\t}\n};\n\nexport class Handler {\n\t\n\tconstructor(server,type,path,cb,options){\n\t\tvar $7;\n\t\t\n\t\t// parse the path parameters - to allow adding them here\n\t\t$7 = [];\n\t\tfor (let i = 0, $8 = iter$__(path.split('/')), $9 = $8.length; i < $9; i++) {\n\t\t\tlet part = $8[i];\n\t\t\tif (part[0] != ':') { continue; };\n\t\t\t$7.push(part.slice(1));\n\t\t};\n\t\tlet params = $7;\n\t\t\n\t\tif (cb.length == 3) {\n\t\t\t\n\t\t\tconsole.warn(\"found cb with three arguments\",path,type);\n\t\t};\n\t\t\n\t\tlet pre = server.cookieΞprefix;\n\t\t\n\t\tthis.handler = async function(res,req) {\n\t\t\t\n\t\t\t\n\t\t\tlet hh = {};\n\t\t\treq.forEach(function(key,value) {\n\t\t\t\t\n\t\t\t\treturn hh[key] = value;\n\t\t\t});\n\t\t\t\n\t\t\tlet ctx = new ServerRequest({\n\t\t\t\theaders: hh,\n\t\t\t\tserver: server,\n\t\t\t\thost: hh.host,\n\t\t\t\tmethod: (type == 'any') ? req.getMethod() : type,\n\t\t\t\turl: req.getUrl(),\n\t\t\t\tqs: req.getQuery(),\n\t\t\t\taccept: Accept.get(hh.accept || ''),\n\t\t\t\tgzip: (/gzip/).test(hh['accept-encoding'] || ''),\n\t\t\t\tparams: {},\n\t\t\t\tresponse: res\n\t\t\t});\n\t\t\t\n\t\t\tlet call;\n\t\t\t\n\t\t\tres.onAborted(function() {\n\t\t\t\t\n\t\t\t\tres.aborted = true;\n\t\t\t\tif (call) { return imba_emit(call,'aborted',[]) };\n\t\t\t});\n\t\t\t\n\t\t\tif (params.length) {\n\t\t\t\t\n\t\t\t\tfor (let i = 0, $10 = iter$__(params), $11 = $10.length; i < $11; i++) {\n\t\t\t\t\tlet param = $10[i];\n\t\t\t\t\tctx.params[param] = req.getParameter(i);\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\t// we have serverside cookies\n\t\t\tif (hh.cookie?.indexOf?.(pre) >= 0) {\n\t\t\t\t\n\t\t\t\tlet sess = ctx.session = OP.Session.get(ctx.cookies.session);\n\t\t\t\t\n\t\t\t\t// if the session is not resolved - don't call handler\n\t\t\t\tif (sess && !(sess.resolvedΦ)) {\n\t\t\t\t\t\n\t\t\t\t\tawait sess;\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tcall = new Response(ctx,res);\n\t\t\t\n\t\t\tlet handle = cb(ctx,call);\n\t\t\t\n\t\t\tif (handle instanceof Promise) {\n\t\t\t\t\n\t\t\t\tawait handle;\n\t\t\t};\n\t\t\t\n\t\t\treturn;\n\t\t};\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Handler');}\n};\n\n/*\nRather a BinaryStreamChannel?\nCombine with the FileSystem thing?\nShould we include a BinaryStream object?\nTODO @team Rename\n*/\n\nexport class Room extends Component {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $12;\n\t\tsuper[$__patch__$] && super[$__patch__$]($$,fields);\n\t\t($12 = $$.name) !== undefined && (this.name = $12);\n\t\t($12 = $$.sockets) !== undefined && (this.sockets = $12);\n\t\t($12 = $$.inbox) !== undefined && (this.inbox = $12);\n\t\t\n\t}\n\tconstructor(){\n\t\tsuper(...arguments);\n\t\tsuper[$__init__$] || this[$__init__$]();this[$__initor__$]===$1 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tvar $13;\n\t\tdeep && super[$__init__$] && super[$__init__$](...arguments);\n\t\tthis.name = $$ ? $$.name : undefined;\n\t\tthis.sockets = ($$ && ($13 = $$.sockets) !== undefined) ? ($13) : (new Set);\n\t\tthis.inbox = ($$ && ($13 = $$.inbox) !== undefined) ? ($13) : [];\n\t\t\n\t}\n\tasync awaited(){\n\t\t\n\t\t// insecure?\n\t\tthis.src = (\"\" + (process.env.OP_LFS_DIR) + `/` + this.name);\n\t\tthis.offset = 0;\n\t\tthis.file = await nfsp.open(this.src,'a+');\n\t\tthis.stat = await this.file.stat();\n\t\tthis.writestream = this.file.createWriteStream();\n\t\t\n\t\tthis.offset = this.stat.size;\n\t\t\n\t\twhile (this.inbox.length){\n\t\t\t\n\t\t\t// now going thrugh them all\n\t\t\tlet [msg,ws] = this.inbox.shift();\n\t\t\tthis.onmessage(msg,ws);\n\t\t};\n\t\t\n\t\treturn true;\n\t}\n\t\n\tget byteLength(){\n\t\t\n\t\treturn this.offset;\n\t}\n\t\n\tasync joined(ws){\n\t\t\n\t\tthis.sockets.add(ws);\n\t\tws.subscribe(this.name);\n\t\tawait this;\n\t\tws.send(BinaryState.packed(this.offset,null),true);\n\t\treturn console.log((`room ` + this.name + ` joined : ` + (this.sockets.size) + ` sockets`));\n\t}\n\t\n\tleft(ws){\n\t\t\n\t\treturn this.sockets.delete(ws);\n\t}\n\t\n\tseek(to){\n\t\t\n\t\tif (to > this.offset) {\n\t\t\t\n\t\t\treturn true;\n\t\t};\n\t}\n\t\n\tread(offset,length){\n\t\tvar self = this;\n\t\t\n\t\treturn new Promise(function(resolve) {\n\t\t\t\n\t\t\tif ((offset + length) > self.byteLength) {\n\t\t\t\t\n\t\t\t\tconsole.log(`cannot read past end of file (according to server)`);\n\t\t\t};\n\t\t\t\n\t\t\tlet buf = Buffer.alloc(length);\n\t\t\treturn self.file.read(buf,0,length,offset).then(function(out) {\n\t\t\t\t\n\t\t\t\tlet arr = new Uint8Array(out.buffer);\n\t\t\t\tlet res = new BinaryChunk(offset,arr);\n\t\t\t\treturn resolve(res);\n\t\t\t});\n\t\t});\n\t}\n\t\n\tpatch(offset,data){\n\t\tvar self = this;\n\t\t\n\t\treturn new Promise(async function(resolve) {\n\t\t\t\n\t\t\tawait self.file.sync();\n\t\t\tif (true) {\n\t\t\t\t\n\t\t\t\tawait self.file.write(data,0,data.byteLength,offset);\n\t\t\t};\n\t\t\treturn resolve(self);\n\t\t});\n\t}\n\t\n\t/**\n\t@param {ArrayBuffer} raw\n\t*/\n\tonmessage(raw,ws){\n\t\t\n\t\ttry {\n\t\t\t\n\t\t\tlet t0 = this.pfn;\n\t\t\tlet msg = (raw instanceof ArrayBuffer) ? OP.$parse(raw) : raw;\n\t\t\tif (!(this.stat)) {\n\t\t\t\t\n\t\t\t\treturn this.inbox.push([msg,ws]);\n\t\t\t};\n\t\t\t\n\t\t\tlet fwd = false;\n\t\t\tif (msg instanceof BinaryChunkRequest) {\n\t\t\t\t\n\t\t\t\tthis.read(msg.byteStart,msg.byteLength).then(function(chunk) {\n\t\t\t\t\t\n\t\t\t\t\treturn ws.send(OP.$pack(chunk),true);\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t\tif (msg instanceof BinaryPatch) {\n\t\t\t\t\n\t\t\t\tif (msg.byteEnd > this.offset) {\n\t\t\t\t\t\n\t\t\t\t\tconsole.log(`cannot patch past the end of the file!!`);\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tthis.patch(msg.byteStart,msg.data);\n\t\t\t\t\tfwd = true;\n\t\t\t\t};\n\t\t\t} else if (msg instanceof BinaryChunk) {\n\t\t\t\t\n\t\t\t\t// TODO see that the sender is allowed to write to this(!)\n\t\t\t\tlet overlap = this.offset - msg.offset;\n\t\t\t\t\n\t\t\t\tif (overlap > 0) {\n\t\t\t\t\t\n\t\t\t\t\tconsole.log(`trying to overwrite bytes`);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tif (overlap == 0) {\n\t\t\t\t\t\n\t\t\t\t\tlet buffer = Buffer.from(msg.data.buffer);\n\t\t\t\t\tthis.writestream.write(buffer);\n\t\t\t\t\tthis.offset += msg.data.length;\n\t\t\t\t\tfwd = true;\n\t\t\t\t};\n\t\t\t\tif (overlap < 0) {\n\t\t\t\t\t\n\t\t\t\t\tws.send(BinaryChunkRequest.packed(this.offset),true);\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tlet t1 = this.pfn;\n\t\t\t\n\t\t\tif (fwd) {\n\t\t\t\t\n\t\t\t\tthis.out = (raw instanceof ArrayBuffer) ? raw : OP.$pack(msg);\n\t\t\t\tws.publish(this.name,this.out,true);\n\t\t\t};\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t\n\t\t\treturn console.log(`error in onmessage`,e,new Uint8Array(raw));\n\t\t};\n\t}\n\t\n\tteardown(){\n\t\tvar $14;\n\t\t\n\t\t((($14 = this.owner.rooms[this.name]),delete this.owner.rooms[this.name], $14));\n\t\treturn this;\n\t}\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $1;defineName$__(this,'Room');inheritClass$__(this);}\n};\n\nexport class Server {\n\t\n\t\n\tsync(){\n\t\t\n\t\tlet mu = process.memoryUsage();\n\t\t// only do this if someone starts listening?\n\t\t// model.$update(heap: mu.heapUsed, rss: mu.rss, sockets: sockets.size)\n\t\treturn true;\n\t}\n\t\n\tasync kill(){\n\t\t\n\t\tif (this.model) {\n\t\t\t\n\t\t\tawait this.model.$update({_del: OP.now});\n\t\t};\n\t\treturn this;\n\t}\n\t\n\tcreateCookie(name,value,maxΞage = null,secret = false){\n\t\t\n\t\tif (secret) { value = this.encode(value) };\n\t\tlet str = (\"\" + this.cookieΞprefix + `-` + (secret ? '-' : '') + name + `=` + value + `; path=/`);\n\t\tif (maxΞage) { str += (`;max-age=` + Math.round(maxΞage / 1000)) };\n\t\tif (this.cookieΞdomain) { str += (`;Domain=` + this.cookieΞdomain) };\n\t\treturn str;\n\t}\n\t\n\tupgrade(res,req,context){\n\t\t\n\t\t// allow bound function?\n\t\tlet headers = {};\n\t\treq.forEach(function(key,val) {\n\t\t\t\n\t\t\treturn headers[key] = val;\n\t\t});\n\t\t\n\t\tlet ip = headers['x-forwarded-for'] || Buffer.from(res.getRemoteAddress().slice(-4)).join('.');\n\t\t\n\t\tlet state = this.parseCookies(headers.cookie);\n\t\tlet cookieToSet = null;\n\t\tstate.url = req.getUrl();\n\t\t\n\t\t// only when this is the main header?\n\t\tif (!(state.session)) {\n\t\t\t\n\t\t\tstate.session = OP.Session.build();\n\t\t\tcookieToSet = this.createCookie('session',state.session.id,null,true);\n\t\t};\n\t\t\n\t\tstate.ua = headers['user-agent'];\n\t\tstate.ip = ip;\n\t\tif (headers['cf-ipcountry']) { state.country = headers['cf-ipcountry'] };\n\t\t\n\t\tif (typeof state.session == 'string') {\n\t\t\t\n\t\t\tlet sess = state.session = OP.Session.get(state.session);\n\t\t};\n\t\t\n\t\tlet swk = headers['sec-websocket-key'];\n\t\tlet swp = headers['sec-websocket-protocol'];\n\t\tlet swe = headers['sec-websocket-extensions'];\n\t\t\n\t\treturn res.cork(function() {\n\t\t\t\n\t\t\t// await the session?\n\t\t\t// here we can set the session cookie if needed\n\t\t\tif (cookieToSet) { res.writeStatus('101').writeHeader('Set-Cookie',cookieToSet) };\n\t\t\treturn res.upgrade(state,swk,swp,swe,context);\n\t\t});\n\t}\n\t\n\t/**\n\t@param {ServerAdapter} adapter\n\t*/\n\tconstructor(adapter,o = {}){\n\t\tvar self = this;\n\t\t\n\t\t// we are not persisting server ids now\n\t\tthis.model = adapter.node = adapter.server = OP.Server.build({\n\t\t\tpid: process.pid\n\t\t});\n\t\t// model.save!\n\t\tadapter.servers.add(this);\n\t\tthis.syncer = setInterval(function() { return self.sync(); },2000);\n\t\t\n\t\t// process.on('SIGKILL') do\n\t\t\n\t\t// also control the unknown server?\n\t\tOP.Server.unknown.$handler = adapter;\n\t\tthis.adapter = adapter;\n\t\tthis.pubs = new MemoMap(function(_0) { return new Publication(self,{id: _0}); });\n\t\tthis.publications = [];\n\t\tthis.clients = new Set;\n\t\tthis.sockets = new Set;\n\t\tthis.rooms = {};\n\t\tthis.options = o;\n\t\tthis.name = o.name || 'op';\n\t\tthis.cookieΞprefix = (process.env.OP_COOKIE_PREFIX || process.env.OP_NAME || this.name) + 'v2';\n\t\tthis.cookieΞdomain = process.env.OP_COOKIE_DOMAIN;\n\t\tthis.cookieΞparseΞcache = {};\n\t\tthis.ssl = !(!(o.key_file_name));\n\t\t/**@type {TemplatedApp}*/ this.uws = o.uws || (this.ssl ? SSLApp(o) : App(o));\n\t\t\n\t\t\n\t\t\n\t\tif (import.meta.env?.MODE == 'development') {\n\t\t\t\n\t\t\timport('connect').then(function({'default': default$}) {\n\t\t\t\t\n\t\t\t\to.bundlerPort ||= 30011;\n\t\t\t\tconst srv = default$();\n\t\t\t\tsrv.listen(o.bundlerPort);\n\t\t\t\treturn import('imba/plugin').then(function({setupVite: setupVite}) {\n\t\t\t\t\t\n\t\t\t\t\treturn setupVite(srv,{mode: self.mode});\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\t;\n\t\t\n\t\tif (this.ssl && false) {\n\t\t\t\n\t\t\tthis.uws.missingServerName(function(_0) {\n\t\t\t\t\n\t\t\t\tconsole.log('missing server name',_0);\n\t\t\t\treturn self.uws.addServerName(_0,o);\n\t\t\t});\n\t\t};\n\t\t\n\t\tthis.uws.ws('/op/room/*',{\n\t\t\tmaxPayloadLength: 1024 * 4096,\n\t\t\tupgrade: this.upgrade,\n\t\t\topen: function(ws) {\n\t\t\t\t\n\t\t\t\tlet name = ws.url.split('/op/room/')[1];\n\t\t\t\tlet room = ws.room = self.rooms[name] ||= new Room(self,{name: name});\n\t\t\t\treturn room.joined(ws);\n\t\t\t},\n\t\t\t\n\t\t\tmessage: function(ws,raw) {\n\t\t\t\t\n\t\t\t\tws.room.onmessage(raw,ws);\n\t\t\t\treturn;\n\t\t\t},\n\t\t\t\n\t\t\tclose: function(ws) {\n\t\t\t\t\n\t\t\t\tif (ws.room) { return ws.room.left(ws) };\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.uws.ws('/op/ws',{\n\t\t\tidleTimeout: 32,\n\t\t\tmaxBackpressure: 1024 * 1024,\n\t\t\tmaxPayloadLength: 1024 * 4096,// hmm - be careful about this? - should possibly send data some other way?\n\t\t\t\n\t\t\tupgrade: this.upgrade,\n\t\t\t\n\t\t\topen: async function(ws) {\n\t\t\t\t\n\t\t\t\tif (await ws.session) {\n\t\t\t\t\t\n\t\t\t\t\tws.session.ua = ws.ua;\n\t\t\t\t\tws.session.ip = ws.ip;\n\t\t\t\t\tws.session.server = self.model;\n\t\t\t\t\t\n\t\t\t\t\tawait ws.session.save();\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tself.sockets.add(ws);\n\t\t\t\tws.clients = new Set;\n\t\t\t\tws.session.$socket = ws;\n\t\t\t\t\n\t\t\t\tif (ws.session) {\n\t\t\t\t\t\n\t\t\t\t\tws.subscribe(ws.session.id);\n\t\t\t\t\tlet uid = ws.session.user?.id;\n\t\t\t\t\tif (uid) { ws.subscribe(uid) };\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tnull;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tws.subscribe('hmr');\n\t\t\t\tws.subscribe('all');\n\t\t\t\t\n\t\t\t\treturn ws.send(OPHandshake.packed(ws.session),true);\n\t\t\t},\n\t\t\t\n\t\t\tmessage: async function(ws,raw,binary) {\n\t\t\t\t\n\t\t\t\tif (!(binary)) { return };\n\t\t\t\tlet t0 = globalThis.performance.now();\n\t\t\t\tlet bytes = new Uint8Array(raw);\n\t\t\t\tlet len = bytes.length;\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\tlet pre = bytes[0];\n\t\t\t\t\tlet msg = OP.$parse(bytes,ws);\n\t\t\t\t\t\n\t\t\t\t\tlet slot = 0;\n\t\t\t\t\tlet res;\n\t\t\t\t\t\n\t\t\t\t\tif (msg instanceof Array) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tslot = msg[0];\n\t\t\t\t\t\tmsg = msg[1];\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tlet client = ws[slot];\n\t\t\t\t\t\n\t\t\t\t\t// session should get a slot\n\t\t\t\t\t\n\t\t\t\t\tif (slot && !(client)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tclient = OP.Client.from(ws.session,slot);\n\t\t\t\t\t\t// TODO await client to avoid collisions?\n\t\t\t\t\t\t// should not need to set the server - it is implied by the session?\n\t\t\t\t\t\t// client.server = model\n\t\t\t\t\t\tws[slot] = client;\n\t\t\t\t\t\tclient.$socket = ws;\n\t\t\t\t\t\tws.clients.add(client);\n\t\t\t\t\t\tself.clients.add(client);\n\t\t\t\t\t\tawait client.persist();\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tlet agent = client || ws.session;\n\t\t\t\t\t\n\t\t\t\t\tif (msg instanceof OPSerialization) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tres = await OP.$handle(msg,agent);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tres = e;\n\t\t\t\t\t};\n\t\t\t\t\tlet reply = new Message.Reply({ref: -msg.ref,value: res});\n\t\t\t\t\tlet bin = OP.$pack([slot,reply],client);\n\t\t\t\t\t\n\t\t\t\t\treturn ws.send(bin,true);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t\n\t\t\t\t\treturn console.log('error when handing ws message');\n\t\t\t\t} finally {\n\t\t\t\t\t\n\t\t\t\t\tLL((`incoming ` + len + `b - took ` + (globalThis.performance.now() - t0)));\n\t\t\t\t};\n\t\t\t},\n\t\t\t\n\t\t\tclose: function(ws) {\n\t\t\t\t\n\t\t\t\tlet sess = ws.session;\n\t\t\t\tfor (let client of iter$__(ws.clients)){\n\t\t\t\t\t\n\t\t\t\t\tself.clients.delete(client);\n\t\t\t\t\tif (client.$socket == ws) { client.$socket = null };\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tsess.$socket = null;\n\t\t\t\tws.session = null;\n\t\t\t\t\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\n\t\t\t\t\t// why not just update directly in db?\n\t\t\t\t\t// or should we rather rely on something else?\n\t\t\t\t\tif (!(sess.$socket)) { return sess.$update({server: null}) };\n\t\t\t\t},1000);\n\t\t\t\t\n\t\t\t\t// mark as closed?\n\t\t\t\treturn self.sockets.delete(ws);\n\t\t\t}\n\t\t});\n\t\t\n\t\t// add path for listening to op/fs\n\t\t\n\t\tlet notifier = async function(item) {\n\t\t\tvar $15;\n\t\t\t\n\t\t\t\n\t\t\tlet packed = {};\n\t\t\tlet plain = {};\n\t\t\tawait item;\n\t\t\t\n\t\t\tlet packer = function(role) {\n\t\t\t\t\n\t\t\t\tlet out;\n\t\t\t\treturn packed[role] ??= true && (\n\t\t\t\t\t\n\t\t\t\t\tout = plain[role] = item.dehydrateΞfor(null,role),\n\t\t\t\t\tout.id = item.id,\n\t\t\t\t\tOPData.packed(out)\n\t\t\t\t);\n\t\t\t};\n\t\t\t\n\t\t\t$15 = [];\n\t\t\tfor (let socket of iter$__(self.sockets)){\n\t\t\t\t\n\t\t\t\tlet role = 0;\n\t\t\t\tlet user = socket.session?.user;\n\t\t\t\tif (user == item.$key) {\n\t\t\t\t\t\n\t\t\t\t\trole = OP.OWNER;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tif ((item instanceof OPPov) && role == 0) {\n\t\t\t\t\t\n\t\t\t\t\tcontinue;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\trole = await item.rolesΞfor(user);\n\t\t\t\tlet obj = packer(role);\n\t\t\t\t\n\t\t\t\t$15.push(obj && socket.send(obj,true));\n\t\t\t};\n\t\t\treturn $15;\n\t\t};\n\t\t\n\t\tadapter.wal.init();\n\t\t\n\t\tadapter.on('change',function(id,diff) {\n\t\t\t\n\t\t\tlet item = OP.get(id);\n\t\t\t// triggered either via the wal or when we somehow load a row from the db in general?\n\t\t\treturn notifier(item);\n\t\t});\n\t\t\n\t\tif (import.meta.env?.MODE == \"development\") {\n\t\t\t\n\t\t\tthis.uws.get(`/*`,function(res,req) {\n\t\t\t\t\n\t\t\t\tconst url = req.getUrl();\n\t\t\t\tconst query = req.getQuery();\n\t\t\t\tconst port = o.bundlerPort;\n\t\t\t\tlet targetUrl = (\"http://localhost:\" + port + url);\n\t\t\t\tif (query) { targetUrl += (\"?\" + query) };\n\t\t\t\t\n\t\t\t\tconst options = {headers: req.getHeader};\n\t\t\t\tres.onAborted(function() { return res.aborted = true; });\n\t\t\t\tconst getReq = http.get(targetUrl,options,function(proxyResponse) {\n\t\t\t\t\t\n\t\t\t\t\tfor (let $18 = proxyResponse.headers, $16 = 0, $17 = Object.keys($18), $19 = $17.length, header, value; $16 < $19; $16++){\n\t\t\t\t\t\theader = $17[$16];value = $18[header];\n\t\t\t\t\t\tres.writeHeader(header,value);\n\t\t\t\t\t};\n\t\t\t\t\tproxyResponse.on(\"data\",function(chunk) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!(res.aborted)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet result = res.write(chunk);\n\t\t\t\t\t\t\tif (!(result)) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn res.cork();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t\treturn proxyResponse.on(\"end\",function() {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!(res.aborted)) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn res.end();\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn getReq.on(\"error\",function(err) {\n\t\t\t\t\t\n\t\t\t\t\tconsole.error((\"Error proxying request to \" + targetUrl),err);\n\t\t\t\t\tif (!(res.aborted)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn res.writeStatus(\"500 Internal Server Error\").end(\"An error occurred.\");\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\t\t} else if ((o.assetsPath ??= globalThis.IMBA_ASSETS_PATH)) {\n\t\t\t\n\t\t\t// TODO Add headers for caching?\n\t\t\tthis.uws.get((`/` + (o.assetsPath) + `/*`),ustatic(imba_env.publicPath,{\n\t\t\t\tsecure: !(!(this.ssl)),\n\t\t\t\tcompressions: ['br','gzip','deflate'],\n\t\t\t\tminStreamSize: 2048 * 2048,\n\t\t\t\tmaxCacheSize: 2048 * 2048,\n\t\t\t\twriteHeaders: function(res,path) {\n\t\t\t\t\t\n\t\t\t\t\tres.writeHeader('cache-control','public, max-age=31536000');\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}));\n\t\t};\n\t\t\n\t\tlet fshandler;\n\t\t// should probably cache - but the sizes may change very quickly\n\t\tfshandler = ustatic(adapter.fs.path,{\n\t\t\tcompressions: ['gzip','deflate'],\n\t\t\tetag: false,\n\t\t\tcache: false,\n\t\t\tnotFound: function(res,req) {\n\t\t\t\t\n\t\t\t\tconsole.log('file not found!!',req);\n\t\t\t\treturn self.emit('fs:missing',res);\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.uws.get('/op/worker.js',function(res,req) {\n\t\t\t\n\t\t\t\n\t\t\tlet js = ($2);\n\t\t\t\n\t\t\tres.writeHeader('Content-type','text/javascript');\n\t\t\tres.writeHeader('Cross-Origin-Opener-Policy','same-origin');\n\t\t\tres.writeHeader('Cross-Origin-Embedder-Policy','require-corp');\n\t\t\treturn res.end(js.body);\n\t\t});\n\t\t\n\t\tthis.uws.get('/op/fs/*',function(res,req) {\n\t\t\t\n\t\t\t// generating the state outside of ustatic so that it can respond later\n\t\t\tlet url = req.getUrl();\n\t\t\tlet path = globalThis.decodeURIComponent(url.replace('/op/fs/',''));\n\t\t\t\n\t\t\tlet state = {\n\t\t\t\turl: path,\n\t\t\t\tencoding: req.getHeader('accept-encoding'),\n\t\t\t\taccept: req.getHeader('accept'),\n\t\t\t\trange: req.getHeader('range'),\n\t\t\t\text: np.extname(path).slice(1)\n\t\t\t};\n\t\t\t\n\t\t\tres[ustatic.state] = state;\n\t\t\t\n\t\t\tObject.assign(res,state);\n\t\t\t// TODO implement some sort of authentication for this\n\t\t\tres.onAborted(function() { return res.aborted = true; });\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tconsole.log((\"handling static file \" + path));\n\t\t\t\treturn fshandler(res,req);\n\t\t\t} catch (e) {\n\t\t\t\t\n\t\t\t\tconsole.log(\"error handling static file\",e);\n\t\t\t\treturn true;\n\t\t\t};\n\t\t});\n\t\t\n\t\tthis.get(`/op/pub/:id`,function(req,res) {\n\t\t\t\n\t\t\tlet id = req.params.id;\n\t\t\tlet typ = OP.getType(id);\n\t\t\tlet item = typ ? OP.get(id) : id;\n\t\t\tlet match;\n\t\t\t\n\t\t\tfor (let $20 = 0, $21 = iter$__(OP.publications), $22 = $21.length; $20 < $22; $20++) {\n\t\t\t\tlet pub = $21[$20];\n\t\t\t\tif (pub.match(item)) { match = pub;break; };\n\t\t\t};\n\t\t\t\n\t\t\tif (match) {\n\t\t\t\t\n\t\t\t\tres.headers['op-server'] = self.model.id;\n\t\t\t\treturn match.respond(req,res,item);\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tres.status = 404;\n\t\t\t\treturn res.end();\n\t\t\t};\n\t\t});\n\t\t\n\t\tthis.get(`/op/assets/:id`,async function(req,res) {\n\t\t\t\n\t\t\t// Rework asset routing and handling. Not dealing with resizing etc now.\n\t\t\t// Headers should push these out into CF edges\n\t\t\tlet id = req.params.id.replace(/\\.[^/.]+$/,'');\n\t\t\tlet asset = await OP.Asset.get(id);\n\t\t\t\n\t\t\t// TODO: figure out why filePersisted is not populated here although it's been\n\t\t\t// saved in beforePersist hook !!\n\t\t\tif (await asset.inDisk()) { return res.redirect(asset.originalURL) };\n\t\t\t\n\t\t\t// TODO find way to stream file?\n\t\t\tres.status = 404;\n\t\t\treturn res.end();\n\t\t\t\n\t\t\t// TODO save for multipart data...\n\t\t\t// fshandler(res,req)\n\t\t});\n\t\t\n\t\tthis.post(`/op/assets`,async function(req,res) {\n\t\t\t\n\t\t\tres.private();\n\t\t\t// TODO bad interface\n\t\t\tlet parts = await req.parts();\n\t\t\tlet json = await req.json();\n\t\t\tlet data = null;\n\t\t\t\n\t\t\tif (json?.url) {\n\t\t\t\t\n\t\t\t\tlet remote = await fetch(json.url);\n\t\t\t\tlet arr = await remote.arrayBuffer();\n\t\t\t\tdata = Buffer.from(arr);\n\t\t\t};\n\t\t\t\n\t\t\tfor (let $23 = 0, $24 = iter$__(parts), $25 = $24.length; $23 < $25; $23++) {\n\t\t\t\tlet part = $24[$23];\n\t\t\t\tif (part.name == 'file') {\n\t\t\t\t\t\n\t\t\t\t\tdata = Buffer.from(part.data);\n\t\t\t\t\tbreak;\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tif (data) {\n\t\t\t\t\n\t\t\t\tlet id = await OPAsset.for(data);\n\t\t\t\treturn res.mp(id);\n\t\t\t};\n\t\t\t\n\t\t\tif (!(res.abortedΦ)) {\n\t\t\t\t\n\t\t\t\treturn res.json(200);\n\t\t\t};\n\t\t});!this[$__initor__$] && this[$__hooks__$].inited(this);\n\t}\n\t\n\t/**\n\t\n\t\tCurrently op assumes that you have declared a model named Session\n\t\tIn the future op will include built-in Session & User that you\n\t\tcan extend.\n\t\t\n\t*/\n\tget Session(){\n\t\t\n\t\treturn OP.mapping.session;\n\t}\n\t\n\tget User(){\n\t\t\n\t\treturn OP.mapping.user;\n\t}\n\t\n\tget branca(){\n\t\t\n\t\tlet secret = this.options.secret || process.env.OP_SECRET;\n\t\tif (!(secret)) {\n\t\t\t\n\t\t\tconsole.log(`Provide a 'secret' to OP.createServer or define a OP_SECRET env variable for secure cookies`);\n\t\t\tthis.options.secret = secret = '11e9b8e5af5129ffaf8cfdbac0e5ffd46b1c7aa539d1461465d573a38dc531c1';\n\t\t};\n\t\tif (secret && secret.length != 64) {\n\t\t\t\n\t\t\tthrow \"secret / OP_SECRET has to be 64 hex characters\";\n\t\t};\n\t\t\n\t\treturn Branca(secret);\n\t}\n\t\n\t/**\n\t\n\t\tEncode a value with branca. Clients can receive these encoded\n\t\tvalues and the server can trust that decoded values from client\n\t\thas been created by a trusted source (the server)\n\t\t\n\t*/\n\tencode(value){\n\t\t\n\t\tif (value instanceof OPObject) {\n\t\t\t\n\t\t\tvalue = value.id;\n\t\t};\n\t\treturn this.branca.encode(pack(value));\n\t}\n\t\n\tdecode(input){\n\t\t\n\t\ttry {\n\t\t\treturn unpack(this.branca.decode(input));\n\t\t} catch (e) {\n\t\t\t\n\t\t\treturn null;\n\t\t};\n\t}\n\t\n\t// @template [T=any]\n\t/**\n\t@param {T} cond\n\t@param {((walker:OPPubResults,item:(InstanceType<T>))=>any)} setup\n\t*/\n\tpub(cond,setup,options = {}){\n\t\t\n\t\treturn OP.pub(cond,setup,options);\n\t\t// should just add new pubs this way\n\t\t// if setup\n\t\t// \tlet pub = new Publication(self,id: cond,options: options,cb: setup)\n\t\t// \tpublications.push(pub)\n\t\t// \treturn pub\n\t}\n\t\n\t/**\n\t@returns { ((req:ServerRequest,res:Response)=>any) }\n\t*/\n\tauth(cb){\n\t\t\n\t\treturn async function(req,res) {\n\t\t\t\n\t\t\tawait req.authenticate();\n\t\t\t// authenticate here\n\t\t\treturn cb(req,res);\n\t\t};\n\t}\n\t\n\t/**\n\t@param {string} path\n\t@param {((req:ServerRequest,res:Response)=>any)} handler\n\t@param {object} options\n\t*/\n\tget(path,handler,options = {}){\n\t\t\n\t\treturn register(this,'get',path,handler,options);\n\t}\n\t\n\t/**\n\t@param {string} path\n\t@param {((req:ServerRequest,res:Response)=>any)} handler\n\t@param {object} options\n\t*/\n\tpost(path,handler,options = {}){\n\t\t\n\t\treturn register(this,'post',path,handler,options);\n\t}\n\t\n\t/**\n\t@param {string} path\n\t@param {((req:ServerRequest,res:Response)=>any)} handler\n\t@param {object} options\n\t*/\n\tdel(path,handler,options = {}){\n\t\t\n\t\treturn register(this,'del',path,handler,options);\n\t}\n\t\n\t/**\n\t@param {string} path\n\t@param {((req:ServerRequest,res:Response)=>any)} handler\n\t@param {object} options\n\t*/\n\tany(path,handler,options = {}){\n\t\t\n\t\treturn register(this,'any',path,handler,options);\n\t}\n\t\n\t/**\n\t@param {string} path\n\t@param {string} dir\n\t*/\n\tstatic(path,dir,options = {}){\n\t\t\n\t\tdir = np.resolve(process.cwd(),dir);\n\t\t\n\t\tconsole.log(\"USTATIC\",path,dir);\n\t\t\n\t\tthis.uws.get(path,ustatic(dir,Object.assign({\n\t\t\tsecure: !(!(this.ssl)),\n\t\t\tminStreamSize: 1024 * 2048,\n\t\t\tmaxCacheSize: 1024 * 2048,\n\t\t\tcompressions: ['gzip','deflate']// disabling brotli due to speed\n\t\t},options)));\n\t\t\n\t\treturn this;\n\t}\n\t\n\tws(path,options){\n\t\t\n\t\treturn this.uws.ws(path,options);\n\t}\n\t\n\t// TODO fix security -- only allow encoded cookies?\n\tparseCookies(string,target = {}){\n\t\t\n\t\tif (!(string)) { return target };\n\t\t// let cached = cookie-parse-cache\n\t\tlet pre = this.cookieΞprefix + '-';\n\t\tfor (let $26 = 0, $27 = iter$__(string.split('; ')), $28 = $27.length; $26 < $28; $26++) {\n\t\t\tlet item = $27[$26];\n\t\t\tlet [k,v] = item.split(/\\=/);\n\t\t\tif (k.indexOf(pre) == 0) {\n\t\t\t\t\n\t\t\t\tlet name = k.slice(pre.length);\n\t\t\t\tif (name.indexOf('-') == 0) {\n\t\t\t\t\t\n\t\t\t\t\tname = name.slice(1);\n\t\t\t\t\tv = this.decode(v);\n\t\t\t\t};\n\t\t\t\ttarget[name] = v;\n\t\t\t};\n\t\t};\n\t\t\n\t\treturn target;\n\t}\n\t\n\tlisten(...args){\n\t\tvar self = this;\n\t\t\n\t\tlet cb = args.pop();\n\t\t\n\t\treturn this.uws.listen(...args,function(sock) {\n\t\t\t\n\t\t\tlet id = Math.round(Math.random() * 1000);\n\t\t\tLL('running');\n\t\t\tif (globalThis.IMBA_RUN && cluster.isWorker) {\n\t\t\t\t\n\t\t\t\tprocess.on('message',function(msg) {\n\t\t\t\t\t\n\t\t\t\t\tif (msg[1] == 'rebuild') {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet prev = globalThis.IMBA_MANIFEST;\n\t\t\t\t\t\tglobalThis.IMBA_MANIFEST = msg[2];\n\t\t\t\t\t\tlet pkg = SiteManifest.packed(msg[2]);\n\t\t\t\t\t\tself.uws.publish('hmr',pkg,true);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tif (msg[1] == 'reloading') {\n\t\t\t\t\t\t\n\t\t\t\t\t\tus_listen_socket_close(sock);\n\t\t\t\t\t\treturn setTimeout(function() { return process.exit(0); },500);\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t};\n\t\t\t\n\t\t\tconsole.log((\"listening on \" + args.join(':')));\n\t\t\tif (cb) { return cb(sock,self) };\n\t\t});\n\t}\n\t\n\temit(name,...params){\n\t\treturn imba_emit(this,name,params);\n\t}\n\ton(name,...params){\n\t\treturn imba_listen(this,name,...params);\n\t}\n\tonce(name,...params){\n\t\treturn imba_once(this,name,...params);\n\t}\n\tun(name,...params){\n\t\treturn imba_unlisten(this,name,...params);\n\t}\n\tstatic {\n\t\tthis.prototype[$__hooks__$] = imba_hooks;\n\t\tdefineName$__(this,'Server');decorate$__([imba_αbound.bind([])],this.prototype,'upgrade',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'branca',null);\n\t}\n};\n\n// Make this work\nexport class ServerRequest {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $29;\n\t\t($29 = $$.server) !== undefined && (this.server = $29);\n\t\t($29 = $$.host) !== undefined && (this.host = $29);\n\t\t($29 = $$.method) !== undefined && (this.method = $29);\n\t\t($29 = $$.url) !== undefined && (this.url = $29);\n\t\t($29 = $$.qs) !== undefined && (this.qs = $29);\n\t\t($29 = $$.session) !== undefined && (this.session = $29);\n\t\t($29 = $$.headers) !== undefined && (this.headers = $29);\n\t\t($29 = $$.params) !== undefined && (this.params = $29);\n\t\t($29 = $$.accept) !== undefined && (this.accept = $29);\n\t\t($29 = $$.response) !== undefined && (this.response = $29);\n\t\t($29 = $$.gzip) !== undefined && (this.gzip = $29);\n\t\t\n\t}\n\tconstructor($$ = null){\n\t\tthis[$__init__$]($$);\n\t\t!this[$__initor__$] && this[$__hooks__$].inited(this);\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tvar $30;\n\t\tthis.server = $$ ? $$.server : undefined;\n\t\tthis.host = $$ ? $$.host : undefined;\n\t\tthis.method = $$ ? $$.method : undefined;\n\t\tthis.url = $$ ? $$.url : undefined;\n\t\tthis.qs = $$ ? $$.qs : undefined;\n\t\tthis.session = $$ ? $$.session : undefined;\n\t\tthis.headers = $$ ? $$.headers : undefined;\n\t\tthis.params = $$ ? $$.params : undefined;\n\t\tthis.accept = $$ ? $$.accept : undefined;\n\t\tthis.response = $$ ? $$.response : undefined;\n\t\tthis.gzip = ($$ && ($30 = $$.gzip) !== undefined) ? ($30) : false;\n\t\t\n\t}\n\tget query(){\n\t\t\n\t\treturn qsp.parse(this.qs || '');\n\t}\n\t\n\tget ext(){\n\t\t\n\t\treturn (this.url.match(/\\.(\\w+)$/) || [])[1];\n\t}\n\t\n\tget body(){\n\t\tvar self = this;\n\t\t\n\t\treturn this[$body$] ||= new Promise(function(resolve,reject) {\n\t\t\t\n\t\t\tlet buf = Buffer.from([]);\n\t\t\tself.response.onData(function(chunk,lastΦ) {\n\t\t\t\t\n\t\t\t\tbuf = Buffer.concat([buf,Buffer.from(chunk)]);\n\t\t\t\tif (lastΦ) { return resolve(buf) };\n\t\t\t});\n\t\t\t\n\t\t\treturn self.response.onAborted(function() {\n\t\t\t\t\n\t\t\t\tconsole.log('aborted!!');\n\t\t\t\treturn reject(null);\n\t\t\t});\n\t\t});\n\t}\n\t\n\tget jsonΦ(){\n\t\t\n\t\treturn this.headers['content-type'] == 'application/json';\n\t}\n\t\n\tget multipartΦ(){\n\t\t\n\t\treturn this.headers['content-type'].indexOf('multipart/form-data') == 0;\n\t}\n\t\n\tget prefetchΦ(){\n\t\t\n\t\treturn this.headers.purpose == 'prefetch';\n\t}\n\t\n\t// Parsed cookies received in this request\n\tget cookies(){\n\t\t\n\t\treturn this[$cookies$] ||= this.server.parseCookies(this.headers.cookie || '');\n\t}\n\t\n\t/**\n\t@returns { (globalThis.User) }\n\t*/\n\tget user(){\n\t\t\n\t\treturn this.session?.user;\n\t}\n\t\n\tget agent(){\n\t\t\n\t\treturn this.user || this.session;\n\t}\n\t\n\tauthenticate(){\n\t\t\n\t\treturn this[$authenticated$] = true;\n\t}\n\t\n\t// Retrieve the json body\n\t// Returns null if not json\n\tasync json(){\n\t\t\n\t\tif (!(this.jsonΦ)) { return null };\n\t\tlet body = await this.body;\n\t\treturn JSON.parse(body);\n\t}\n\t\n\t// Retrieve multipart body\n\tparts(){\n\t\tvar self = this;\n\t\t\n\t\tif (!(this.multipartΦ)) { return [] };\n\t\treturn new Promise(async function(resolve,reject) {\n\t\t\t\n\t\t\tlet body = await self.body;\n\t\t\treturn resolve(getParts(body,self.headers['content-type']));\n\t\t});\n\t}\n\tstatic {\n\t\tthis.prototype[$__hooks__$] = imba_hooks;\n\t\tdefineName$__(this,'ServerRequest');decorate$__([imba_αlazy.bind([])],this.prototype,'query',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'ext',null);\n\t}\n};\n\nconst ResponseTypes = {\n\tjs: 'text/javascript; charset=UTF-8',\n\thtml: 'text/html; charset=UTF-8'\n};\n\n// should be different types of responses to support the streaming etc\n// based on accepts header?\nexport class Response {\n\t\n\t/**\n\t@param {ServerRequest} ctx\n\t*/\n\tconstructor(ctx,res){\n\t\t\n\t\tthis.ctx = ctx;\n\t\tthis.res = res;\n\t\tthis.user = null;\n\t\t/**@type {Set}*/ this.subs = null;\n\t\tthis.status = 200;\n\t\tthis.headers = {};// always?\n\t\tthis.setHeader(\"op-server\",ctx.server.model.id);\n\t\tthis[$body$] = null;\n\t\t!this[$__initor__$] && this[$__hooks__$].inited(this);\n\t}\n\t\n\t// move away from these - use req.json etc instead\n\tget body(){\n\t\tvar self = this;\n\t\t\n\t\tif (this[$body$]) { return this[$body$] };\n\t\treturn new Promise(function(resolve,reject) {\n\t\t\t\n\t\t\tlet err = function(_0) { return reject(_0); };\n\t\t\treturn uwsutil.readBody(self.res,function(data) {\n\t\t\t\t\n\t\t\t\treturn resolve(self[$body$] = data);\n\t\t\t},err);\n\t\t});\n\t}\n\t\n\t// Makes no sense to have these on the body?\n\tasync bodyΞas(type){\n\t\t\n\t\tconst data = await this.body;\n\t\tswitch (type) {\n\t\t\tcase 'json': {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\treturn JSON.parse(data);\n\t\t\t\t} catch ($31) {\n\t\t\t\t\t\n\t\t\t\t\treturn 'Unable to parse data';\n\t\t\t\t};break;\n\t\t\t}\n\t\t\tcase 'buffer': {\n\t\t\t\t\n\t\t\t\treturn Buffer.from(data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'string': {\n\t\t\t\t\n\t\t\t\treturn data.toString();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\n\t\t\t\t\n\t\t\t\treturn data;\n\t\t\t\n\t\t};\n\t}\n\t\n\tonData(cb){\n\t\t\n\t\tthis.res.onData(cb);\n\t\treturn this;\n\t}\n\t\n\tonAborted(cb){\n\t\t\n\t\timba_once(this,'aborted',cb);\n\t\treturn this;\n\t}\n\t\n\tget server(){\n\t\t\n\t\treturn this.ctx.server;\n\t}\n\t\n\tget abortedΦ(){\n\t\t\n\t\treturn !(!(this.res.aborted));\n\t}\n\t\n\ttype(typ){\n\t\t\n\t\tthis.headers['content-type'] = ResponseTypes[typ] || mimes.get(typ) || typ;\n\t\treturn this;\n\t}\n\t\n\t// should this be on the request or response?\n\tsub(path){\n\t\t\n\t\t// look up the globally available pubs?\n\t\t(this.subs ??= new Set).add(path);\n\t\treturn this;\n\t}\n\t\n\tsecret(name,value,age){\n\t\t\n\t\treturn this.cookie(name,value,age,true);\n\t}\n\t\n\twriteHeader(name,value){\n\t\t\n\t\treturn this.res.writeHeader(name,String(value));\n\t}\n\t\n\tsetHeader(name,value){\n\t\t\n\t\treturn this.headers[name] = String(value);\n\t}\n\t\n\t// clean up this interface\n\tcookie(name,value,maxΞage = null,secret = false){\n\t\t\n\t\tthis.cookies ||= {};\n\t\tthis.cookies[name] = this.server.createCookie(name,value,maxΞage,secret);\n\t\treturn this;\n\t}\n\t\n\tstart(){\n\t\t\n\t\tif ((this[$started$] != true) ? ((this[$started$] = true,true)) : false) {\n\t\t\t\n\t\t\tif (this.status == 200) {\n\t\t\t\t\n\t\t\t\tthis.res.writeStatus('200 OK');\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.res.writeStatus((\"\" + this.status));\n\t\t\t};\n\t\t\t\n\t\t\t// maybe set content type based on extension?\n\t\t\tif (!(this.headers['content-type'])) {\n\t\t\t\t\n\t\t\t\tlet url = this.ctx.url;\n\t\t\t};\n\t\t\t\n\t\t\tfor (let $34 = this.headers, $32 = 0, $33 = Object.keys($34), $35 = $33.length, k, v; $32 < $35; $32++){\n\t\t\t\tk = $33[$32];v = $34[k];\n\t\t\t\tthis.res.writeHeader(k,String(v));\n\t\t\t};\n\t\t\t\n\t\t\tif (this.cookies) {\n\t\t\t\t\n\t\t\t\tfor (let $38 = this.cookies, $36 = 0, $37 = Object.keys($38), $39 = $37.length, k, v; $36 < $39; $36++){\n\t\t\t\t\tk = $37[$36];v = $38[k];\n\t\t\t\t\tthis.res.writeHeader('set-cookie',v);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\treturn this;\n\t}\n\t\n\tok(message,code = 200){\n\t\t\n\t\tif (typeof code == 'number') { this.status = code };\n\t\t// TODO change format based on accept header from request\n\t\treturn this.json(message);\n\t}\n\t\n\tfail(message,code = 401){\n\t\t\n\t\tif (typeof code == 'number') { this.status = code };\n\t\t// TODO change format based on accept header from request\n\t\treturn this.json(message);\n\t}\n\t\n\tjson(value,code){\n\t\t\n\t\tif (this.res.aborted) { return this };\n\t\t\n\t\tif (typeof code == 'number') { this.status = code };\n\t\tthis.headers['content-type'] = 'application/json';\n\t\t// res.writeStatus('200 OK')\n\t\tthis.start();\n\t\t\n\t\tif (value && (value.$serialize instanceof Function)) {\n\t\t\t\n\t\t\tvalue = value.$serialize();\n\t\t};\n\t\t\n\t\treturn this.end(JSON.stringify(value));\n\t}\n\t\n\tmp(data,code){\n\t\t\n\t\tif (typeof code == 'number') { this.status = code };\n\t\tthis.headers['content-type'] = 'application/x-msgpack';\n\t\treturn this.end(OP.pack(data));\n\t}\n\t\n\tblank(){\n\t\t\n\t\tthis.status = 204;\n\t\treturn this.end();\n\t}\n\t\n\tasync html(value){\n\t\tvar self = this;\n\t\t\n\t\tif (this.res.aborted) { return this };\n\t\t\n\t\tlet html = String(value);\n\t\t\n\t\tlet js = [];\n\t\tlet q = '';\n\t\t\n\t\tjs.push((`o.server = '` + (this.ctx.server.model?.id) + `'`));\n\t\t\n\t\tif (this.privateΦ && this.ctx.session) {\n\t\t\t\n\t\t\tlet s = await this.ctx.session;\n\t\t\tlet u = await this.ctx.session.user;\n\t\t\t\n\t\t\t// FIXME should never serialize op models directly without checking for the hidden fields\n\t\t\t// and other role fields in general.\n\t\t\tlet pov = u ? u.id : s.id;\n\t\t\tif (pov) { q = (`?pov=` + pov) };\n\t\t\tjs.push((`o.pov = '` + pov + `' || null`));\n\t\t\tif (pov && u) { js.push((`o.user = ` + JSON.stringify(u))) };\n\t\t\tjs.push((`o.session = ` + JSON.stringify(s)));\n\t\t};\n\t\t\n\t\tif (this.subs) {\n\t\t\t\n\t\t\tfor (let sub of iter$__(this.subs)){\n\t\t\t\t\n\t\t\t\tjs.push((`o.subs['` + sub + `'] = window.fetch('/op/pub/` + sub + q + `',fo)`));\n\t\t\t};\n\t\t};\n\t\t\n\t\tif (js.length) {\n\t\t\t\n\t\t\tlet opobj = '{subs:{},data:[]}';\n\t\t\tlet fo = '{headers:{Accept:\"*/*\"}}';\n\t\t\tlet inject = (`<script>((o,fo=` + fo + `)=>(` + js.join(',') + `))(window[Symbol.for('#op')]=` + opobj + `)</script>`);\n\t\t\thtml = html.replace(/(?=<head>)/,inject);\n\t\t};\n\t\t\n\t\tthis.res.cork(function() {\n\t\t\t\n\t\t\tself.headers['content-type'] = 'text/html; charset=UTF-8';\n\t\t\tself.start();\n\t\t\t// res.writeStatus('200 OK')\n\t\t\t// res.writeHeader('content-type','text/html; charset=UTF-8')\n\t\t\treturn self.res.end(html);\n\t\t});\n\t\t\n\t\treturn this;\n\t}\n\t\n\tend(...values){\n\t\t\n\t\tif (this.res.aborted) { return this };\n\t\tthis.start();\n\t\t\n\t\tif (this[$hose$]) {\n\t\t\t\n\t\t\treturn this[$hose$].autoflush();\n\t\t} else {\n\t\t\t\n\t\t\treturn this.res.end(...values);\n\t\t};\n\t}\n\t\n\t// Potentially identify if this is xhr and communicate the redirect back as a response instead?\n\tredirect(url,kind = 302){\n\t\tvar self = this;\n\t\t\n\t\treturn this.res.cork(function() {\n\t\t\t\n\t\t\tself.status = kind;\n\t\t\tself.headers.location = url;\n\t\t\t// res.writeStatus(`{kind}`)\n\t\t\tself.start();\n\t\t\t// res.writeHeader('location', url)\n\t\t\treturn self.res.end();\n\t\t});\n\t}\n\t\n\tformat(object = {}){\n\t\t\n\t\tlet checks = this.ctx.accept;\n\t\tfor (let $40 = 0, $41 = Object.keys(object), $42 = $41.length, k, v; $40 < $42; $40++){\n\t\t\tk = $41[$40];v = object[k];\n\t\t\tif (checks[k]) {\n\t\t\t\t\n\t\t\t\tif (v instanceof Function) {\n\t\t\t\t\t\n\t\t\t\t\tlet result = v();\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn v;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\treturn this.end();\n\t}\n\t\n\tprivate(age = 0){\n\t\t\n\t\tthis.session;// touch the session\n\t\tthis.privateΦ = true;\n\t\tthis.headers['cache-control'] ||= (`private, max-age=` + Math.floor(age / 1000));\n\t\treturn this;\n\t}\n\t\n\tcache(val){\n\t\t\n\t\tif (val == false) {\n\t\t\t\n\t\t\tthis.headers['cache-control'] = 'no-cache';\n\t\t\t// res.writeHeader('cache-control',`no-cache`)\n\t\t} else if (typeof val == 'string') {\n\t\t\t\n\t\t\tthis.headers['cache-control'] = val;\n\t\t\t// res.writeHeader('cache-control',val)\n\t\t};\n\t\treturn this;\n\t}\n\t\n\tvary(kind = 'Pov'){\n\t\t\n\t\t// not possible to call multiple times etc now\n\t\tthis.headers.vary = kind;\n\t\t// res.writeHeader('vary',kind)\n\t\treturn this;\n\t}\n\t\n\tpublic(age = 0){ // random default for now\n\t\tthis.headers['cache-control'] = (`public, max-age=` + Math.floor(age / 1000));\n\t\treturn this;\n\t}\n\t\n\tget stream(){\n\t\tvar self = this;\n\t\t\n\t\tlet zip = this.ctx.gzip;\n\t\tlet writer = new PassThrough;\n\t\tlet stream = writer;\n\t\t\n\t\tObject.assign(this.headers,{\n\t\t\tconnection: 'keep-alive',\n\t\t\t'content-type': 'application/octet-stream',\n\t\t\t'content-encoding': zip ? 'gzip' : null\n\t\t});\n\t\t\n\t\tif (zip) {\n\t\t\t\n\t\t\tstream = writer.pipe(zlib.createGzip(\n\t\t\t\t{level: zlib.constants.Z_BEST_SPEED,\n\t\t\t\tchunkSize: 2 * 1024,\n\t\t\t\tmemLevel: zlib.constants.Z_MAX_LEVEL}\n\t\t\t));\n\t\t};\n\t\t\n\t\tstream.on('data',function(data) {\n\t\t\t\n\t\t\tif (self.res.aborted) { return };\n\t\t\t\n\t\t\tif ((self.started != true) ? ((self.started = true,true)) : false) {\n\t\t\t\t\n\t\t\t\tself.res.cork(function() { return self.start(); });\n\t\t\t};\n\t\t\t\n\t\t\tif (!(self.res.write(data))) {\n\t\t\t\t\n\t\t\t\t// TODO fix logic for backpressure and aborts\n\t\t\t\tlet lastOffset = self.res.getWriteOffset();\n\t\t\t\tconsole.log('could not write to response',lastOffset,self.res.aborted);\n\t\t\t\tstream.pause();\n\t\t\t\treturn self.res.onWritable(function(offset) {\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('can write again',offset,self.res.aborted);\n\t\t\t\t\treturn stream.resume();\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\t\t\n\t\tstream.on('close',function() {\n\t\t\t\n\t\t\tif (self.res.aborted) { return };\n\t\t\treturn self.res.end();\n\t\t});\n\t\t\n\t\treturn writer;\n\t}\n\t\n\tasync sendFile(path,headers){\n\t\t\n\t\tlet body = await nfsp.readFile(path);\n\t\treturn this.end(body);\n\t}\n\t\n\t// response should never set session here - in OP sessions should only be created\n\t// during websocket upgrade -\n\tget session(){\n\t\t\n\t\treturn OP.Session.get(this.ctx.cookies.session);\n\t\t\n\t\tlet id = this.ctx.cookies.session;\n\t\tif (!(id)) {\n\t\t\t\n\t\t\t// need to overhaul\n\t\t\tid = this.server.Session.generateId();\n\t\t\tconsole.log('generate session!!!',id);\n\t\t\tthis.cookie('session',id,null,true);\n\t\t};\n\t\t\n\t\treturn this.server.Session.get(id);\n\t}\n\tstatic {\n\t\tthis.prototype[$__hooks__$] = imba_hooks;\n\t\tdefineName$__(this,'Response');decorate$__([imba_αlazy.bind([])],this.prototype,'stream',null);\n\t\tdecorate$__([imba_αlazy.bind([])],this.prototype,'session',null);\n\t}\n};\n\n// Just lazy hack for typings now\nclass OPApp extends Server {\nstatic {\n\tdefineName$__(this,'OPApp');inheritClass$__(this);}}; globalThis.OPApp = OPApp;\n","dependencies":[],"map":{"version":3,"file":"server.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/server.imba"],"sourcesContent":["import { MemoMap } from './utils'\nimport type ServerAdapter from './adapter.node'\n\nimport { Serializer, pack, unpack } from './msgpack'\nimport { Message } from './protocol'\nimport { Component } from './component'\nimport cluster from 'cluster'\nimport np from 'path'\nimport nfs from 'fs'\nimport zlib from 'zlib'\nimport qsp from 'querystring'\nimport { Publication } from './publication'\nimport Branca from 'branca?external'\nimport * as uwsutil from './util/uws.mjs'\nimport { Buffer } from 'buffer'\n\nimport { BinaryChunk } from './fields/binarystream'\nimport { PassThrough } from 'stream'\nimport http from 'node:http'\nimport nfsp from 'node:fs/promises'\nimport fetch from 'node-fetch'\nimport mimes from '../vendor/mimes.js'\n\nimport {App,SSLApp,us_listen_socket_close,getParts} from 'uWebSockets.js?external'\nimport type {TemplatedApp} from 'uWebSockets.js'\nimport ustatic from '../vendor/ustatic'\n\ndef register server,type,path,cb,options = {}\n\tlet handler = new Handler(server,type,path,cb,options)\n\tserver.uws[type](path,handler.handler)\n\t# add route without trailing slash when applicable\n\tif path.slice(-2) == '/*' and path.length > 2\n\t\tserver.uws[type](path.slice(0,-2),handler.handler)\n\treturn server\n\n# rich interface for setting cache headers\nexport class CacheHeader\n\tage\\number\n\nexport class Accept\n\tstatic cache = {}\n\n\tstatic def get str\n\t\tcache[str] ||= new self(str)\n\n\tdef constructor str\n\t\tself.any = no\n\t\tself.html = no\n\t\tself.json = no\n\t\tself.msgpack = no\n\t\tself.gzip = no\n\n\t\tlet types = str.split(',')\n\t\tfor type in types\n\t\t\tlet parts = type.match(/^\\s*([\\w\\-\\*]+)\\/([\\w\\-\\*]+)(;q=(0.9))?/)\n\t\t\tif parts and (parts[1] == 'text' or parts[1] == 'application')\n\t\t\t\tself[parts[2]] = yes\n\n\t\t\tif type == '*/*'\n\t\t\t\tself.any = yes\n\t\tself\n\nexport class Handler\n\tdef constructor server,type,path,cb,options\n\t\t# parse the path parameters - to allow adding them here\n\t\tlet params = for part,i in path.split('/') when part[0] == ':'\n\t\t\tpart.slice(1)\n\n\t\tif cb.length == 3\n\t\t\tconsole.warn \"found cb with three arguments\",path,type\n\n\t\tlet pre = server.cookie-prefix\n\n\t\thandler = do(res,req)\n\n\t\t\tlet hh = {}\n\t\t\treq.forEach do(key,value)\n\t\t\t\thh[key] = value\n\n\t\t\tlet ctx = new ServerRequest({\n\t\t\t\theaders: hh\n\t\t\t\tserver: server\n\t\t\t\thost: hh.host\n\t\t\t\tmethod: type == 'any' ? req.getMethod() : type\n\t\t\t\turl: req.getUrl!\n\t\t\t\tqs: req.getQuery!\n\t\t\t\taccept: Accept.get(hh.accept or '')\n\t\t\t\tgzip: (/gzip/).test(hh['accept-encoding'] or '')\n\t\t\t\tparams: {}\n\t\t\t\tresponse: res\n\t\t\t})\n\n\t\t\tlet call\n\n\t\t\tres.onAborted do\n\t\t\t\tres.aborted = yes\n\t\t\t\timba.emit(call,'aborted',[]) if call\n\n\t\t\tif params.length\n\t\t\t\tfor param,i in params\n\t\t\t\t\tctx.params[param] = req.getParameter(i)\n\n\t\t\t# we have serverside cookies\n\t\t\tif hh.cookie..indexOf(pre) >= 0\n\t\t\t\tlet sess = ctx.session = OP.Session.get(ctx.cookies.session)\n\n\t\t\t\t# if the session is not resolved - don't call handler\n\t\t\t\tif sess and !sess.resolved?\n\t\t\t\t\tawait sess\n\n\t\t\tcall = new Response(ctx,res)\n\n\t\t\tlet handle = cb(ctx,call)\n\n\t\t\tif handle isa Promise\n\t\t\t\tawait handle\n\n\t\t\treturn\n\n###\nRather a BinaryStreamChannel?\nCombine with the FileSystem thing?\nShould we include a BinaryStream object?\nTODO @team Rename\n###\nexport class Room < Component\n\tprop name\n\tprop sockets = new Set\n\tprop inbox = []\n\n\tdef awaited\n\t\t# insecure?\n\t\tsrc = `{process.env.OP_LFS_DIR}/{name}`\n\t\toffset = 0\n\t\tfile = await nfsp.open(src,'a+')\n\t\tstat = await file.stat()\n\t\twritestream = file.createWriteStream()\n\n\t\toffset = stat.size\n\n\t\twhile inbox.length\n\t\t\t# now going thrugh them all\n\t\t\tlet [msg,ws] = inbox.shift!\n\t\t\tonmessage(msg,ws)\n\n\t\tyes\n\n\tget byteLength\n\t\toffset\n\n\tdef joined ws\n\t\tsockets.add(ws)\n\t\tws.subscribe(name)\n\t\tawait self\n\t\tws.send BinaryState.packed(offset,null), yes\n\t\tconsole.log `room {name} joined : {sockets.size} sockets`\n\n\tdef left ws\n\t\tsockets.delete(ws)\n\n\tdef seek to\n\t\tif to > offset\n\t\t\tyes\n\n\tdef read offset, length\n\t\tnew Promise do(resolve)\n\t\t\tif (offset + length) > byteLength\n\t\t\t\tconsole.log `cannot read past end of file (according to server)`\n\n\t\t\tlet buf = Buffer.alloc(length)\n\t\t\tfile.read(buf,0,length,offset).then do(out)\n\t\t\t\tlet arr = new Uint8Array(out.buffer)\n\t\t\t\tlet res = new BinaryChunk(offset,arr)\n\t\t\t\tresolve(res)\n\n\tdef patch offset, data\n\t\tnew Promise do(resolve)\n\t\t\tawait file.sync()\n\t\t\tif true\n\t\t\t\tawait file.write(data,0,data.byteLength,offset)\n\t\t\telse\n\t\t\t\tlet stat1 = await file.stat()\n\t\t\t\tlet handle = await nfsp.open(src,'r+')\n\t\t\t\tlet stat = await handle.stat()\n\t\t\t\tawait handle.write(data,0,data.byteLength,offset)\n\t\t\t\thandle.close()\n\t\t\treturn resolve(self)\n\n\tdef onmessage raw\\ArrayBuffer, ws\n\t\ttry\n\t\t\tlet t0 = pfn\n\t\t\tlet msg = raw isa ArrayBuffer ? OP.$parse(raw) : raw\n\t\t\tif !stat\n\t\t\t\treturn inbox.push([msg,ws])\n\n\t\t\tlet fwd = no\n\t\t\tif msg isa BinaryChunkRequest\n\t\t\t\tread(msg.byteStart,msg.byteLength).then do(chunk)\n\t\t\t\t\tws.send( OP.$pack(chunk), yes )\n\n\t\t\tif msg isa BinaryPatch\n\t\t\t\tif msg.byteEnd > offset\n\t\t\t\t\tconsole.log `cannot patch past the end of the file!!`\n\t\t\t\telse\n\t\t\t\t\tpatch(msg.byteStart,msg.data)\n\t\t\t\t\tfwd = yes\n\n\t\t\telif msg isa BinaryChunk\n\t\t\t\t# TODO see that the sender is allowed to write to this(!)\n\t\t\t\tlet overlap = offset - msg.offset\n\n\t\t\t\tif overlap > 0\n\t\t\t\t\tconsole.log `trying to overwrite bytes`\n\n\t\t\t\tif overlap == 0\n\t\t\t\t\tlet buffer = Buffer.from(msg.data.buffer)\n\t\t\t\t\twritestream.write(buffer)\n\t\t\t\t\toffset += msg.data.length\n\t\t\t\t\tfwd = yes\n\t\t\t\tif overlap < 0\n\t\t\t\t\tws.send(BinaryChunkRequest.packed(offset),yes)\n\n\t\t\tlet t1 = pfn\n\n\t\t\tif fwd\n\t\t\t\tout = raw isa ArrayBuffer ? raw : OP.$pack(msg)\n\t\t\t\tws.publish(name,out,true)\n\t\t\tyes\n\n\t\tcatch e\n\t\t\tconsole.log `error in onmessage`,e,new Uint8Array(raw)\n\n\tdef teardown\n\t\tdelete owner.rooms[name]\n\t\tself\n\nexport class Server\n\n\tdef sync\n\t\tlet mu = process.memoryUsage!\n\t\t# only do this if someone starts listening?\n\t\t# model.$update(heap: mu.heapUsed, rss: mu.rss, sockets: sockets.size)\n\t\tyes\n\n\tdef kill\n\t\tif model\n\t\t\tawait model.$update(_del: OP.now)\n\t\treturn self\n\n\tdef createCookie name, value, max-age = null, secret = no\n\t\tvalue = encode(value) if secret\n\t\tlet str = `{cookie-prefix}-{secret ? '-' : ''}{name}={value}; path=/`\n\t\tstr += `;max-age={Math.round(max-age / 1000)}` if max-age\n\t\tstr += `;Domain={cookie-domain}` if cookie-domain\n\t\treturn str\n\n\t@bound def upgrade res, req, context\n\t\t# allow bound function?\n\t\tlet headers = {}\n\t\treq.forEach do(key,val)\n\t\t\theaders[key] = val\n\n\t\tlet ip = headers['x-forwarded-for'] or Buffer.from(res.getRemoteAddress!.slice(-4)).join('.')\n\n\t\tlet state = parseCookies(headers.cookie)\n\t\tlet cookieToSet = null\n\t\tstate.url = req.getUrl!\n\n\t\t# only when this is the main header?\n\t\tunless state.session\n\t\t\tstate.session = OP.Session.build()\n\t\t\tcookieToSet = createCookie('session',state.session.id,null,true)\n\n\t\tstate.ua = headers['user-agent']\n\t\tstate.ip = ip\n\t\tstate.country = headers['cf-ipcountry'] if headers['cf-ipcountry']\n\n\t\tif typeof state.session == 'string'\n\t\t\tlet sess = state.session = OP.Session.get(state.session)\n\n\t\tlet swk = headers['sec-websocket-key']\n\t\tlet swp = headers['sec-websocket-protocol']\n\t\tlet swe = headers['sec-websocket-extensions']\n\n\t\tres.cork do\n\t\t\t# await the session?\n\t\t\t# here we can set the session cookie if needed\n\t\t\tres.writeStatus('101').writeHeader('Set-Cookie', cookieToSet) if cookieToSet\n\t\t\tres.upgrade(state,swk,swp,swe,context)\n\n\tdef constructor adapter\\ServerAdapter, o = {}\n\t\t# we are not persisting server ids now\n\t\tmodel = adapter.node = adapter.server = OP.Server.build({\n\t\t\tpid: process.pid\n\t\t})\n\t\t# model.save!\n\t\tadapter.servers.add(self)\n\t\tsyncer = setInterval(&,2000) do sync!\n\n\t\t# process.on('SIGKILL') do\n\n\t\t# also control the unknown server?\n\t\tOP.Server.unknown.$handler = adapter\n\t\tadapter = adapter\n\t\tpubs = new MemoMap do new Publication(self,id: $1)\n\t\tpublications = []\n\t\tclients = new Set\n\t\tsockets = new Set\n\t\trooms = {}\n\t\toptions = o\n\t\tname = o.name or 'op'\n\t\tcookie-prefix = (process.env.OP_COOKIE_PREFIX or process.env.OP_NAME or name) + 'v2'\n\t\tcookie-domain = process.env.OP_COOKIE_DOMAIN\n\t\tcookie-parse-cache = {}\n\t\tssl = !!o.key_file_name\n\t\tuws\\TemplatedApp = o.uws or (ssl ? SSLApp(o) : App(o))\n\n\t\tif $vite$\n\t\t\tif import.meta.env..MODE == 'development'\n\t\t\t\timport('connect').then do({default})\n\t\t\t\t\to.bundlerPort ||= 30011\n\t\t\t\t\tconst srv = default!\n\t\t\t\t\tsrv.listen(o.bundlerPort)\n\t\t\t\t\timport('imba/plugin').then do({setupVite})\n\t\t\t\t\t\tsetupVite srv, {mode}\n\n\t\tif ssl and false\n\t\t\tuws.missingServerName do\n\t\t\t\tconsole.log 'missing server name',$1\n\t\t\t\tuws.addServerName($1, o)\n\n\t\tuws.ws('/op/room/*',{\n\t\t\tmaxPayloadLength: 1024 * 4096,\n\t\t\tupgrade: upgrade\n\t\t\topen: do(ws)\n\t\t\t\tlet name = ws.url.split('/op/room/')[1]\n\t\t\t\tlet room = ws.room = rooms[name] ||= new Room(self,name:name)\n\t\t\t\troom.joined(ws)\n\n\t\t\tmessage: do(ws,raw)\n\t\t\t\tws.room.onmessage(raw,ws)\n\t\t\t\treturn\n\n\t\t\tclose: do(ws)\n\t\t\t\tws.room.left(ws) if ws.room\n\t\t})\n\n\t\tuws.ws('/op/ws', {\n\t\t\tidleTimeout: 32,\n\t\t\tmaxBackpressure: 1024 * 1024,\n\t\t\tmaxPayloadLength: 1024 * 4096, # hmm - be careful about this? - should possibly send data some other way?\n\n\t\t\tupgrade: upgrade\n\n\t\t\topen: do(ws)\n\t\t\t\tif await ws.session\n\t\t\t\t\tws.session.ua = ws.ua\n\t\t\t\t\tws.session.ip = ws.ip\n\t\t\t\t\tws.session.server = model\n\n\t\t\t\t\tawait ws.session.save!\n\n\t\t\t\tsockets.add(ws)\n\t\t\t\tws.clients = new Set\n\t\t\t\tws.session.$socket = ws\n\n\t\t\t\tif ws.session\n\t\t\t\t\tws.subscribe(ws.session.id)\n\t\t\t\t\tlet uid = ws.session.user..id\n\t\t\t\t\tws.subscribe(uid) if uid\n\t\t\t\telse\n\t\t\t\t\tnull\n\n\t\t\t\tws.subscribe('hmr')\n\t\t\t\tws.subscribe('all')\n\n\t\t\t\tws.send(OPHandshake.packed(ws.session), yes)\n\n\t\t\tmessage: do(ws,raw,binary)\n\t\t\t\treturn unless binary\n\t\t\t\tlet t0 = global.performance.now!\n\t\t\t\tlet bytes = new Uint8Array(raw)\n\t\t\t\tlet len = bytes.length\n\n\t\t\t\ttry\n\t\t\t\t\tlet pre = bytes[0]\n\t\t\t\t\tlet msg = OP.$parse(bytes,ws)\n\n\t\t\t\t\tlet slot = 0\n\t\t\t\t\tlet res\n\n\t\t\t\t\tif msg isa Array\n\t\t\t\t\t\tslot = msg[0]\n\t\t\t\t\t\tmsg = msg[1]\n\n\t\t\t\t\tlet client = ws[slot]\n\n\t\t\t\t\t# session should get a slot\n\n\t\t\t\t\tif slot and !client\n\t\t\t\t\t\tclient = OP.Client.from(ws.session,slot)\n\t\t\t\t\t\t# TODO await client to avoid collisions?\n\t\t\t\t\t\t# should not need to set the server - it is implied by the session?\n\t\t\t\t\t\t# client.server = model\n\t\t\t\t\t\tws[slot] = client\n\t\t\t\t\t\tclient.$socket = ws\n\t\t\t\t\t\tws.clients.add(client)\n\t\t\t\t\t\tclients.add(client)\n\t\t\t\t\t\tawait client.persist!\n\n\t\t\t\t\tlet agent = client or ws.session\n\n\t\t\t\t\tif msg isa OPSerialization\n\t\t\t\t\t\treturn\n\n\t\t\t\t\ttry\n\t\t\t\t\t\tres = await OP.$handle(msg,agent)\n\t\t\t\t\tcatch e\n\t\t\t\t\t\tres = e\n\t\t\t\t\tlet reply = new Message.Reply(ref: -msg.ref,value: res)\n\t\t\t\t\tlet bin = OP.$pack([slot,reply],client)\n\n\t\t\t\t\tws.send(bin,yes)\n\n\t\t\t\tcatch e\n\t\t\t\t\tconsole.log 'error when handing ws message'\n\t\t\t\tfinally\n\t\t\t\t\tLL `incoming {len}b - took {global.performance.now! - t0}`\n\n\t\t\tclose: do(ws)\n\t\t\t\tlet sess = ws.session\n\t\t\t\tfor client of ws.clients\n\t\t\t\t\tclients.delete(client)\n\t\t\t\t\tclient.$socket = null if client.$socket == ws\n\n\t\t\t\tsess.$socket = null\n\t\t\t\tws.session = null\n\n\t\t\t\tsetTimeout(&,1000) do\n\t\t\t\t\t# why not just update directly in db?\n\t\t\t\t\t# or should we rather rely on something else?\n\t\t\t\t\tsess.$update(server: null) if !sess.$socket\n\n\t\t\t\t# mark as closed?\n\t\t\t\tsockets.delete(ws)\n\t\t})\n\n\t\t# add path for listening to op/fs\n\n\t\tlet notifier = do(item)\n\n\t\t\tlet packed = {}\n\t\t\tlet plain = {}\n\t\t\tawait item\n\n\t\t\tlet packer = do(role)\n\t\t\t\tlet out\n\t\t\t\tpacked[role] ??= if true\n\t\t\t\t\tout = plain[role] = item.dehydrate-for(null,role)\n\t\t\t\t\tout.id = item.id\n\t\t\t\t\tOPData.packed(out)\n\n\t\t\tfor socket of sockets\n\t\t\t\tlet role = 0\n\t\t\t\tlet user = socket.session..user\n\t\t\t\tif user == item.$key\n\t\t\t\t\trole = OP.OWNER\n\n\t\t\t\tif item isa OPPov and role == 0\n\t\t\t\t\tcontinue\n\n\t\t\t\trole = await item.roles-for(user)\n\t\t\t\tlet obj = packer(role)\n\n\t\t\t\tsocket.send(obj,yes) if obj\n\n\t\tadapter.wal.init!\n\n\t\tadapter.on('change') do(id,diff)\n\t\t\tlet item = OP.get(id)\n\t\t\t# triggered either via the wal or when we somehow load a row from the db in general?\n\t\t\tnotifier(item)\n\n\t\tif import.meta.env..MODE == \"development\"\n\t\t\tuws.get(`/*`) do(res, req)\n\t\t\t\tconst url = req.getUrl!\n\t\t\t\tconst query = req.getQuery!\n\t\t\t\tconst port = o.bundlerPort\n\t\t\t\tlet targetUrl = \"http://localhost:{port}{url}\"\n\t\t\t\ttargetUrl += \"?{query}\" if query\n\n\t\t\t\tconst options = {headers: req.getHeader}\n\t\t\t\tres.onAborted do res.aborted = true\n\t\t\t\tconst getReq = http.get(targetUrl, options) do(proxyResponse)\n\t\t\t\t\tfor own header, value of proxyResponse.headers\n\t\t\t\t\t\tres.writeHeader(header, value)\n\t\t\t\t\tproxyResponse.on(\"data\") do(chunk)\n\t\t\t\t\t\tif !res.aborted\n\t\t\t\t\t\t\tlet result = res.write(chunk)\n\t\t\t\t\t\t\tif !result\n\t\t\t\t\t\t\t\tres.cork()\n\t\t\t\t\tproxyResponse.on(\"end\") do\n\t\t\t\t\t\tif !res.aborted\n\t\t\t\t\t\t\tres.end()\n\t\t\t\tgetReq.on(\"error\") do(err)\n\t\t\t\t\tconsole.error \"Error proxying request to {targetUrl}\", err\n\t\t\t\t\tif !res.aborted\n\t\t\t\t\t\tres.writeStatus(\"500 Internal Server Error\").end \"An error occurred.\"\n\t\telif (o.assetsPath ??= global.IMBA_ASSETS_PATH)\n\t\t\t\t# TODO Add headers for caching?\n\t\t\t\tuws.get(`/{o.assetsPath}/*`, ustatic(imba.env.publicPath,{\n\t\t\t\t\tsecure: !!ssl\n\t\t\t\t\tcompressions: ['br','gzip','deflate']\n\t\t\t\t\tminStreamSize: 2048 * 2048\n\t\t\t\t\tmaxCacheSize: 2048 * 2048\n\t\t\t\t\twriteHeaders: do(res,path)\n\t\t\t\t\t\tres.writeHeader('cache-control','public, max-age=31536000')\n\t\t\t\t\t\tyes\n\t\t\t\t}))\n\n\t\tlet fshandler\n\t\t# should probably cache - but the sizes may change very quickly\n\t\tfshandler = ustatic(adapter.fs.path,{\n\t\t\tcompressions: ['gzip','deflate']\n\t\t\tetag: false\n\t\t\tcache: false\n\t\t\tnotFound: do(res,req)\n\t\t\t\tconsole.log 'file not found!!',req\n\t\t\t\temit('fs:missing',$1)\n\n\t\t})\n\n\t\tuws.get('/op/worker.js') do(res,req)\n\n\t\t\tlet js = import.sharedworker('./webworker')\n\n\t\t\tres.writeHeader('Content-type', 'text/javascript')\n\t\t\tres.writeHeader('Cross-Origin-Opener-Policy','same-origin')\n\t\t\tres.writeHeader('Cross-Origin-Embedder-Policy','require-corp')\n\t\t\tres.end(js.body)\n\n\t\tuws.get('/op/fs/*') do(res,req)\n\t\t\t# generating the state outside of ustatic so that it can respond later\n\t\t\tlet url = req.getUrl!\n\t\t\tlet path = global.decodeURIComponent(url.replace('/op/fs/',''))\n\n\t\t\tlet state = {\n\t\t\t\turl: path\n\t\t\t\tencoding: req.getHeader('accept-encoding')\n\t\t\t\taccept: req.getHeader('accept')\n\t\t\t\trange: req.getHeader('range')\n\t\t\t\text: np.extname(path).slice(1)\n\t\t\t}\n\n\t\t\tres[ustatic.state] = state\n\n\t\t\tObject.assign(res,state)\n\t\t\t# TODO implement some sort of authentication for this\n\t\t\tres.onAborted do res.aborted = yes\n\n\t\t\ttry\n\t\t\t\tconsole.log \"handling static file {path}\"\n\t\t\t\tfshandler(res,req)\n\n\t\t\tcatch e\n\t\t\t\tconsole.log \"error handling static file\",e\n\t\t\t\tyes\n\n\t\tself.get(`/op/pub/:id`) do(req,res)\n\t\t\tlet id = req.params.id\n\t\t\tlet typ = OP.getType(id)\n\t\t\tlet item = typ ? OP.get(id) : id\n\t\t\tlet match\n\n\t\t\tfor pub in OP.publications\n\t\t\t\tbreak match = pub if pub.match(item)\n\n\t\t\tif match\n\t\t\t\tres.headers['op-server'] = model.id\n\t\t\t\tmatch.respond(req,res,item)\n\t\t\telse\n\t\t\t\tres.status = 404\n\t\t\t\tres.end!\n\n\t\tself.get(`/op/assets/:id`) do(req,res)\n\t\t\t# Rework asset routing and handling. Not dealing with resizing etc now.\n\t\t\t# Headers should push these out into CF edges\n\t\t\tlet id = req.params.id.replace(/\\.[^/.]+$/, '')\n\t\t\tlet asset = await OP.Asset.get(id)\n\n\t\t\t# TODO: figure out why filePersisted is not populated here although it's been\n\t\t\t# saved in beforePersist hook !!\n\t\t\treturn res.redirect(asset.originalURL) if await asset.inDisk!\n\n\t\t\t# TODO find way to stream file?\n\t\t\tres.status = 404\n\t\t\tres.end!\n\n\t\t\t# TODO save for multipart data...\n\t\t\t# fshandler(res,req)\n\n\t\tself.post(`/op/assets`) do(req,res)\n\t\t\tres.private!\n\t\t\t# TODO bad interface\n\t\t\tlet parts = await req.parts!\n\t\t\tlet json = await req.json!\n\t\t\tlet data = null\n\n\t\t\tif json..url\n\t\t\t\tlet remote = await fetch(json.url)\n\t\t\t\tlet arr = await remote.arrayBuffer!\n\t\t\t\tdata = Buffer.from(arr)\n\n\t\t\tfor part in parts\n\t\t\t\tif part.name == 'file'\n\t\t\t\t\tdata = Buffer.from(part.data)\n\t\t\t\t\tbreak\n\n\t\t\tif data\n\t\t\t\tlet id = await OPAsset.for(data)\n\t\t\t\treturn res.mp(id)\n\n\t\t\tunless res.aborted?\n\t\t\t\tres.json(200)\n\n\t###\n\tCurrently op assumes that you have declared a model named Session\n\tIn the future op will include built-in Session & User that you\n\tcan extend.\n\t###\n\tget Session\n\t\tOP.mapping.session\n\n\tget User\n\t\tOP.mapping.user\n\n\t@lazy get branca\n\t\tlet secret = options.secret or process.env.OP_SECRET\n\t\tunless secret\n\t\t\tconsole.log `Provide a 'secret' to OP.createServer or define a OP_SECRET env variable for secure cookies`\n\t\t\toptions.secret = secret = '11e9b8e5af5129ffaf8cfdbac0e5ffd46b1c7aa539d1461465d573a38dc531c1'\n\t\tif secret and secret.length != 64\n\t\t\tthrow \"secret / OP_SECRET has to be 64 hex characters\"\n\n\t\tBranca(secret)\n\n\t###\n\tEncode a value with branca. Clients can receive these encoded\n\tvalues and the server can trust that decoded values from client\n\thas been created by a trusted source (the server)\n\t###\n\tdef encode value\n\t\tif value isa OPObject\n\t\t\tvalue = value.id\n\t\tbranca.encode(pack(value))\n\n\tdef decode input\n\t\ttry unpack(branca.decode(input)) catch e\n\t\t\tnull\n\n\t# @template [T=any]\n\tdef pub cond\\T,setup\\((walker:OPPubResults,item:(InstanceType<T>))=>any),options={}\n\t\tOP.pub(cond,setup,options)\n\t\t# should just add new pubs this way\n\t\t# if setup\n\t\t# \tlet pub = new Publication(self,id: cond,options: options,cb: setup)\n\t\t# \tpublications.push(pub)\n\t\t# \treturn pub\n\n\tdef auth\\((req:ServerRequest,res:Response)=>any) cb\n\t\treturn do(req,res)\n\t\t\tawait req.authenticate!\n\t\t\t# authenticate here\n\t\t\treturn cb(req,res)\n\n\tdef get path\\string, handler\\((req:ServerRequest,res:Response)=>any), options\\object = {}\n\t\tregister(self,'get',path,handler, options)\n\n\tdef post path\\string, handler\\((req:ServerRequest,res:Response)=>any), options\\object = {}\n\t\tregister(self,'post',path,handler, options)\n\n\tdef del path\\string, handler\\((req:ServerRequest,res:Response)=>any), options\\object = {}\n\t\tregister(self,'del',path,handler, options)\n\n\tdef any path\\string, handler\\((req:ServerRequest,res:Response)=>any), options\\object = {}\n\t\tregister(self,'any',path,handler, options)\n\n\tdef static path\\string, dir\\string, options = {}\n\t\tdir = np.resolve(process.cwd!,dir)\n\n\t\tconsole.log \"USTATIC\",path,dir\n\n\t\tuws.get(path, ustatic(dir,Object.assign({\n\t\t\tsecure: !!ssl\n\t\t\tminStreamSize: 1024 * 2048\n\t\t\tmaxCacheSize: 1024 * 2048\n\t\t\tcompressions: ['gzip','deflate'] # disabling brotli due to speed\n\t\t},options)))\n\n\t\treturn self\n\n\tdef ws path, options\n\t\tuws.ws(path,options)\n\n\t# TODO fix security -- only allow encoded cookies?\n\tdef parseCookies string,target = {}\n\t\treturn target unless string\n\t\t# let cached = cookie-parse-cache\n\t\tlet pre = cookie-prefix + '-'\n\t\tfor item in string.split('; ')\n\t\t\tlet [k,v] = item.split(/\\=/)\n\t\t\tif k.indexOf(pre) == 0\n\t\t\t\tlet name = k.slice(pre.length)\n\t\t\t\tif name.indexOf('-') == 0\n\t\t\t\t\tname = name.slice(1)\n\t\t\t\t\tv = decode(v)\n\t\t\t\ttarget[name] = v\n\n\t\treturn target\n\n\tdef listen ...args\n\t\tlet cb = args.pop!\n\n\t\tuws.listen(...args) do(sock)\n\t\t\tlet id = Math.round(Math.random! * 1000)\n\t\t\tLL 'running'\n\t\t\tif global.IMBA_RUN and cluster.isWorker\n\t\t\t\tprocess.on('message') do(msg)\n\t\t\t\t\tif msg[1] == 'rebuild'\n\t\t\t\t\t\tlet prev = global.IMBA_MANIFEST\n\t\t\t\t\t\tglobal.IMBA_MANIFEST = msg[2]\n\t\t\t\t\t\tlet pkg = SiteManifest.packed(msg[2])\n\t\t\t\t\t\tuws.publish('hmr',pkg,yes)\n\n\t\t\t\t\tif msg[1] == 'reloading'\n\t\t\t\t\t\tus_listen_socket_close(sock)\n\t\t\t\t\t\tsetTimeout(&,500) do process.exit(0)\n\n\t\t\tconsole.log \"listening on {args.join(':')}\"\n\t\t\tcb(sock,self) if cb\n\n\tdef emit name, ...params do imba.emit(self,name,params)\n\tdef on name, ...params do imba.listen(self,name,...params)\n\tdef once name, ...params do imba.once(self,name,...params)\n\tdef un name, ...params do imba.unlisten(self,name,...params)\n\n# Make this work\nexport class ServerRequest\n\tserver\\Server\n\thost\\string\n\tmethod\\string\n\turl\\string\n\tqs\\string\n\tsession\\(globalThis.Session)\n\theaders\\object\n\tparams\\any\n\taccept\\Accept\n\tresponse\n\tgzip = no\n\n\t@lazy get query\n\t\tqsp.parse(self.qs or '')\n\n\t@lazy get ext\n\t\t(url.match(/\\.(\\w+)$/) or [])[1]\n\n\tget body\n\t\t#body ||= new Promise do(resolve,reject)\n\t\t\tlet buf = Buffer.from([])\n\t\t\tresponse.onData do(chunk,last?)\n\t\t\t\tbuf = Buffer.concat([buf,Buffer.from(chunk)])\n\t\t\t\tresolve(buf) if last?\n\n\t\t\tresponse.onAborted do\n\t\t\t\tconsole.log 'aborted!!'\n\t\t\t\treject(null)\n\n\tget json?\n\t\theaders['content-type'] == 'application/json'\n\n\tget multipart?\n\t\theaders['content-type'].indexOf('multipart/form-data') == 0\n\n\tget prefetch?\n\t\theaders['purpose'] == 'prefetch'\n\n\t# Parsed cookies received in this request\n\tget cookies\n\t\t#cookies ||= server.parseCookies(headers.cookie or '')\n\n\tget user\\(globalThis.User)\n\t\tsession..user\n\n\tget agent\n\t\tuser or session\n\n\tdef authenticate\n\t\t#authenticated = yes\n\n\t# Retrieve the json body\n\t# Returns null if not json\n\tdef json\n\t\treturn null unless json?\n\t\tlet body = await self.body\n\t\treturn JSON.parse(body)\n\n\t# Retrieve multipart body\n\tdef parts\n\t\treturn [] unless multipart?\n\t\tnew Promise do(resolve,reject)\n\t\t\tlet body = await self.body\n\t\t\tresolve getParts(body,headers['content-type'])\n\nconst ResponseTypes = {\n\tjs: 'text/javascript; charset=UTF-8'\n\thtml: 'text/html; charset=UTF-8'\n}\n\n# should be different types of responses to support the streaming etc\n# based on accepts header?\nexport class Response\n\tdeclare cookies\n\n\tdef constructor ctx\\ServerRequest, res\n\t\tctx = ctx\n\t\tres = res\n\t\tuser = null\n\t\tsubs\\Set = null\n\t\tstatus = 200\n\t\theaders = {} # always?\n\t\tsetHeader(\"op-server\", ctx.server.model.id)\n\t\t#body = null\n\n\t# move away from these - use req.json etc instead\n\tget body\n\t\treturn #body if #body\n\t\tnew Promise do(resolve, reject)\n\t\t\tlet err = do reject($1)\n\t\t\tuwsutil.readBody(res,&,err) do(data)\n\t\t\t\tresolve(#body = data)\n\n\t# Makes no sense to have these on the body?\n\tdef body-as type\n\t\tconst data = await body\n\t\tswitch type\n\t\t\t\twhen 'json'\n\t\t\t\t\ttry\n\t\t\t\t\t\treturn JSON.parse(data)\n\t\t\t\t\tcatch\n\t\t\t\t\t\treturn 'Unable to parse data'\n\t\t\t\twhen 'buffer'\n\t\t\t\t\tBuffer.from(data)\n\t\t\t\twhen 'string'\n\t\t\t\t\tdata.toString!\n\t\t\t\telse\n\t\t\t\t\tdata\n\n\tdef onData cb\n\t\tres.onData(cb)\n\t\tself\n\n\tdef onAborted cb\n\t\timba.once(self,'aborted',cb)\n\t\tself\n\n\tget server\n\t\tctx.server\n\n\tget aborted?\n\t\t!!res.aborted\n\n\tdef type typ\n\t\theaders['content-type'] = ResponseTypes[typ] or mimes.get(typ) or typ\n\t\tself\n\n\t# should this be on the request or response?\n\tdef sub path\n\t\t# look up the globally available pubs?\n\t\t(subs ??= new Set).add(path)\n\t\treturn self\n\n\tdef secret name, value, age\n\t\tcookie(name,value,age,yes)\n\n\tdef writeHeader name, value\n\t\tres.writeHeader(name,String(value))\n\n\tdef setHeader name, value\n\t\theaders[name] = String(value)\n\n\t# clean up this interface\n\tdef cookie name, value, max-age = null, secret = no\n\t\tcookies ||= {}\n\t\tcookies[name] = server.createCookie(name,value,max-age,secret)\n\t\treturn self\n\n\tdef start\n\t\tif #started =? yes\n\t\t\tif status == 200\n\t\t\t\tres.writeStatus('200 OK')\n\t\t\telse\n\t\t\t\tres.writeStatus(`{status}`)\n\n\t\t\t# maybe set content type based on extension?\n\t\t\tunless headers['content-type']\n\t\t\t\tlet url = ctx.url\n\n\t\t\tfor own k,v of headers\n\t\t\t\tres.writeHeader(k,String(v))\n\n\t\t\tif cookies\n\t\t\t\tfor own k,v of cookies\n\t\t\t\t\tres.writeHeader('set-cookie',v)\n\t\tself\n\n\tdef ok message, code = 200\n\t\tstatus = code if typeof code == 'number'\n\t\t# TODO change format based on accept header from request\n\t\tjson(message)\n\n\tdef fail message, code = 401\n\t\tstatus = code if typeof code == 'number'\n\t\t# TODO change format based on accept header from request\n\t\tjson(message)\n\n\tdef json value, code\n\t\treturn self if res.aborted\n\n\t\tstatus = code if typeof code == 'number'\n\t\theaders['content-type'] = 'application/json'\n\t\t# res.writeStatus('200 OK')\n\t\tstart!\n\n\t\tif value and value.$serialize isa Function\n\t\t\tvalue = value.$serialize!\n\n\t\tend(JSON.stringify(value))\n\n\tdef mp data, code\n\t\tstatus = code if typeof code == 'number'\n\t\theaders['content-type'] = 'application/x-msgpack'\n\t\tend(OP.pack(data))\n\n\tdef blank\n\t\tstatus = 204\n\t\treturn end!\n\n\tdef html value\n\t\treturn self if res.aborted\n\n\t\tlet html = String(value)\n\n\t\tlet js = []\n\t\tlet q = ''\n\n\t\tjs.push `o.server = '{ctx.server.model..id}'`\n\n\t\tif private? and ctx.session\n\t\t\tlet s = await ctx.session\n\t\t\tlet u = await ctx.session.user\n\n\t\t\t# FIXME should never serialize op models directly without checking for the hidden fields\n\t\t\t# and other role fields in general.\n\t\t\tlet pov = u ? u.id : s.id\n\t\t\tq = `?pov={pov}` if pov\n\t\t\tjs.push `o.pov = '{pov}' || null`\n\t\t\tjs.push `o.user = {JSON.stringify u}` if pov and u\n\t\t\tjs.push `o.session = {JSON.stringify s}`\n\n\t\tif subs\n\t\t\tfor sub of subs\n\t\t\t\tjs.push `o.subs['{sub}'] = window.fetch('/op/pub/{sub}{q}',fo)`\n\n\t\tif js.length\n\t\t\tlet opobj = '{subs:{},data:[]}'\n\t\t\tlet fo = '{headers:{Accept:\"*/*\"}}'\n\t\t\tlet inject = `<script>((o,fo={fo})=>({js.join(',')}))(window[Symbol.for('#op')]={opobj})</script>`\n\t\t\thtml = html.replace(/(?=<head>)/,inject)\n\n\t\tres.cork do\n\t\t\theaders['content-type'] = 'text/html; charset=UTF-8'\n\t\t\tstart!\n\t\t\t# res.writeStatus('200 OK')\n\t\t\t# res.writeHeader('content-type','text/html; charset=UTF-8')\n\t\t\tres.end(html)\n\n\t\treturn self\n\n\tdef end ...values\n\t\treturn self if res.aborted\n\t\tstart!\n\n\t\tif #hose\n\t\t\t#hose.autoflush!\n\t\telse\n\t\t\tres.end(...values)\n\n\t# Potentially identify if this is xhr and communicate the redirect back as a response instead?\n\tdef redirect url, kind = 302\n\t\tres.cork do\n\t\t\tstatus = kind\n\t\t\theaders.location = url\n\t\t\t# res.writeStatus(`{kind}`)\n\t\t\tstart!\n\t\t\t# res.writeHeader('location', url)\n\t\t\tres.end!\n\n\tdef format object = {}\n\t\tlet checks = ctx.accept\n\t\tfor own k,v of object\n\t\t\tif checks[k]\n\t\t\t\tif v isa Function\n\t\t\t\t\tlet result = v()\n\t\t\t\t\treturn\n\t\t\t\telse\n\t\t\t\t\treturn v\n\n\t\treturn end!\n\n\tdef private age = 0\n\t\tsession # touch the session\n\t\tprivate? = yes\n\t\theaders['cache-control'] ||= `private, max-age={Math.floor age / 1000}`\n\t\tself\n\n\tdef cache val\n\t\tif val == false\n\t\t\theaders['cache-control'] = 'no-cache'\n\t\t\t# res.writeHeader('cache-control',`no-cache`)\n\t\telif typeof val == 'string'\n\t\t\theaders['cache-control'] = val\n\t\t\t# res.writeHeader('cache-control',val)\n\t\tself\n\n\tdef vary kind = 'Pov'\n\t\t# not possible to call multiple times etc now\n\t\theaders.vary = kind\n\t\t# res.writeHeader('vary',kind)\n\t\tself\n\n\tdef public age = 0 # random default for now\n\t\theaders['cache-control'] = `public, max-age={Math.floor age / 1000}`\n\t\tself\n\n\t@lazy get stream\n\t\tlet zip = ctx.gzip\n\t\tlet writer = new PassThrough\n\t\tlet stream = writer\n\n\t\tObject.assign(headers,{\n\t\t\t'connection': 'keep-alive'\n\t\t\t'content-type': 'application/octet-stream'\n\t\t\t'content-encoding': zip ? 'gzip' : null\n\t\t})\n\n\t\tif zip\n\t\t\tstream = writer.pipe zlib.createGzip(\n\t\t\t\tlevel: zlib.constants.Z_BEST_SPEED,\n\t\t\t\tchunkSize: 2 * 1024,\n\t\t\t\tmemLevel: zlib.constants.Z_MAX_LEVEL\n\t\t\t)\n\n\t\tstream.on('data') do(data)\n\t\t\treturn if res.aborted\n\n\t\t\tif started =? yes\n\t\t\t\tres.cork do start!\n\n\t\t\tunless res.write(data)\n\t\t\t\t# TODO fix logic for backpressure and aborts\n\t\t\t\tlet lastOffset = res.getWriteOffset!\n\t\t\t\tconsole.log 'could not write to response',lastOffset,res.aborted\n\t\t\t\tstream.pause!\n\t\t\t\tres.onWritable do(offset)\n\t\t\t\t\tconsole.log 'can write again',offset,res.aborted\n\t\t\t\t\tstream.resume!\n\n\t\tstream.on('close') do\n\t\t\treturn if res.aborted\n\t\t\tres.end!\n\n\t\treturn writer\n\n\tdef sendFile path, headers\n\t\tlet body = await nfsp.readFile(path)\n\t\tend(body)\n\n\t# response should never set session here - in OP sessions should only be created\n\t# during websocket upgrade -\n\t@lazy get session\n\t\treturn OP.Session.get(ctx.cookies.session)\n\n\t\tlet id = ctx.cookies.session\n\t\tunless id\n\t\t\t# need to overhaul\n\t\t\tid = server.Session.generateId!\n\t\t\tconsole.log 'generate session!!!',id\n\t\t\tcookie('session',id,null,yes)\n\n\t\treturn server.Session.get(id)\n\n# Just lazy hack for typings now\nglobal class OPApp < Server\n"],"names":[],"mappings":"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"}},"css":{"code":""},"warnings":[],"errors":[]}
{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};\n\n/*body*/\nimport '../protocol';\n\nclass OPMUT extends OPStruct {\nstatic {\n\tdefineName$__(this,'OPMUT');inheritClass$__(this);}}; globalThis.OPMUT = OPMUT;\n\nclass OPDIFF extends OPMUT {\nstatic {\n\tdefineName$__(this,'OPDIFF');inheritClass$__(this);}}; globalThis.OPDIFF = OPDIFF;\n\n// [ path, val, prev ]\n// remove is just setting val to null, no?\n// add is just previous value explicitly null?\nclass OPSET extends OPMUT {\n\t\n\tget key(){\n\t\treturn this[0];\n\t}\n\tget value(){\n\t\treturn this[1];\n\t}\n\tget oldValue(){\n\t\treturn this[2];\n\t}\n\t\n\tget deepÎ¦(){\n\t\t\n\t\treturn this.value instanceof OPMUT;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'OPSET');inheritClass$__(this);}\n}; globalThis.OPSET = OPSET;\n\nclass OPMOD extends OPMUT {\n\t\n\tget key(){\n\t\treturn this[0];\n\t}\n\tget value(){\n\t\treturn this[1];\n\t}\n\tstatic {\n\t\tdefineName$__(this,'OPMOD');inheritClass$__(this);}\n}; globalThis.OPMOD = OPMOD;\n\nclass OPDEL extends OPMUT {\n\t\n\tget key(){\n\t\treturn this[0];\n\t}\n\tget value(){\n\t\treturn null;\n\t}\n\tget oldValue(){\n\t\treturn this[1];\n\t}\n\tstatic {\n\t\tdefineName$__(this,'OPDEL');inheritClass$__(this);}\n}; globalThis.OPDEL = OPDEL;\n\n\n\n","dependencies":[],"map":{"version":3,"file":"diff.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/core/diff.imba"],"sourcesContent":["import '../protocol'\n\nglobal class OPMUT < OPStruct\n\nglobal class OPDIFF < OPMUT\n\n# [ path, val, prev ]\n# remove is just setting val to null, no?\n# add is just previous value explicitly null?\nglobal class OPSET < OPMUT\n\tget key do self[0]\n\tget value do self[1]\n\tget oldValue do self[2]\n\t\n\tget deep?\n\t\tvalue isa OPMUT\n\nglobal class OPMOD < OPMUT\n\tget key do self[0]\n\tget value do self[1]\n\nglobal class OPDEL < OPMUT\n\tget key do self[0]\n\tget value do null\n\tget oldValue do self[1]\n\n\n\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,aAAa;;AAEb,KAAK,CAAC,KAAK,SAAG,QAAQ;;kEAAhB,KAAK,GAAL,KAAK;;AAEX,KAAK,CAAC,MAAM,SAAG,KAAK;;mEAAd,MAAM,GAAN,MAAM;;;;;AAKZ,KAAK,CAAC,KAAK,SAAG,KAAK,EAAA;;CACzB,GAAG,CAAC,GAAG;EAAI,OAAA,IAAI,CAAC,CAAC,CAAC;EAVnB;CAWC,GAAG,CAAC,KAAK;EAAI,OAAA,IAAI,CAAC,CAAC,CAAC;EAXrB;CAYC,GAAG,CAAC,QAAQ;EAAI,OAAA,IAAI,CAAC,CAAC,CAAC;EAZxB;;CAcC,GAAG,CAAC,KAAK,EAAA;;EACR,OAAA,KAAA,KAAK,YAAK,KAAK;EAAA;;;AAAA,cANJ,KAAK,GAAL,KAAK;;AAQX,KAAK,CAAC,KAAK,SAAG,KAAK,EAAA;;CACzB,GAAG,CAAC,GAAG;EAAI,OAAA,IAAI,CAAC,CAAC,CAAC;EAlBnB;CAmBC,GAAG,CAAC,KAAK;EAAI,OAAA,IAAI,CAAC,CAAC,CAAC;EAnBrB;;;AAmBqB,cAFR,KAAK,GAAL,KAAK;;AAIX,KAAK,CAAC,KAAK,SAAG,KAAK,EAAA;;CACzB,GAAG,CAAC,GAAG;EAAI,OAAA,IAAI,CAAC,CAAC,CAAC;EAtBnB;CAuBC,GAAG,CAAC,KAAK;EAAI,OAAA,IAAI;EAvBlB;CAwBC,GAAG,CAAC,QAAQ;EAAI,OAAA,IAAI,CAAC,CAAC,CAAC;EAxBxB;;;AAwBwB,cAHX,KAAK,GAAL,KAAK;;;;AAOlB;"}},"css":{"code":""},"warnings":[],"errors":[]}
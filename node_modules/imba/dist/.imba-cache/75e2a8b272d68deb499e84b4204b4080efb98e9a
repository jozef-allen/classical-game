{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};\nimport {accessor as imba_accessor} from 'imba';\nvar $1 = Symbol('maintained'), $2 = Symbol(), $3 = Symbol('count'), $4 = Symbol(), $5 = Symbol(), $7, $8;\nconst $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__');\n\n/*body*/\nimport setup from '../setup';\n\nconst maintain = vitest.fn();\n\nclass Airplane extends OP.Object {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $6;\n\t\tsuper[$__patch__$] && super[$__patch__$]($$,fields);\n\t\tfields && ($6 = $$.maintained) !== undefined && this.ααmaintained.$init($6,this,$1,'maintained',$$);\n\t\tfields && ($6 = $$.count) !== undefined && this.ααcount.$init($6,this,$3,'count',$$);\n\t\t\n\t}\n\tconstructor(){\n\t\tsuper(...arguments);\n\t\tsuper[$__init__$] || this[$__init__$]();this[$__initor__$]===$5 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tdeep && super[$__init__$] && super[$__init__$](...arguments);\n\t\tfields && this.ααmaintained.$init($$ ? $$.maintained : undefined,this,$1,'maintained',$$);\n\t\tfields && this.ααcount.$init($$ ? $$.count : undefined,this,$3,'count',$$);\n\t\t\n\t}\n\tset maintained(val){ this.ααmaintained.$set(val,this,$1,'maintained') }\n\tget maintained(){ return this.ααmaintained.$get(this,$1,'maintained') }\n\tget ααmaintained(){ return this[$2] || imba_accessor(($7 = this.αbool(),$7),this,$1,'maintained',$2,Airplane.prototype) }\n\tset count(val){ this.ααcount.$set(val,this,$3,'count') }\n\tget count(){ return this.ααcount.$get(this,$3,'count') }\n\tget ααcount(){ return this[$4] || imba_accessor(($8 = this.αint(),$8),this,$3,'count',$4,Airplane.prototype) }\n\tbeforePersist(){\n\t\t\n\t\tmaintain();\n\t\tthis.maintained = true;\n\t\treturn this.count = 2100;\n\t}\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $5;defineName$__(this,'Airplane');inheritClass$__(this);}\n};\n\nawait setup(__filename);\n\ndescribe.skip(\"Hooks\",function() {\n\t\n\treturn test(\"beforePersist\",async function() {\n\t\t\n\t\tconst plane = Airplane.build();\n\t\tnok(plane.maintained);\n\t\texpect(maintain).not.toHaveBeenCalled();\n\t\tawait plane.persist();\n\t\t\n\t\tok(plane.maintained);\n\t\tok(plane.count,2100);\n\t\texpect(maintain).toHaveBeenCalled();\n\t\t\n\t\treturn true;\n\t});\n});\n","dependencies":[],"map":{"version":3,"file":"hooks.test.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/test/misc/hooks.test.imba"],"sourcesContent":["import setup from '../setup'\n\nconst maintain = vitest.fn!\n\nclass Airplane < OP.Object\n\tmaintained @bool\n\tcount @int\n\tdef beforePersist\n\t\tmaintain!\n\t\tmaintained = yes\n\t\tcount = 2100\n\nawait setup(__filename)\n\ndescribe.skip \"Hooks\" do\n\ttest \"beforePersist\" do\n\t\tconst plane = Airplane.build()\n\t\tnok plane.maintained\n\t\texpect(maintain).not.toHaveBeenCalled!\n\t\tawait plane.persist!\n\n\t\tok plane.maintained\n\t\tok plane.count, 2100\n\t\texpect(maintain).toHaveBeenCalled!\n\n\t\tyes\n"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAAM,CAAC,KAAK,MAAM,UAAU;;MAEtB,QAAQ,GAAG,MAAM,CAAC,EAAE,EAAC;;AAE3B,KAAK,CAAC,QAAQ,SAAG,EAAE,CAAC,MAAM,EAAA;qCAJ1B;;;qBAKC,UAAU,CAAA;qBACV,KAAK,CAAA;;EANN;cAAA;;;EAAA;kDAAA;;4CAKC,UAAU;uCACV,KAAK;;EANN;KAKC,UAAU;KAAV,UAAU;KAAV,YAAU,gDAAC,KAAK,EAAA,6BADX,QAAQ;KAEb,KAAK;KAAL,KAAK;KAAL,OAAK,gDAAC,IAAI,EAAA,wBAFL,QAAQ;CAGT,aAAa,EAAA;;EAChB,QAAQ,EAAC;EACT,KAAA,UAAU,GAAG,IAAG;EAChB,OAAA,KAAA,KAAK,GAAG,IAAI;EAAA;;;AAAA,CAAA;;MAER,KAAK,CAAC,UAAU,CAAC;;AAEvB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAE,GAAA;;CACvB,OAAA,IAAI,CAAC,eAAe,CAAC,cAAE,GAAA;;QAChB,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE;EAC9B,GAAG,CAAC,KAAK,CAAC,UAAU,CAAA;EACpB,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAC;QAChC,KAAK,CAAC,OAAO,EAAC;;EAEpB,EAAE,CAAC,KAAK,CAAC,UAAU,CAAA;EACnB,EAAE,CAAC,KAAK,CAAC,KAAK,CAAE,IAAI,CAAA;EACpB,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAC;;EAElC,OAAA,IAAG;EAAA,CAVA;CAUA,CAXQ;AAYb;"}},"css":{"code":""},"warnings":[],"errors":[]}
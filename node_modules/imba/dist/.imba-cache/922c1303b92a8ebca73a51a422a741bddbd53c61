{"js":{"code":"function iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };;\nfunction defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction decorate$__(decorators,target,key,desc){\n\tvar c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\tif (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\telse for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\treturn c > 3 && r && Object.defineProperty(target, key, r), r;\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};\nimport {αthenable as imba_αthenable, use_hooks as imba_use_hooks, hooks as imba_hooks} from 'imba';\n(imba_use_hooks());\nconst $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__'), $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $children$ = Symbol.for('#children'), $packed$ = Symbol.for('#packed'), $refs$ = Symbol.for('#refs');\nvar $1 = Symbol();\n\n/*body*/\nimport {now,NamedSet} from './utils';\nimport {Component} from './component';\nimport {PassThrough} from 'stream';\nimport zlib from 'zlib';\nimport './protocol';\n\nlet gzopts = {\n\tlevel: zlib.constants.Z_BEST_SPEED,\n\tchunkSize: 64 * 1024,\n\tmemLevel: zlib.constants.Z_MAX_LEVEL\n};\n\nlet bropts = {\n\tchunkSize: 8 * 1024,\n\t// memLevel: zlib.constants.Z_MAX_LEVEL\n\tparams: {\n\t\t[zlib.constants.BROTLI_PARAM_MODE]: zlib.constants.BROTLI_MODE_GENERIC,\n\t\t[zlib.constants.BROTLI_PARAM_QUALITY]: 1\n\t}\n};\nconst p = console.log.bind(console);\nconst bufferPool = [];\n\nconst DATA = OPFLAGS.PACK_DATA;\nconst POV = OPFLAGS.PACK_POV;\nconst CHILDREN = OPFLAGS.PACK_CHILDREN;\nconst REFS = OPFLAGS.PACK_REFS;\nconst FULL = OPFLAGS.FULL;\nconst ALL = DATA | POV | CHILDREN | REFS;\n\nfunction alloc(){\n\t\n\tlet buf = bufferPool.pop();\n\treturn buf || new Uint8Array(8 * 1024 * 1024);\n};\n\nfunction free(buf){\n\t\n\treturn bufferPool.unshift(buf);\n};\n\nclass OPPubResults {\n\t\n\t\n\tget ALL(){\n\t\t\n\t\treturn DATA | POV | CHILDREN | REFS;\n\t}\n\t\n\tget FULL(){\n\t\t\n\t\treturn FULL;\n\t}\n\t\n\tconstructor(o = {}){\n\t\tvar self = this;\n\t\t\n\t\t// written = new Set\n\t\tconst written = this.written = new Map;\n\t\tconst missing = this.missing = new Map;\n\t\tconst agent = this.agent = o.agent || null;\n\t\t\n\t\tthis.buffer = alloc();\n\t\tthis.queued = null;\n\t\tthis[$children$] = [];\n\t\tthis.offset = 0;\n\t\tthis.since = o.since || 0;\n\t\tthis.cutoff = now();\n\t\tthis.cc = {};\n\t\tthis.stats = {\n\t\t\trefs: 0,\n\t\t\tdehydrates: 0\n\t\t};\n\t\tthis.request = o.request;\n\t\tthis.response = o.response;\n\t\tthis.zip = true;\n\t\tthis.t0 = globalThis.performance.now();\n\t\tthis.finished = new Promise(function(resolve,reject) {\n\t\t\t\n\t\t\treturn self.finish = resolve;\n\t\t});\n\t}\n\t\n\tttl(age = (0 * 1000)){\n\t\t\n\t\tthis.cc.maxΞage = age;\n\t\treturn this;\n\t}\n\t\n\tqueue(item,o = {}){\n\t\t\n\t\tthis.queued ||= {};\n\t\treturn this.queued[item.id] = [item,o];\n\t}\n\t\n\t// adding at top level could be special?\n\tadd(item,bitmap = DATA,s = null){\n\t\t\n\t\t\n\t\tlet id = item.id;\n\t\t\n\t\tlet handled = this.written.get(id) || 0;\n\t\tlet inc = bitmap & ~handled;\n\t\t\n\t\tif (inc == 0) { return };// nothing more tonclude for this object\n\t\t\n\t\tif (!(item.rev)) {\n\t\t\t\n\t\t\tthis.missing.set(item,bitmap | handled);\n\t\t\treturn;\n\t\t};\n\t\t\n\t\tthis.written.set(id,handled | bitmap);\n\t\t\n\t\t// if handled and inc\n\t\tif (this.queued && this.queued[id]) {\n\t\t\t\n\t\t\tbitmap = this.queued[id][1];\n\t\t\tthis.queued[id] = null;\n\t\t};\n\t\t\n\t\tlet roles = item.rolesΞfor(this.agent);\n\t\tlet dehydrated = item.dehydrateΞfor(null,roles,bitmap);\n\t\t\n\t\tthis.stats.dehydrates++;\n\t\t\n\t\tif (!(dehydrated)) { return };\n\t\t\n\t\t// has this been updated?\n\t\tif ((inc & DATA)) {\n\t\t\t\n\t\t\tthis.write(dehydrated[$packed$] ||= OP.pack(dehydrated));\n\t\t};\n\t\t\n\t\t// will only include povs if they are actually added\n\t\tif ((inc & POV) && this.agent && item[this.agent]) {\n\t\t\t\n\t\t\tlet val = item[this.agent].$cloud;\n\t\t\t\n\t\t\tif (val?._rev) {\n\t\t\t\t\n\t\t\t\t// include all fields or not?\n\t\t\t\tthis.write(OP.pack(val));\n\t\t\t};\n\t\t};\n\t\t\n\t\tif ((inc & REFS) && dehydrated[$refs$]) {\n\t\t\t\n\t\t\tfor (let $2 = 0, $3 = iter$__(dehydrated[$refs$]), $4 = $3.length; $2 < $4; $2++) {\n\t\t\t\tlet id = $3[$2];\n\t\t\t\tif (!(this.written.has(id))) {\n\t\t\t\t\t\n\t\t\t\t\tthis.stats.refs++;\n\t\t\t\t\tthis.add(OP.get(id),DATA,s);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t\n\t\tif ((inc & CHILDREN)) {\n\t\t\t\n\t\t\tlet items = item.$children;\n\t\t\tif (true && items.hasOwnProperty('then')) {\n\t\t\t\t\n\t\t\t\tlet i = 0;\n\t\t\t\tlet l = items.length;\n\t\t\t\twhile (i < l){\n\t\t\t\t\t\n\t\t\t\t\tthis.add(items[i++],bitmap,s);\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis[$children$].push(items);\n\t\t\t};\n\t\t};\n\t\treturn this;\n\t}\n\t\n\twrite(data){\n\t\t\n\t\tthis.buffer.set(data,this.offset);\n\t\treturn this.offset += data.length;\n\t}\n\t\n\tteardown(){\n\t\t\n\t\tif (this.buffer) { free(this.buffer) };\n\t\treturn this.buffer = null;\n\t}\n\t\n\tasync end(){\n\t\tvar self = this;\n\t\t\n\t\t// wait for current OP resolutions to finish\n\t\t// Try to pack the remaining items\n\t\tlet t0 = Date.now();\n\t\tlet stat = {\n\t\t\tmissing: this.missing.size,\n\t\t\tchildren: this[$children$].length,\n\t\t\tqueued: this.queued && Object.keys(this.queued).length\n\t\t};\n\t\t\n\t\tlet retry = false;\n\t\tif (this.missing.size) {\n\t\t\t\n\t\t\tlet rest = this.missing;\n\t\t\tthis.missing = new Map;\n\t\t\tlet all = [];\n\t\t\tfor (let [item,o] of iter$__(rest)){\n\t\t\t\t\n\t\t\t\tawait item;\n\t\t\t};\n\t\t\t\n\t\t\tfor (let [item,o] of iter$__(rest)){\n\t\t\t\t\n\t\t\t\tthis.add(item,o);\n\t\t\t};\n\t\t};\n\t\t\n\t\tif (this.queued) {\n\t\t\t\n\t\t\tfor (let $7 = this.queued, $5 = 0, $6 = Object.keys($7), $8 = $6.length, id, o; $5 < $8; $5++){\n\t\t\t\tid = $6[$5];o = $7[id];\n\t\t\t\tif (o) {\n\t\t\t\t\t\n\t\t\t\t\tretry = true;\n\t\t\t\t\tawait this.add(o[0],o[1]);\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\tif (this[$children$].length) {\n\t\t\t\n\t\t\tlet all = await Promise.all(this[$children$]);\n\t\t\tlet count = 0;\n\t\t\tthis[$children$] = [];\n\t\t\tfor (let $9 = 0, $10 = iter$__(all), $14 = $10.length; $9 < $14; $9++) {\n\t\t\t\tlet coll = $10[$9];\n\t\t\t\tfor (let $11 = 0, $12 = iter$__(coll), $13 = $12.length; $11 < $13; $11++) {\n\t\t\t\t\tlet item = $12[$11];\n\t\t\t\t\tcount++;\n\t\t\t\t\tthis.add(item,ALL);\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\treturn this.end();\n\t\t};\n\t\t\n\t\t// if retry\n\t\t// end again\n\t\t\n\t\tif ((this.ended != true) ? ((this.ended = true,true)) : false) {\n\t\t\t\n\t\t\t\n\t\t\tif (this.response) { this.pipe(this.response) };\n\t\t\tthis.finish();\n\t\t\treturn setTimeout(function() { return self.teardown(); },10);\n\t\t\t// free the buffer\n\t\t};\n\t}\n\t\n\tabort(){\n\t\t\n\t\treturn true;\n\t}\n\t\n\tpipe(response){\n\t\tvar self = this;\n\t\t\n\t\tlet res = response.res;\n\t\tif (res.aborted) { return };\n\t\t\n\t\treturn res.cork(function() {\n\t\t\t\n\t\t\tres.writeHeader('content-type','application/octet-stream');\n\t\t\tif (self.cc.maxΞage && !(self.since)) {\n\t\t\t\t\n\t\t\t\tlet ttl = Math.round(self.cc.maxΞage / 1000);\n\t\t\t\tres.writeHeader('cache-control',(`max-age=` + ttl));\n\t\t\t};\n\t\t\t// add op_server ?\n\t\t\t\n\t\t\tfor (let $17 = response.headers, $15 = 0, $16 = Object.keys($17), $18 = $16.length, k, v; $15 < $18; $15++){\n\t\t\t\tk = $16[$15];v = $17[k];\n\t\t\t\tres.writeHeader(k,String(v));\n\t\t\t};\n\t\t\t\n\t\t\tres.writeHeader('op-since',String(self.since));\n\t\t\tres.writeHeader('op-until',String(self.cutoff));\n\t\t\t\n\t\t\t// write\n\t\t\tlet out = self.buffer.slice(0,self.offset);\n\t\t\tlet t1 = globalThis.performance.now();\n\t\t\t\n\t\t\tif (self.zip && true) {\n\t\t\t\t\n\t\t\t\tres.writeHeader('content-encoding','br');\n\t\t\t\tbropts.params[zlib.constants.BROTLI_PARAM_SIZE_HINT] = out.length;\n\t\t\t\treturn zlib.brotliCompress(out,bropts,function(err,buf) {\n\t\t\t\t\t\n\t\t\t\t\tif (res.aborted) { return };\n\t\t\t\t\tLL((`br ` + (globalThis.performance.now() - t1) + `ms - ` + (buf.length / out.length) + ` (` + (buf.length) + `b)`));\n\t\t\t\t\tres.end(buf);\n\t\t\t\t\tLL((\"\" + (globalThis.performance.now() - self.t0) + `ms`));\n\t\t\t\t\treturn free(self.buffer);\n\t\t\t\t});\n\t\t\t} else if (self.zip) {\n\t\t\t\t\n\t\t\t\tres.writeHeader('content-encoding','gzip');\n\t\t\t\treturn zlib.gzip(out,gzopts,function(err,buf) {\n\t\t\t\t\t\n\t\t\t\t\tif (res.aborted) { return };\n\t\t\t\t\tconsole.log((`gz ` + (globalThis.performance.now() - t1) + `ms - ` + (buf.length / out.length) + ` (` + (buf.length) + `b)`));\n\t\t\t\t\tres.end(buf);\n\t\t\t\t\tconsole.log((\"\" + (globalThis.performance.now() - self.t0) + `ms`));\n\t\t\t\t\treturn free(self.buffer);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tres.end(out);\n\t\t\t\tconsole.log((\"\" + (globalThis.performance.now() - self.t0) + `ms`));\n\t\t\t\treturn free(self.buffer);\n\t\t\t};\n\t\t});\n\t}\n\tstatic {\n\t\tdefineName$__(this,'OPPubResults');}\n}; globalThis.OPPubResults = OPPubResults;\n\n// Only used in tests on server for now\nclass OPSubscription {\n\t\n\tconstructor(pub,target,o = {}){\n\t\t\n\t\tthis.pub = pub;\n\t\tthis.o = o;\n\t\tthis.agent = OP.agent || o.agent;\n\t\tthis.target = target;\n\t\t!this[$__initor__$] && this[$__hooks__$].inited(this);\n\t}\n\t\n\tasync fetch(){\n\t\t\n\t\tlet writer = new OPPubResults({\n\t\t\tsince: this.o.since,\n\t\t\tagent: this.agent\n\t\t});\n\t\t\n\t\tawait this.pub.cb(writer,this.target);\n\t\tawait writer.end();\n\t\tthis.buffer = writer.buffer.slice(0,writer.offset);\n\t\ttry {\n\t\t\t\n\t\t\tthis.$plain = {};\n\t\t\tthis.consumed = OP.msgpack.unpackMultiple(this.buffer);\n\t\t\tfor (let $19 = 0, $20 = iter$__(this.consumed), $21 = $20.length; $19 < $21; $19++) {\n\t\t\t\tlet raw = $20[$19];\n\t\t\t\tthis.$plain[raw.id] = raw;\n\t\t\t};\n\t\t} catch (e) {\n\t\t\t\n\t\t\tnull;\n\t\t};\n\t\treturn;\n\t}\n\t\n\thas(item){\n\t\t\n\t\treturn !(!(this.$plain[item]));\n\t}\n\t\n\tget(item){\n\t\t\n\t\treturn this.$plain[item];\n\t}\n\tstatic {\n\t\tthis.prototype[$__hooks__$] = imba_hooks;\n\t\tdefineName$__(this,'OPSubscription');decorate$__([imba_αthenable.bind([])],this.prototype,'fetch',null);\n\t}\n}; globalThis.OPSubscription = OPSubscription;\n\n/*\n\n*/\n\nexport class Publication extends Component {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $22;\n\t\tsuper[$__patch__$] && super[$__patch__$]($$,fields);\n\t\t($22 = $$.id) !== undefined && (this.id = $22);\n\t\t($22 = $$.options) !== undefined && (this.options = $22);\n\t\t($22 = $$.cb) !== undefined && (this.cb = $22);\n\t\t\n\t}\n\tconstructor(){\n\t\tsuper(...arguments);\n\t\tsuper[$__init__$] || this[$__init__$]();this[$__initor__$]===$1 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tdeep && super[$__init__$] && super[$__init__$](...arguments);\n\t\tthis.id = $$ ? $$.id : undefined;\n\t\tthis.options = $$ ? $$.options : undefined;\n\t\tthis.cb = $$ ? $$.cb : undefined;\n\t\t\n\t}\n\tget cond(){\n\t\t\n\t\t// change naming\n\t\treturn this.id;\n\t}\n\t\n\tmatch(item){\n\t\t\n\t\treturn this.cond == item || ((this.cond instanceof Function) && (item instanceof this.cond));\n\t}\n\t\n\tsetup(fetcher){\n\t\t\n\t\treturn this.fetcher = fetcher;\n\t}\n\t\n\t/**\n\t@param {ServerRequest} req\n\t@param {Response} res\n\t*/\n\tasync respond(req,res,item = null){\n\t\t\n\t\tlet since = Number(req.query.since || 0);\n\t\tlet writer = new OPPubResults({\n\t\t\trequest: req,\n\t\t\tresponse: res,\n\t\t\tsince: since,\n\t\t\tagent: req.agent\n\t\t});\n\t\t\n\t\twriter.ttl((2 * 24 * 60 * 60 * 1000));\n\t\t// get all the public roles of agent\n\t\t\n\t\tlet pars = {};\n\t\tfor (let $25 = req.params, $23 = 0, $24 = Object.keys($25), $26 = $24.length, key, value; $23 < $26; $23++){\n\t\t\tkey = $24[$23];value = $25[key];\n\t\t\tpars[key] = await OP.get(value);\n\t\t};\n\t\t\n\t\tif (req.session) {\n\t\t\t\n\t\t\t// full resolve here...\n\t\t\tawait req.session?.resolveDeep?.();\n\t\t};\n\t\t\n\t\tlet out = (this.cb || this.fetcher)(writer,item || pars);\n\t\tawait out;\n\t\treturn writer.end();\n\t}\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $1;defineName$__(this,'Publication');inheritClass$__(this);}\n};\n","dependencies":[],"map":{"version":3,"file":"publication.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/publication.imba"],"sourcesContent":["import { now, NamedSet } from './utils'\nimport { Component } from './component'\nimport { PassThrough } from 'stream'\nimport zlib from 'zlib'\nimport './protocol'\n\nimport type {ServerRequest, Response} from './server'\n\nlet gzopts = {\n\tlevel: zlib.constants.Z_BEST_SPEED,\n\tchunkSize: 64 * 1024,\n\tmemLevel: zlib.constants.Z_MAX_LEVEL\n}\n\nlet bropts = {\n\tchunkSize: 8 * 1024,\n\t# memLevel: zlib.constants.Z_MAX_LEVEL\n\tparams: {\n\t\t[zlib.constants.BROTLI_PARAM_MODE]: zlib.constants.BROTLI_MODE_GENERIC\n\t\t[zlib.constants.BROTLI_PARAM_QUALITY]: 1\n\t}\n}\nconst p = console.log.bind(console)\nconst bufferPool = []\n\nconst DATA = OPFLAGS.PACK_DATA\nconst POV = OPFLAGS.PACK_POV\nconst CHILDREN = OPFLAGS.PACK_CHILDREN\nconst REFS = OPFLAGS.PACK_REFS\nconst FULL = OPFLAGS.FULL\nconst ALL = DATA | POV | CHILDREN | REFS\n\ndef alloc\n\tlet buf = bufferPool.pop!\n\treturn buf or new Uint8Array(8 * 1024 * 1024)\n\ndef free buf\n\tbufferPool.unshift(buf)\n\nglobal class OPPubResults\n\n\tget ALL\n\t\tDATA | POV | CHILDREN | REFS\n\n\tget FULL\n\t\tFULL\n\n\tdef constructor o = {}\n\t\t# written = new Set\n\t\tconst written = self.written = new Map\n\t\tconst missing = self.missing = new Map\n\t\tconst agent = self.agent = o.agent or null\n\n\t\tbuffer = alloc()\n\t\tqueued = null\n\t\t#children = []\n\t\toffset = 0\n\t\tsince = o.since or 0\n\t\tcutoff = now!\n\t\tcc = {}\n\t\tstats = {\n\t\t\trefs: 0\n\t\t\tdehydrates:0\n\t\t}\n\t\trequest = o.request\n\t\tresponse = o.response\n\t\tzip = yes\n\t\tt0 = global.performance.now!\n\t\tfinished = new Promise do(resolve,reject)\n\t\t\tfinish = resolve\n\n\tdef ttl age = 0s\n\t\tcc.max-age = age\n\t\tself\n\n\tdef queue item, o = {}\n\t\tqueued ||= {}\n\t\tqueued[item.id] = [item,o]\n\n\t# adding at top level could be special?\n\tdef add item, bitmap = DATA, s = null\n\n\t\tlet id = item.id\n\n\t\tlet handled = written.get(id) or 0\n\t\tlet inc = bitmap & ~handled\n\n\t\treturn if inc == 0 # nothing more tonclude for this object\n\n\t\tunless item.rev\n\t\t\tmissing.set(item,bitmap | handled)\n\t\t\treturn\n\n\t\twritten.set(id,handled | bitmap)\n\n\t\t# if handled and inc\n\t\tif queued and queued[id]\n\t\t\tbitmap = queued[id][1]\n\t\t\tqueued[id] = null\n\n\t\tlet roles = item.roles-for(agent)\n\t\tlet dehydrated = item.dehydrate-for(null, roles, bitmap)\n\n\t\tstats.dehydrates++\n\n\t\treturn unless dehydrated\n\n\t\t# has this been updated?\n\t\tif (inc & DATA)\n\t\t\twrite(dehydrated.#packed ||= OP.pack(dehydrated))\n\n\t\t# will only include povs if they are actually added\n\t\tif (inc & POV) and agent and item[agent]\n\t\t\tlet val = item[agent].$cloud\n\n\t\t\tif val.._rev\n\t\t\t\t# include all fields or not?\n\t\t\t\twrite(OP.pack(val))\n\n\t\tif (inc & REFS) and dehydrated.#refs\n\t\t\tfor id in dehydrated.#refs\n\t\t\t\tunless written.has(id)\n\t\t\t\t\tstats.refs++\n\t\t\t\t\tadd(OP.get(id),DATA,s)\n\n\t\tif (inc & CHILDREN)\n\t\t\tlet items = item.$children\n\t\t\tif true and items.hasOwnProperty('then')\n\t\t\t\tlet i = 0\n\t\t\t\tlet l = items.length\n\t\t\t\twhile i < l\n\t\t\t\t\tadd(items[i++],bitmap,s)\n\t\t\telse\n\t\t\t\t#children.push(items)\n\t\tself\n\n\tdef write data\n\t\tbuffer.set(data,offset)\n\t\toffset += data.length\n\n\tdef teardown\n\t\tfree(buffer) if buffer\n\t\tbuffer = null\n\n\tdef end\n\t\t# wait for current OP resolutions to finish\n\t\t# Try to pack the remaining items\n\t\tlet t0 = Date.now!\n\t\tlet stat = {\n\t\t\tmissing: missing.size\n\t\t\tchildren: #children.length\n\t\t\tqueued: queued and Object.keys(queued).length\n\t\t}\n\n\t\tlet retry = no\n\t\tif missing.size\n\t\t\tlet rest = missing\n\t\t\tmissing = new Map\n\t\t\tlet all = []\n\t\t\tfor [item,o] of rest\n\t\t\t\tawait item\n\n\t\t\tfor [item,o] of rest\n\t\t\t\tadd(item,o)\n\n\t\tif queued\n\t\t\tfor own id,o of queued\n\t\t\t\tif o\n\t\t\t\t\tretry = yes\n\t\t\t\t\tawait add(o[0],o[1])\n\t\tif #children.length\n\t\t\tlet all = await Promise.all(#children)\n\t\t\tlet count = 0\n\t\t\t#children = []\n\t\t\tfor coll in all\n\t\t\t\tfor item in coll\n\t\t\t\t\tcount++\n\t\t\t\t\tadd(item,ALL)\n\n\t\t\treturn end!\n\n\t\t# if retry\n\t\t# end again\n\n\t\tif ended =? true\n\n\t\t\tpipe(response) if response\n\t\t\tfinish()\n\t\t\tsetTimeout(&,10) do teardown!\n\t\t\t# free the buffer\n\n\tdef abort\n\t\tyes\n\n\tdef pipe response\n\t\tlet res = response.res\n\t\treturn if res.aborted\n\n\t\tres.cork do\n\t\t\tres.writeHeader('content-type','application/octet-stream')\n\t\t\tif cc.max-age and !since\n\t\t\t\tlet ttl = Math.round(cc.max-age / 1000)\n\t\t\t\tres.writeHeader('cache-control',`max-age={ttl}`)\n\t\t\t# add op_server ?\n\n\t\t\tfor own k,v of response.headers\n\t\t\t\tres.writeHeader(k,String(v))\n\n\t\t\tres.writeHeader('op-since',String(since))\n\t\t\tres.writeHeader('op-until',String(cutoff))\n\n\t\t\t# write\n\t\t\tlet out = buffer.slice(0,offset)\n\t\t\tlet t1 = global.performance.now!\n\n\t\t\tif zip and true\n\t\t\t\tres.writeHeader('content-encoding','br')\n\t\t\t\tbropts.params[zlib.constants.BROTLI_PARAM_SIZE_HINT] = out.length\n\t\t\t\tzlib.brotliCompress(out,bropts) do(err,buf)\n\t\t\t\t\treturn if res.aborted\n\t\t\t\t\tLL `br {global.performance.now! - t1}ms - {buf.length / out.length} ({buf.length}b)`\n\t\t\t\t\tres.end(buf)\n\t\t\t\t\tLL `{global.performance.now! - t0}ms`\n\t\t\t\t\tfree(buffer)\n\n\t\t\telif zip\n\t\t\t\tres.writeHeader('content-encoding','gzip')\n\t\t\t\tzlib.gzip(out,gzopts) do(err,buf)\n\t\t\t\t\treturn if res.aborted\n\t\t\t\t\tconsole.log `gz {global.performance.now! - t1}ms - {buf.length / out.length} ({buf.length}b)`\n\t\t\t\t\tres.end(buf)\n\t\t\t\t\tconsole.log `{global.performance.now! - t0}ms`\n\t\t\t\t\tfree(buffer)\n\t\t\telse\n\t\t\t\tres.end(out)\n\t\t\t\tconsole.log `{global.performance.now! - t0}ms`\n\t\t\t\tfree(buffer)\n\n# Only used in tests on server for now\nglobal class OPSubscription\n\tdef constructor pub, target, o = {}\n\t\tpub = pub\n\t\to = o\n\t\tagent = OP.agent or o.agent\n\t\ttarget = target\n\n\t@thenable def fetch\n\t\tlet writer = new OPPubResults({\n\t\t\tsince: o.since\n\t\t\tagent: agent\n\t\t})\n\n\t\tawait pub.cb(writer,target)\n\t\tawait writer.end!\n\t\tbuffer = writer.buffer.slice(0,writer.offset)\n\t\ttry\n\t\t\t$plain = {}\n\t\t\tconsumed = OP.msgpack.unpackMultiple(buffer)\n\t\t\tfor raw in consumed\n\t\t\t\t$plain[raw.id] = raw\n\n\t\tcatch e\n\t\t\tnull\n\t\treturn\n\n\tdef has item\n\t\t!!$plain[item]\n\n\tdef get item\n\t\t$plain[item]\n\n###\n\n###\nexport class Publication < Component\n\tid\\string\n\n\toptions\\any\n\tcb\\any\n\n\tget cond\n\t\t# change naming\n\t\tid\n\n\tdef match item\n\t\tcond == item or (cond isa Function and item isa cond)\n\n\tdef setup fetcher\n\t\tself.fetcher = fetcher\n\n\tdef respond req\\ServerRequest, res\\Response,item = null\n\t\tlet since = Number(req.query.since or 0)\n\t\tlet writer = new OPPubResults({\n\t\t\trequest: req\n\t\t\tresponse: res\n\t\t\tsince: since\n\t\t\tagent: req.agent\n\t\t})\n\n\t\twriter.ttl(2days)\n\t\t# get all the public roles of agent\n\n\t\tlet pars = {}\n\t\tfor own key,value of req.params\n\t\t\tpars[key] = await OP.get(value)\n\n\t\tif req.session\n\t\t\t# full resolve here...\n\t\t\tawait req.session..resolveDeep!\n\n\t\tlet out = (cb or fetcher)(writer,item or pars)\n\t\tawait out\n\t\twriter.end!\n"],"names":[],"mappings":"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"}},"css":{"code":""},"warnings":[],"errors":[]}
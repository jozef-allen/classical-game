{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};\nimport {accessor as imba_accessor} from 'imba';\nvar $1 = Symbol('alias'), $2 = Symbol(), $3 = Symbol(), $5;\nconst $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__');\n\n/*body*/\nimport setup from './setup';\n\n// Extending the base user with additional fields and functionality\nclass User extends OP.User {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $4;\n\t\tsuper[$__patch__$] && super[$__patch__$]($$,fields);\n\t\tfields && ($4 = $$.alias) !== undefined && this.ααalias.$init($4,this,$1,'alias',$$);\n\t\t\n\t}\n\tconstructor(){\n\t\tsuper(...arguments);\n\t\tsuper[$__init__$] || this[$__init__$]();this[$__initor__$]===$3 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tdeep && super[$__init__$] && super[$__init__$](...arguments);\n\t\tfields && this.ααalias.$init($$ ? $$.alias : undefined,this,$1,'alias',$$);\n\t\t\n\t}\n\tset alias(val){ this.ααalias.$set(val,this,$1,'alias') }\n\tget alias(){ return this.ααalias.$get(this,$1,'alias') }\n\tget ααalias(){ return this[$2] || imba_accessor(($5 = this.αstring(),$5),this,$1,'alias',$2,User.prototype) }\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $3;defineName$__(this,'User');inheritClass$__(this);}\n};\n\nawait setup(__filename);\n\ntest(\"initial\",async function() {\n\t\n\tlet user = await OP.User.create({name: \"Sindre\",alias: \"sindre\"});\n\treturn ok(user instanceof User);\n});\n","dependencies":[],"map":{"version":3,"file":"user.test.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/test/user.test.imba"],"sourcesContent":["import setup from './setup'\n\n# Extending the base user with additional fields and functionality\nclass User < OP.User\n\talias @string\n\nawait setup(__filename)\n\ntest \"initial\" do\n\tlet user = await OP.User.create(name: \"Sindre\", alias: \"sindre\")\n\tok user isa User\n"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAAM,CAAC,KAAK,MAAM,SAAS;;;AAG3B,KAAK,CAAC,IAAI,SAAG,EAAE,CAAC,IAAI,EAAA;qCAHpB;;;qBAIC,KAAK,CAAA;;EAJN;cAAA;;;EAAA;kDAAA;;uCAIC,KAAK;;EAJN;KAIC,KAAK;KAAL,KAAK;KAAL,OAAK,gDAAC,OAAO,EAAA,wBADR,IAAI;;;AACI,CAAA;;MAER,KAAK,CAAC,UAAU,CAAC;;AAEvB,IAAI,CAAC,SAAS,CAAC,cAAE,GAAA;;KACZ,IAAI,SAAS,EAAE,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,EAAE,QAAQ,CAAE,KAAK,EAAE,QAAQ,EAAC;CAChE,OAAA,EAAE,CAAC,IAAI,YAAK,IAAI,CAAA;CAAA,CAFb;AAGJ;"}},"css":{"code":""},"warnings":[],"errors":[]}
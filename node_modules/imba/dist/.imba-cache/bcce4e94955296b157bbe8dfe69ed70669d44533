{"js":{"code":"\n/*body*/\nimport setup from '../setup';\nimport fixtures from './schema';\n\n// TODO Create a proxy object for client that can be used to check any property etc\ntest(\"placeholder\",function() { return 1; });\n\nif (!(process.env.CI)) {\n\t\n\tconst srv = await setup(__filename,{serve: 'todos/server.imba',data: fixtures});\n\tconst tab = await srv.browser.tab;\n\t\n\tlet tabtodo = tab.proxy('t05');\n\t\n\tawait OP.wal;\n\ttest.only(\"Server ID included in headers\",async function() {\n\t\t\n\t\tawait tab.create({id: 't05',name: \"My todo\"});\n\t\tawait tab.pause();\n\t\tlet header = await tab.run(async function() {\n\t\t\t\n\t\t\tconst res = await this.fetch(\"/ping\");\n\t\t\treturn res.headers.get(\"op-server\");\n\t\t});\n\t\treturn ok(header.startsWith(\"SRV\"));\n\t});\n\t\n\ttest(\"initial\",async function() {\n\t\t\n\t\tawait tab.create({id: 't05',name: \"My todo\"});\n\t\tlet todo = await OP.get('t05');\n\t\tok(todo.resolvedΦ);\n\t\tok(todo.name,'My todo');\n\t\tok((await tabtodo.name),'My todo');\n\t\tok(await tab.run(function() { return this.OP.get('t05').resolvedΦ; }));\n\t\treturn ok(await tab.run(function() { return this.OP.get('t05').$plain.hasOwnProperty('_rev'); }));\n\t\t// The $plain on client should now have been merged back with that from the server\n\t\t\n\t\t// Now change the name\n\t\t// await tab.set('todo05','seen',OP.now)\n\t});\n\ttest(\"update on client\",async function() {\n\t\t\n\t\t// let proxy = tab.proxy('todo05')\n\t\tawait tabtodo.update({name: 'Updated'});\n\t\tok(await tabtodo.name,'Updated');\n\t\tok((await tab.get('t05')).$plain.hasOwnProperty('_rev'));\n\t\t\n\t\t// Has it been synced to the other tab?\n\t\tok((await tab.alt.get('t05')).$plain.name,'Updated');\n\t\treturn await tabtodo.update({name: 'Updated2'});\n\t});\n\t\n\ttest(\"set pov prop\",async function() {\n\t\t\n\t\tlet now = OP.now;\n\t\tlet key = (`t05.` + (tab.session));\n\t\tlet res = OP.wal.waitfor(key);\n\t\t\n\t\tawait tab.set('t05','seen',now);\n\t\t\n\t\tok(await res);\n\t\t// check that it is already reflected in pov\n\t\tlet pov = OP.get('t05').$pov(tab.session);\n\t\tlet plain = OP.$cloud[key];\n\t\t\n\t\tok(pov.seen,true);\n\t\tok(plain.seen,now);\n\t\tok(plain.id,key);\n\t\treturn ok(plain._rev >= 4);\n\t});\n\t\n\ttest(\"test client\",async function() { return await tab.run(function() {\n\t\t\n\t\treturn this.test();\n\t}); });\n\t\n\ttest(\"simultaneous adding to zset\",async function() {\n\t\t\n\t\tawait tab.alt;\n\t\tawait Promise.all([\n\t\t\ttab.run(function() { return this.add_session(); }),\n\t\t\ttab.alt.run(function() { return this.add_session(); })\n\t\t]);\n\t\tok(1);\n\t\tawait globalThis.sleep(100);\n\t\tlet todo = OP.get('t02');\n\t\tawait todo.resolve(true);\n\t\tok(todo.$plain.watchers[tab.clid]);\n\t\treturn ok(todo.$plain.watchers[tab.alt.clid]);\n\t});\n\t\n\ttest(\"before persist hooks in the client\",async function() {\n\t\t\n\t\tawait tab.alt;\n\t\tawait tab.run(async function() { return await this.attach(); });\n\t\tok((await tab.run(function() { return this.attachement.progress; })),-23);\n\t\tnok(await tab.run(function() { return this.attachement.filePersisted; }));\n\t\t\n\t\tawait tab.run(function() { return this.complete(); });\n\t\tok((await tab.run(function() { return this.progress; })),100);\n\t\tawait tab.run(async function() { return await await this.attach(); });\n\t\t// await tab.pause!\n\t\treturn ok(await tab.run(function() { return this.attachement.filePersisted; }));\n\t});\n\t\n\tawait srv.e2e();\n};\n","dependencies":[],"map":{"version":3,"file":"e2e.test.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/test/todos/e2e.test.imba"],"sourcesContent":["import setup from '../setup'\nimport fixtures from './schema'\n\n# TODO Create a proxy object for client that can be used to check any property etc\ntest \"placeholder\" do 1\n\nunless process.env.CI\n\tconst srv = await setup(__filename, serve: 'todos/server.imba', data: fixtures)\n\tconst tab = await srv.browser.tab\n\n\tlet tabtodo = tab.proxy('t05')\n\n\tawait OP.wal\n\ttest.only \"Server ID included in headers\" do\n\t\tawait tab.create({id: 't05', name: \"My todo\"})\n\t\tawait tab.pause!\n\t\tlet header = await tab.run do\n\t\t\tconst res = await this.fetch(\"/ping\")\n\t\t\tres.headers.get \"op-server\"\n\t\tok header.startsWith \"SRV\"\n\n\ttest \"initial\" do\n\t\tawait tab.create({id: 't05', name: \"My todo\"})\n\t\tlet todo = await OP.get('t05')\n\t\tok todo.resolved?\n\t\tok todo.name, 'My todo'\n\t\tok (await tabtodo.name),'My todo'\n\t\tok await tab.run do this.OP.get('t05').resolved?\n\t\tok await tab.run do this.OP.get('t05').$plain.hasOwnProperty('_rev')\n\t\t# The $plain on client should now have been merged back with that from the server\n\n\t\t# Now change the name\n\t\t# await tab.set('todo05','seen',OP.now)\n\ttest \"update on client\" do\n\t\t# let proxy = tab.proxy('todo05')\n\t\tawait tabtodo.update(name: 'Updated')\n\t\tok await tabtodo.name, 'Updated'\n\t\tok (await tab.get('t05')).$plain.hasOwnProperty('_rev')\n\n\t\t# Has it been synced to the other tab?\n\t\tok (await tab.alt.get('t05')).$plain.name, 'Updated'\n\t\tawait tabtodo.update(name: 'Updated2')\n\n\ttest \"set pov prop\" do\n\t\tlet now = OP.now\n\t\tlet key = `t05.{tab.session}`\n\t\tlet res = OP.wal.waitfor(key)\n\n\t\tawait tab.set('t05','seen',now)\n\n\t\tok await res\n\t\t# check that it is already reflected in pov\n\t\tlet pov = OP.get('t05').$pov(tab.session)\n\t\tlet plain = OP.$cloud[key]\n\n\t\tok pov.seen, yes\n\t\tok plain.seen, now\n\t\tok plain.id, key\n\t\tok plain._rev >= 4\n\n\ttest \"test client\" do await tab.run do\n\t\tthis.test()\n\n\ttest \"simultaneous adding to zset\" do\n\t\tawait tab.alt\n\t\tawait Promise.all([\n\t\t\ttab.run do this.add_session!\n\t\t\ttab.alt.run do this.add_session!\n\t\t])\n\t\tok 1\n\t\tawait global.sleep(100ms)\n\t\tlet todo = OP.get('t02')\n\t\tawait todo.resolve(yes)\n\t\tok todo.$plain.watchers[tab.clid]\n\t\tok todo.$plain.watchers[tab.alt.clid]\n\n\ttest \"before persist hooks in the client\" do\n\t\tawait tab.alt\n\t\tawait tab.run do await this.attach!\n\t\tok (await tab.run do this.attachement.progress), -23\n\t\tnok await tab.run do this.attachement.filePersisted\n\n\t\tawait tab.run do this.complete!\n\t\tok (await tab.run do this.progress), 100\n\t\tawait tab.run do await await this.attach!\n\t\t# await tab.pause!\n\t\tok await tab.run do this.attachement.filePersisted\n\n\tawait srv.e2e!\n"],"names":[],"mappings":";;AAAA,MAAM,CAAC,KAAK,MAAM,UAAU;AAC5B,MAAM,CAAC,QAAQ,MAAM,UAAU;;;AAG/B,IAAI,CAAC,aAAa,CAAC,QAAE,KAAC,OAAA,CAAC,IAAnB;;AAEJ,EAAM,IAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAA;;OACd,GAAG,SAAS,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,mBAAmB,CAAE,IAAI,EAAE,QAAQ,EAAC;OACzE,GAAG,SAAS,GAAG,CAAC,OAAO,CAAC,GAAG;;KAE7B,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;;OAExB,EAAE,CAAC,GAAG;CACZ,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,cAAE,GAAA;;QACrC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,KAAK,CAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QACxC,GAAG,CAAC,KAAK,EAAC;MACZ,MAAM,SAAS,GAAG,CAAC,GAAG,CAAC,cAAE,GAAA;;SACtB,GAAG,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;GACrC,OAAA,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAA;GAAA,CAFF;EAG1B,OAAA,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAA,CAAA;EAAA,CANlB;;CAQT,IAAI,CAAC,SAAS,CAAC,cAAE,GAAA;;QACV,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,KAAK,CAAE,IAAI,EAAE,SAAS,CAAC,CAAC;MAC1C,IAAI,SAAS,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;EAC9B,EAAE,CAAC,IAAI,CAAC,SAAS,CAAA;EACjB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAE,SAAS,CAAA;EACvB,EAAE,QAAQ,OAAO,CAAC,IAAI,EAAE,SAAS,CAAA;EACjC,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,IAAhC,CAAd;EACF,OAAA,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,IAApD,CAAd;;;;;EAIqC,CAXpC;CAYJ,IAAI,CAAC,kBAAkB,CAAC,cAAE,GAAA;;;QAEnB,OAAO,CAAC,MAAM,EAAC,IAAI,EAAE,SAAS,EAAC;EACrC,EAAE,OAAO,OAAO,CAAC,IAAI,CAAE,SAAS,CAAA;EAChC,EAAE,QAAQ,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;;;EAGvD,EAAE,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,IAAI,CAAE,SAAS,CAAA;eAC9C,OAAO,CAAC,MAAM,EAAC,IAAI,EAAE,UAAU,EAAC;EAAA,CARnC;;CAUJ,IAAI,CAAC,cAAc,CAAC,cAAE,GAAA;;MACjB,GAAG,GAAG,EAAE,CAAC,GAAG;MACZ,GAAG,GAAG,UAAM,CAAA,GAAG,CAAC,OAAO,CAAA,CAAE;MACzB,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC;;QAEvB,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;;EAE/B,EAAE,OAAO,GAAG,CAAV;;MAEE,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;MACrC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAA,GAAI,CAAC;;EAE1B,EAAE,CAAC,GAAG,CAAC,IAAI,CAAE,IAAG,CAAA;EAChB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAE,GAAG,CAAA;EAClB,EAAE,CAAC,KAAK,CAAC,EAAE,CAAE,GAAG,CAAA;EAChB,OAAA,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;EAAA,CAff;;CAiBJ,IAAI,CAAC,aAAa,CAAC,cAAE,kBAAO,GAAG,CAAC,GAAG,CAAC,QAAE,GAAA;;EACrC,OAAA,IAAI,CAAC,IAAI,EAAE;EAAA,CADuB,IAA/B;;CAGJ,IAAI,CAAC,6BAA6B,CAAC,cAAE,GAAA;;QAC9B,GAAG,CAAC,GAAG;QACP,OAAO,CAAC,GAAG,CAAC,CACjB;GAAA,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,WAAW,EAAC,IAArB;GACP,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,WAAW,EAAC,IAArB;EAAA,CACX,CAAC;EACF,EAAE,CAAC,CAAC,CAAA;QACE,UAAM,CAAC,KAAK,CAAC,GAAK,CAAC;MACrB,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,IAAG,CAAC;EACvB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAA,GAAI,CAAC,IAAI,CAAC,CAAA;EACjC,OAAA,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAA,GAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;EAAA,CAXlC;;CAaJ,IAAI,CAAC,oCAAoC,CAAC,cAAE,GAAA;;QACrC,GAAG,CAAC,GAAG;QACP,GAAG,CAAC,GAAG,CAAC,cAAE,kBAAO,IAAI,CAAC,MAAM,EAAC,IAAtB;EACb,EAAE,QAAQ,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,IAA7B,EAAgC,GAAG,CAAA;EACpD,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,WAAW,CAAC,aAAa,IAAlC,CAAd;;QAEG,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,QAAQ,EAAC,IAAlB;EACb,EAAE,QAAQ,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,QAAQ,IAAjB,EAAoB,GAAG,CAAA;QAClC,GAAG,CAAC,GAAG,CAAC,cAAE,wBAAa,IAAI,CAAC,MAAM,EAAC,IAA5B;;EAEb,OAAA,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,QAAE,KAAC,OAAA,IAAI,CAAC,WAAW,CAAC,aAAa,IAAlC,CAAd;EAAgD,CAV/C;;OAYE,GAAG,CAAC,GAAG,EAAC;CAAA;AACf;"}},"css":{"code":""},"warnings":[],"errors":[]}
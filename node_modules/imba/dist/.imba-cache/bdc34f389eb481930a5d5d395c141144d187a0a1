{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction decorate$__(decorators,target,key,desc){\n\tvar c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\tif (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\telse for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\treturn c > 3 && r && Object.defineProperty(target, key, r), r;\n};;\nfunction iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };\nimport {αlazy as imba_αlazy, use_hooks as imba_use_hooks, hooks as imba_hooks, emit as imba_emit, once as imba_once} from 'imba';\n(imba_use_hooks());\nconst $__hooks__$ = Symbol.for('#__hooks__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__');\nlet rootdir;\n\n/*body*/\nconst p = console.log.bind(console);\nconst clients = new Set;\n\nimport {SharedBuffer} from './worker/buffer.js';\nimport './protocol';\n\nimport * as kvs from 'idb-keyval';\n\ntry {\n\trootdir = globalThis.navigator.storage.getDirectory();\n} catch (e) { };\n\nclass StreamValue {\n\t\n\tstatic get(id){\n\t\t\n\t\treturn this[id] ||= new StreamValue(id);\n\t}\n\t\n\tconstructor(id){\n\t\t\n\t\tthis.id = id;\n\t\tthis.handle = null;\n\t\tthis.writer = null;\n\t\tthis.file = null;\n\t\tthis.size = null;\n\t\tthis.setup;\n\t\t!this[$__initor__$] && this[$__hooks__$].inited(this);\n\t}\n\t\n\tget setup(){\n\t\tvar self = this;\n\t\t\n\t\treturn new Promise(async function(resolve) {\n\t\t\t\n\t\t\tlet root = await rootdir;\n\t\t\tself.handle = await root.getFileHandle(self.id,{create: true});\n\t\t\tself.file = await self.handle.getFile();\n\t\t\tself.size = self.file.size;\n\t\t\tself.buffer = await self.file.arrayBuffer();\n\t\t\tglobalThis.h = self;\n\t\t\tp(`setup stream`,self.handle,self.file,self.buffer);\n\t\t\treturn resolve(self);\n\t\t});\n\t}\n\t\n\tasync write(offset,data){\n\t\t\n\t\tawait this.setup;\n\t\t\n\t\tlet t0 = globalThis.performance.now();\n\t\t\n\t\t// what if someone is already writing to it?\n\t\tp('getting?',rootdir);\n\t\tif (offset < this.size) {\n\t\t\t\n\t\t\tp(`trying to write at wrong offset!!`);\n\t\t\toffset = this.size;\n\t\t\t// should return error?\n\t\t};\n\t\tif (offset == -1) {\n\t\t\t\n\t\t\toffset = this.size;\n\t\t};\n\t\t\n\t\tthis.writer ||= await this.handle.createWritable({keepExistingData: true});\n\t\t\n\t\tp('write StreamValue',offset,data);\n\t\t\n\t\tawait this.writer.seek(this.size);\n\t\t\n\t\tif (offset == this.size) {\n\t\t\t\n\t\t\tawait this.writer.write(data);\n\t\t} else if (offset >= 0) {\n\t\t\t\n\t\t\tawait this.writer.write({type: \"write\",position: offset,data: data});\n\t\t};\n\t\t\n\t\tthis.size = offset + data.length;// must be binary data?\n\t\t\n\t\tthis.writer.close();\n\t\tthis.writer = null;\n\t\tp(`wrote to file`,globalThis.performance.now() - t0);\n\t\treturn true;\n\t}\n\t\n\tread(offset){\n\t\t\n\t\treturn true;\n\t}\n\tstatic {\n\t\tthis.prototype[$__hooks__$] = imba_hooks;\n\t\tdefineName$__(this,'StreamValue');decorate$__([imba_αlazy.bind([])],this.prototype,'setup',null);\n\t}\n}; globalThis.StreamValue = StreamValue;\n\nclass StorageAdapter {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $1;\n\t\t($1 = $$.store) !== undefined && (this.store = $1);\n\t\t($1 = $$.cache) !== undefined && (this.cache = $1);\n\t\t($1 = $$.map) !== undefined && (this.map = $1);\n\t\t\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tvar $2;\n\t\tthis.store = ($$ && ($2 = $$.store) !== undefined) ? ($2) : kvs.createStore(`test-db`,'db');\n\t\tthis.cache = ($$ && ($2 = $$.cache) !== undefined) ? ($2) : {};\n\t\tthis.map = ($$ && ($2 = $$.map) !== undefined) ? ($2) : {};\n\t\t\n\t}\n\tconstructor(){\n\t\t\n\t\tthis[$__init__$]();\n\t\tthis.load();\n\t}\n\t\n\ttest(){\n\t\t\n\t\treturn Math.random();\n\t}\n\t\n\tasync load(){\n\t\t\n\t\t// wait for loading\n\t\tp(`entries in idb`);\n\t\t// await kvs.set('op',{a: 1, b: 2, c: 3},store)\n\t\tlet vals = await kvs.values(this.store);\n\t\tlet entries = await kvs.entries(this.store);\n\t\tp(`entries in idb`,entries,vals,globalThis.performance.now());\n\t\tthis.state = vals;\n\t\tfor (let $3 = 0, $4 = iter$__(vals), $5 = $4.length; $3 < $5; $3++) {\n\t\t\tlet item = $4[$3];\n\t\t\tthis.map[item.id] = item;\n\t\t};\n\t\t\n\t\treturn this.broadcast(vals);\n\t\t// for client of clients\n\t\t// client.send({source: 'locals', entries: vals})\n\t}\n\t\n\tonconnect(client){\n\t\t\n\t\tif (this.state) {\n\t\t\t\n\t\t\treturn client.send({target: 'storage',data: Object.values(this.map)});\n\t\t};\n\t}\n\t\n\tfswrite(id,offset,bytes){\n\t\t\n\t\t// should end up with a packet we send to the others\n\t\tp(`write fs`,id,offset,bytes);\n\t\tlet buf = StreamValue.get(id);\n\t\tbuf.write(offset,bytes);\n\t\t// let buf = SharedBuffer.get(id)\n\t\t// buf.appendChunk()\n\t\treturn true;\n\t}\n\t\n\tfstest(...params){\n\t\t\n\t\treturn p(params);\n\t}\n\t\n\tasync lookup(id){\n\t\t\n\t\tp(`lookup`,id);\n\t\t\n\t\tlet buf = StreamValue.get(id);\n\t\tawait buf.setup;\n\t\treturn {\n\t\t\tid: id,\n\t\t\tsize: buf.size,\n\t\t\thandle: buf.handle,\n\t\t\tfile: buf.file\n\t\t};\n\t}\n\t\n\tfsopen(id,buf){\n\t\t\n\t\tlet buf2 = SharedBuffer.get(id);\n\t\treturn buf.buffer;\n\t}\n\t\n\tasync put(value){\n\t\t\n\t\tp(`put to localstore`,value);\n\t\t\n\t\tlet id = value.id;\n\t\tlet prev = this.map[id];\n\t\t\n\t\t// check if there was something here before\n\t\t\n\t\tvalue._local = Date.now();\n\t\t// value._rev = -1 # really?\n\t\t\n\t\tthis.map[id] = value;\n\t\tawait kvs.set(id,value,this.store);\n\t\tthis.broadcast(value);\n\t\treturn value;\n\t}\n\t\n\tbroadcast(data){\n\t\tvar $6;\n\t\t\n\t\t// no use of the msgpack format here...\n\t\t$6 = [];\n\t\tfor (let client of iter$__(clients)){\n\t\t\t\n\t\t\t$6.push(client.send({target: 'storage',data: data}));\n\t\t};\n\t\treturn $6;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'StorageAdapter');}\n};\n\nconst storage = new StorageAdapter;\n\nclass ClientProxy {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $7;\n\t\t($7 = $$.slot) !== undefined && (this.slot = $7);\n\t\t($7 = $$.seen) !== undefined && (this.seen = $7);\n\t\t\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tvar $8;\n\t\tthis.slot = ($$ && ($8 = $$.slot) !== undefined) ? ($8) : 0;\n\t\tthis.seen = ($$ && ($8 = $$.seen) !== undefined) ? ($8) : Date.now();\n\t\t\n\t}\n\tconstructor(port){\n\t\tthis[$__init__$]();\n\t\tthis.port = port;\n\t}\n\t\n\tkeepalive(){\n\t\t\n\t\tthis.seen = Date.now();\n\t\treturn imba_emit(this,'seen');\n\t}\n\t\n\tsend(data){\n\t\t\n\t\treturn this.port.postMessage(data);\n\t}\n\t\n\trelease(){\n\t\t\n\t\treturn clients.delete(this);\n\t}\n\t\n\tchallenge(){\n\t\tvar self = this;\n\t\t\n\t\tif ((Date.now() - this.seen) < 500) { return Promise.resolve(this) };\n\t\t\n\t\treturn new Promise(function(resolve,reject) {\n\t\t\t\n\t\t\tlet exists = false;\n\t\t\timba_once(self,'seen',function() {\n\t\t\t\t\n\t\t\t\texists = true;\n\t\t\t\treturn resolve(self);\n\t\t\t});\n\t\t\t\n\t\t\tself.send(self.slot);\n\t\t\treturn setTimeout(function() {\n\t\t\t\t\n\t\t\t\tif (!(exists)) {\n\t\t\t\t\t\n\t\t\t\t\tself.release();\n\t\t\t\t\treturn resolve(self);\n\t\t\t\t};\n\t\t\t},1000);\n\t\t});\n\t}\n\tstatic {\n\t\tdefineName$__(this,'ClientProxy');}\n};\n\nclass ServerSocket {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $9;\n\t\t($9 = $$.disconnects) !== undefined && (this.disconnects = $9);\n\t\t($9 = $$.readyState) !== undefined && (this.readyState = $9);\n\t\t($9 = $$.bytesReceived) !== undefined && (this.bytesReceived = $9);\n\t\t($9 = $$.handshake) !== undefined && (this.handshake = $9);\n\t\t\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tvar $10;\n\t\tthis.disconnects = ($$ && ($10 = $$.disconnects) !== undefined) ? ($10) : 0;\n\t\tthis.readyState = ($$ && ($10 = $$.readyState) !== undefined) ? ($10) : 0;\n\t\tthis.bytesReceived = ($$ && ($10 = $$.bytesReceived) !== undefined) ? ($10) : 0;\n\t\tthis.handshake = ($$ && ($10 = $$.handshake) !== undefined) ? ($10) : null;\n\t\t\n\t}\n\tconstructor(url){\n\t\tthis[$__init__$]();\n\t\tthis.url = url;\n\t\tthis.queue = [];\n\t\tthis.open();\n\t}\n\t\n\topen(){\n\t\tvar self = this;\n\t\t\n\t\tthis.ws = new WebSocket(this.url);\n\t\tthis.ws.binaryType = 'arraybuffer';\n\t\t\n\t\tlet ws = this.ws;\n\t\tlet timeout = setTimeout(function() { return ws.close(); },5000);\n\t\t\n\t\tws.onopen = function(e) {\n\t\t\t\n\t\t\tclearTimeout(timeout);\n\t\t\t// delete ws.then\n\t\t\tself.disconnects = 0;\n\t\t\tself.readyState = ws.readyState;\n\t\t\tp('ws.onopen',e);\n\t\t\treturn self.flush();\n\t\t};\n\t\t\n\t\tws.onmessage = function(e) {\n\t\t\tvar $11;\n\t\t\t\n\t\t\tlet raw = new Uint8Array(e.data);\n\t\t\tif (raw[0] == 212 && raw[1] == 14) {\n\t\t\t\t\n\t\t\t\tp(`got handshake!`);\n\t\t\t\tself.handshake = raw;\n\t\t\t};\n\t\t\t\n\t\t\tlet slot = (raw[0] == 146) ? raw[1] : 0;\n\t\t\tself.bytesReceived += raw.length;\n\t\t\tp(`message from server`,raw.length,self.bytesReceived);\n\t\t\t$11 = [];\n\t\t\tfor (let client of iter$__(clients)){\n\t\t\t\t\n\t\t\t\t$11.push((!(slot) || client.slot == slot) && (\n\t\t\t\t\t\n\t\t\t\t\tclient.send(raw)\n\t\t\t\t));\n\t\t\t};\n\t\t\treturn $11;\n\t\t};\n\t\t\n\t\treturn ws.onclose = function(e) {\n\t\t\t\n\t\t\tclearTimeout(timeout);\n\t\t\tself.readyState = ws.readyState;\n\t\t\tws = null;\n\t\t\tlet delay = Math.min(1000 * Math.pow(1.5,self.disconnects),30000);\n\t\t\tp('ws.onclose!!',e,delay);\n\t\t\treturn setTimeout(function() {\n\t\t\t\t\n\t\t\t\tself.disconnects++;\n\t\t\t\treturn self.open();\n\t\t\t},delay);\n\t\t};\n\t}\n\t\n\tflush(){\n\t\t\n\t\tlet messages = this.queue;\n\t\tthis.queue = [];\n\t\tfor (let $12 = 0, $13 = iter$__(messages), $14 = $13.length; $12 < $14; $12++) {\n\t\t\tlet msg = $13[$12];\n\t\t\tthis.send(msg);\n\t\t};\n\t\treturn this;\n\t}\n\t\n\tsend(msg,bin){\n\t\t\n\t\tif (this.readyΦ) {\n\t\t\t\n\t\t\treturn this.ws.send(msg,true);\n\t\t} else {\n\t\t\t\n\t\t\treturn this.queue.push(msg);\n\t\t};\n\t}\n\t\n\tget readyΦ(){\n\t\t\n\t\treturn this.readyState == 1;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'ServerSocket');}\n};\n\nconst ws = new ServerSocket((\"\" + globalThis.origin.replace(/^http/,'ws') + \"/op/ws\"));\n\nfunction check(){\n\t\n\tlet now = Date.now();\n\treturn new Promise(function(resolve) {\n\t\tvar $15;\n\t\t\n\t\t$15 = [];\n\t\tfor (let client of iter$__(clients)){\n\t\t\t\n\t\t\t$15.push(client.send(client.slot));\n\t\t};\n\t\treturn $15;\n\t});\n\t\n\t// setTimeout(&,100)\n};\n\nglobalThis.onconnect = async function(e) {\n\tvar $16;\n\t\n\tconsole.log('onconnect',e);\n\tconst port = e.ports[0];\n\tlet client = port.client = new ClientProxy(port);\n\tlet nr = 1;\n\t\n\tawait Promise.all((function() {\n\t\t$16 = [];\n\t\tfor (let client of iter$__(clients)){\n\t\t\t\n\t\t\t$16.push(client.challenge());\n\t\t};\n\t\treturn $16;\n\t})());\n\t\n\twhile (Array.from(clients).find(function(_0) { return _0.slot == nr; })){\n\t\t\n\t\tnr++;\n\t};\n\t\n\tclient.slot = nr;\n\tlet prefix = client.prefix = new Uint8Array([146,nr]);\n\t\n\tclients.add(client);\n\t\n\tport.postMessage(nr);\n\t\n\tif (ws.handshake) {\n\t\t\n\t\tport.postMessage(ws.handshake);\n\t};\n\t\n\tport.onmessage = async function({data: data}) {\n\t\t\n\t\tconsole.log('port onmsesage',data);\n\t\t\n\t\tclient.keepalive();\n\t\t\n\t\tif (typeof data == 'number') {\n\t\t\t\n\t\t\treturn;\n\t\t};\n\t\t\n\t\tif (data.action) {\n\t\t\t\n\t\t\tlet fn = storage[data.action];\n\t\t\tif (fn) {\n\t\t\t\t\n\t\t\t\tlet res = await fn.apply(storage,data.params || []);\n\t\t\t\tconsole.log('returned from value',res);\n\t\t\t\tport.postMessage({ref: data.ref,value: res});\n\t\t\t};\n\t\t};\n\t\t\n\t\tif (data == 'close') {\n\t\t\t\n\t\t\tclient.release();\n\t\t\treturn;\n\t\t};\n\t\t\n\t\tif (data instanceof Uint8Array) {\n\t\t\t\n\t\t\tlet modified = new Uint8Array(data.length + prefix.length);\n\t\t\tmodified.set(prefix);\n\t\t\tmodified.set(data,prefix.length);\n\t\t\tp('modified',modified);\n\t\t\t// let arrayOne = new Uint8Array([client.slot])\n\t\t\treturn ws.send(modified);\n\t\t};\n\t};\n\t\n\treturn storage.onconnect(client);\n};\n","dependencies":[],"map":{"version":3,"file":"webworker.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/webworker.imba"],"sourcesContent":["const p = console.log.bind(console)\nconst clients = new Set\n\nimport {SharedBuffer} from './worker/buffer.js'\nimport './protocol'\n\nimport * as kvs from 'idb-keyval'\n\nconst rootdir = try global.navigator.storage.getDirectory!\n\nglobal class StreamValue\n\tstatic def get id\n\t\tself[id] ||= new StreamValue(id)\n\n\tdef constructor id\n\t\tid = id\n\t\thandle = null\n\t\twriter = null\n\t\tfile = null\n\t\tsize = null\n\t\tsetup\n\n\t@lazy get setup\n\t\tnew Promise do(resolve)\n\t\t\tlet root = await rootdir\n\t\t\tself.handle = await root.getFileHandle(id,{create: true})\n\t\t\tself.file = await handle.getFile!\n\t\t\tself.size = file.size\n\t\t\tself.buffer = await file.arrayBuffer!\n\t\t\tglobal.h = self\n\t\t\tp `setup stream`,handle,file,buffer\n\t\t\tresolve(self)\n\n\tdef write offset, data\n\t\tawait setup\n\n\t\tlet t0 = global.performance.now!\n\n\t\t# what if someone is already writing to it?\n\t\tp 'getting?',rootdir\n\t\tif offset < size\n\t\t\tp `trying to write at wrong offset!!`\n\t\t\toffset = size\n\t\t\t# should return error?\n\t\tif offset == -1\n\t\t\toffset = size\n\n\t\twriter ||= await handle.createWritable(keepExistingData: true)\n\n\t\tp 'write StreamValue',offset,data\n\n\t\tawait writer.seek(size)\n\n\t\tif offset == size\n\t\t\tawait writer.write(data)\n\t\telif offset >= 0\n\t\t\tawait writer.write({ type: \"write\", position: offset, data: data })\n\n\t\tsize = offset + data.length # must be binary data?\n\n\t\twriter.close()\n\t\twriter = null\n\t\tp `wrote to file`,global.performance.now! - t0\n\t\treturn yes\n\n\tdef read offset\n\t\tyes\n\nclass StorageAdapter\n\tstore = kvs.createStore(`test-db`,'db')\n\tcache = {}\n\tmap = {}\n\n\tdef constructor\n\t\tsuper\n\t\tload!\n\n\tdef test\n\t\tMath.random()\n\n\tdef load\n\t\t# wait for loading\n\t\tp `entries in idb`\n\t\t# await kvs.set('op',{a: 1, b: 2, c: 3},store)\n\t\tlet vals = await kvs.values(store)\n\t\tlet entries = await kvs.entries(store)\n\t\tp `entries in idb`,entries,vals,global.performance.now!\n\t\tstate = vals\n\t\tfor item in vals\n\t\t\tmap[item.id] = item\n\n\t\tbroadcast(vals)\n\t\t# for client of clients\n\t\t#\tclient.send({source: 'locals', entries: vals})\n\n\tdef onconnect client\n\t\tif state\n\t\t\tclient.send(target:'storage', data:Object.values(map))\n\n\tdef fswrite id,offset,bytes\n\t\t# should end up with a packet we send to the others\n\t\tp `write fs`,id,offset,bytes\n\t\tlet buf = StreamValue.get(id)\n\t\tbuf.write(offset,bytes)\n\t\t# let buf = SharedBuffer.get(id)\n\t\t# buf.appendChunk()\n\t\tyes\n\n\tdef fstest ...params\n\t\tp params\n\n\tdef lookup id\n\t\tp `lookup`,id\n\n\t\tlet buf = StreamValue.get(id)\n\t\tawait buf.setup\n\t\treturn {\n\t\t\tid: id\n\t\t\tsize: buf.size\n\t\t\thandle: buf.handle\n\t\t\tfile: buf.file\n\t\t}\n\n\tdef fsopen id,buf\n\t\tlet buf2 = SharedBuffer.get(id)\n\t\treturn buf.buffer\n\n\tdef put value\n\t\tp `put to localstore`,value\n\n\t\tlet id = value.id\n\t\tlet prev = map[id]\n\n\t\t# check if there was something here before\n\n\t\tvalue._local = Date.now!\n\t\t# value._rev = -1 # really?\n\n\t\tmap[id] = value\n\t\tawait kvs.set(id,value,store)\n\t\tbroadcast(value)\n\t\treturn value\n\n\tdef broadcast data\n\t\t# no use of the msgpack format here...\n\t\tfor client of clients\n\t\t\tclient.send({target: 'storage', data: data})\n\nconst storage = new StorageAdapter\n\nclass ClientProxy\n\tslot = 0\n\tseen = Date.now!\n\n\tdef constructor port\n\t\tport = port\n\n\tdef keepalive\n\t\tseen = Date.now!\n\t\timba.emit(self,'seen')\n\n\tdef send data\n\t\tport.postMessage(data)\n\n\tdef release\n\t\tclients.delete(self)\n\n\tdef challenge\n\t\treturn Promise.resolve(self) if (Date.now! - seen) < 500\n\n\t\tnew Promise do(resolve,reject)\n\t\t\tlet exists = no\n\t\t\timba.once(self,'seen') do\n\t\t\t\texists = yes\n\t\t\t\tresolve(self)\n\n\t\t\tsend(slot)\n\t\t\tsetTimeout(&,1000) do\n\t\t\t\tunless exists\n\t\t\t\t\trelease!\n\t\t\t\t\tresolve(self)\n\nclass ServerSocket\n\tdisconnects = 0\n\treadyState = 0\n\tbytesReceived = 0\n\thandshake = null\n\n\tdef constructor url\n\t\turl = url\n\t\tqueue = []\n\t\topen!\n\n\tdef open\n\t\tws = new WebSocket(url)\n\t\tws.binaryType = 'arraybuffer'\n\n\t\tlet ws = ws\n\t\tlet timeout = setTimeout(&,5000) do ws.close!\n\n\t\tws.onopen = do(e)\n\t\t\tclearTimeout(timeout)\n\t\t\t# delete ws.then\n\t\t\tdisconnects = 0\n\t\t\treadyState = ws.readyState\n\t\t\tp 'ws.onopen',e\n\t\t\tflush!\n\n\t\tws.onmessage = do(e)\n\t\t\tlet raw = new Uint8Array(e.data)\n\t\t\tif raw[0] == 212 and raw[1] == 14\n\t\t\t\tp `got handshake!`\n\t\t\t\thandshake = raw\n\n\t\t\tlet slot = raw[0] == 146 ? raw[1] : 0\n\t\t\tbytesReceived += raw.length\n\t\t\tp `message from server`,raw.length,bytesReceived\n\t\t\tfor client of clients\n\t\t\t\tif !slot or client.slot == slot\n\t\t\t\t\tclient.send(raw)\n\n\t\tws.onclose = do(e)\n\t\t\tclearTimeout(timeout)\n\t\t\treadyState = ws.readyState\n\t\t\tws = null\n\t\t\tlet delay = Math.min(1000 * Math.pow(1.5, disconnects),30000)\n\t\t\tp 'ws.onclose!!',e,delay\n\t\t\tsetTimeout(&,delay) do\n\t\t\t\tdisconnects++\n\t\t\t\topen!\n\n\tdef flush\n\t\tlet messages = queue\n\t\tqueue = []\n\t\tfor msg in messages\n\t\t\tsend(msg)\n\t\tself\n\n\tdef send msg, bin\n\t\tif ready?\n\t\t\tws.send(msg,yes)\n\t\telse\n\t\t\tqueue.push(msg)\n\n\tget ready?\n\t\treadyState == 1\n\nconst ws = new ServerSocket(\"{global.origin.replace(/^http/,'ws')}/op/ws\")\n\ndef check\n\tlet now = Date.now!\n\tnew Promise do(resolve)\n\t\tfor client of clients\n\t\t\tclient.send(client.slot)\n\n\t# setTimeout(&,100)\n\nglobal.onconnect = do(e)\n\tconsole.log 'onconnect',e\n\tconst port = e.ports[0]\n\tlet client = port.client = new ClientProxy(port)\n\tlet nr = 1\n\n\tawait Promise.all for client of clients\n\t\tclient.challenge!\n\n\twhile Array.from(clients).find(do $1.slot == nr)\n\t\tnr++\n\n\tclient.slot = nr\n\tlet prefix = client.prefix = new Uint8Array([146,nr])\n\n\tclients.add(client)\n\n\tport.postMessage(nr)\n\n\tif ws.handshake\n\t\tport.postMessage(ws.handshake)\n\n\tport.onmessage = do({data})\n\t\tconsole.log 'port onmsesage',data\n\n\t\tclient.keepalive!\n\n\t\tif typeof data == 'number'\n\t\t\treturn\n\n\t\tif data.action\n\t\t\tlet fn = storage[data.action]\n\t\t\tif fn\n\t\t\t\tlet res = await fn.apply(storage,data.params or [])\n\t\t\t\tconsole.log 'returned from value',res\n\t\t\t\tport.postMessage(ref: data.ref, value: res)\n\n\t\tif data == 'close'\n\t\t\tclient.release()\n\t\t\treturn\n\n\t\tif data isa Uint8Array\n\t\t\tlet modified = new Uint8Array(data.length + prefix.length)\n\t\t\tmodified.set(prefix)\n\t\t\tmodified.set(data,prefix.length)\n\t\t\tp 'modified',modified\n\t\t\t# let arrayOne = new Uint8Array([client.slot])\n\t\t\tws.send(modified)\n\n\tstorage.onconnect(client)\n"],"names":[],"mappings":"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"}},"css":{"code":""},"warnings":[],"errors":[]}
{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};\nimport {accessor as imba_accessor} from 'imba';\nvar $1 = Symbol('user'), $2 = Symbol(), $3 = Symbol('user_fk'), $4 = Symbol(), $5 = Symbol(), $7, $8;\nconst $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__');\n\n/*body*/\nimport setup from './setup';\n\nclass Item extends OP.Object {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $6;\n\t\tsuper[$__patch__$] && super[$__patch__$]($$,fields);\n\t\tfields && ($6 = $$.user) !== undefined && this.ααuser.$init($6,this,$1,'user',$$);\n\t\tfields && ($6 = $$.user_fk) !== undefined && this.ααuser_fk.$init($6,this,$3,'user_fk',$$);\n\t\t\n\t}\n\tconstructor(){\n\t\tsuper(...arguments);\n\t\tsuper[$__init__$] || this[$__init__$]();this[$__initor__$]===$5 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tdeep && super[$__init__$] && super[$__init__$](...arguments);\n\t\tfields && this.ααuser.$init($$ ? $$.user : undefined,this,$1,'user',$$);\n\t\tfields && this.ααuser_fk.$init($$ ? $$.user_fk : undefined,this,$3,'user_fk',$$);\n\t\t\n\t}\n\tset user(val){ this.ααuser.$set(val,this,$1,'user') }\n\tget user(){ return this.ααuser.$get(this,$1,'user') }\n\tget ααuser(){ return this[$2] || imba_accessor(($7 = this.αref(User),$7),this,$1,'user',$2,Item.prototype) }\n\tset user_fk(val){ this.ααuser_fk.$set(val,this,$3,'user_fk') }\n\tget user_fk(){ return this.ααuser_fk.$get(this,$3,'user_fk') }\n\tget ααuser_fk(){ return this[$4] || imba_accessor(($8 = this.αref(User),($8.foreign instanceof Function) ? $8.foreign() : ($8.foreign = true),$8),this,$3,'user_fk',$4,Item.prototype) }\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $5;defineName$__(this,'Item');this.alias = \"lol\";\n\t\tinheritClass$__(this);}\n};\n\nclass User extends OP.User {\nstatic {\n\tdefineName$__(this,'User');inheritClass$__(this);}};\n\nawait setup(__filename);\n\ntest(\"null reference\",async function() {\n\t\n\tlet user = await User.create();\n\tlet user_fk = await User.create();\n\tlet item = await Item.create({user: user,user_fk: user_fk});\n\t\n\tawait item.update(\n\t\t{user: null,\n\t\tuser_fk: null}\n\t);\n\t\n\tok(item.user,undefined);\n\tok(item.user_fk,undefined);\n\t\n\tok(item.$plain.user,'');\n\treturn ok(item.$plain.user_fk,'');\n});\n\ntest(\"foreign key constraint: save\",async function() {\n\t\n\tlet user_fk = User.build();\n\tlet item = await Item.create();\n\titem.user_fk = user_fk;\n\tawait expect(item.save()).rejects.toThrow(OPForeignKeyError);\n\tawait expect(item.save()).rejects.toThrow(OPForeignKeyError);\n\treturn await expect(item.save()).rejects.toThrow(OPForeignKeyError);\n});\n\ntest(\"foreign key constraint: update\",async function() {\n\t\n\tlet user_fk = User.build();\n\tlet item = await Item.create();\n\tawait expect(item.update({user_fk: user_fk})).rejects.toThrow(OPForeignKeyError);\n\tawait expect(item.update({user_fk: user_fk})).rejects.toThrow(OPForeignKeyError);\n\treturn await expect(item.update({user_fk: user_fk})).rejects.toThrow(OPForeignKeyError);\n});\n\ntest.skip(\"foreign key constraint: create\",async function() {\n\t\n\t// TODO This test doesn't work as expected because `Model.create`\n\t// calls `Model.$save` without awaiting, and it is not possible\n\t// to catch the error from another scope.\n\tlet user_fk = User.build();\n\tlet item = await Item.create();\n\tawait expect(Item.create({user_fk: user_fk})).rejects.toThrow(OPForeignKeyError);\n\tawait expect(Item.create({user_fk: user_fk})).rejects.toThrow(OPForeignKeyError);\n\treturn await expect(Item.create({user_fk: user_fk})).rejects.toThrow(OPForeignKeyError);\n});\n","dependencies":[],"map":{"version":3,"file":"nullrefs.test.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/test/nullrefs.test.imba"],"sourcesContent":["import setup from './setup'\n\nclass Item < OP.Object\n\tstatic alias = \"lol\"\n\tuser @ref(User)\n\tuser_fk @ref(User).foreign\n\nclass User < OP.User\n\nawait setup(__filename)\n\ntest \"null reference\" do\n\tlet user = await User.create!\n\tlet user_fk = await User.create!\n\tlet item = await Item.create { user, user_fk }\n\n\tawait item.update\n\t\tuser: null\n\t\tuser_fk: null\n\n\tok item.user, undefined\n\tok item.user_fk, undefined\n\n\tok item.$plain.user, ''\n\tok item.$plain.user_fk, ''\n\ntest \"foreign key constraint: save\" do\n\tlet user_fk = User.build!\n\tlet item = await Item.create!\n\titem.user_fk = user_fk\n\tawait expect(item.save!).rejects.toThrow(OPForeignKeyError)\n\tawait expect(item.save!).rejects.toThrow(OPForeignKeyError)\n\tawait expect(item.save!).rejects.toThrow(OPForeignKeyError)\n\ntest \"foreign key constraint: update\" do\n\tlet user_fk = User.build!\n\tlet item = await Item.create!\n\tawait expect(item.update({user_fk})).rejects.toThrow(OPForeignKeyError)\n\tawait expect(item.update({user_fk})).rejects.toThrow(OPForeignKeyError)\n\tawait expect(item.update({user_fk})).rejects.toThrow(OPForeignKeyError)\n\ntest.skip \"foreign key constraint: create\" do\n\t# TODO This test doesn't work as expected because `Model.create`\n\t# calls `Model.$save` without awaiting, and it is not possible\n\t# to catch the error from another scope.\n\tlet user_fk = User.build!\n\tlet item = await Item.create!\n\tawait expect(Item.create({user_fk})).rejects.toThrow(OPForeignKeyError)\n\tawait expect(Item.create({user_fk})).rejects.toThrow(OPForeignKeyError)\n\tawait expect(Item.create({user_fk})).rejects.toThrow(OPForeignKeyError)\n"],"names":[],"mappings":"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"}},"css":{"code":""},"warnings":[],"errors":[]}
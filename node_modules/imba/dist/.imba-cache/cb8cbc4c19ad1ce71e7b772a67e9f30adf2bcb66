{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};;\nfunction extend$__(target,ext){\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(ext);\n\tdelete descriptors.constructor;\n\tif(target.extend__ instanceof Function){\n\t\ttarget.extend__(descriptors,ext);\n\t} else {\n\t\t// @ts-ignore\n\t\tObject.defineProperties(target,descriptors);\n\t}\n\treturn target;\n};\nconst $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__');\nvar $1 = Symbol();\n\n/*body*/\nimport './any';\n\nexport class OPNumberField extends OPPlainField {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $2;\n\t\tsuper[$__patch__$] && super[$__patch__$]($$,fields);\n\t\t($2 = $$.pgtype) !== undefined && (this.pgtype = $2);\n\t\t($2 = $$.min) !== undefined && (this.min = $2);\n\t\t($2 = $$.max) !== undefined && (this.max = $2);\n\t\t\n\t}\n\tconstructor(){\n\t\tsuper(...arguments);\n\t\tsuper[$__init__$] || this[$__init__$]();this[$__initor__$]===$1 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tvar $3;\n\t\tdeep && super[$__init__$] && super[$__init__$](...arguments);\n\t\tthis.pgtype = ($$ && ($3 = $$.pgtype) !== undefined) ? ($3) : 'integer';\n\t\tthis.min = ($$ && ($3 = $$.min) !== undefined) ? ($3) : (-Infinity);\n\t\tthis.max = ($$ && ($3 = $$.max) !== undefined) ? ($3) : Infinity;\n\t\t\n\t}\n\tget valuetype(){\n\t\t\n\t\treturn Number;\n\t}\n\t\n\tclamp(min,max){\n\t\t\n\t\tthis.min = min;\n\t\treturn this.max = max;\n\t}\n\t\n\t// def $get\\number target\n\t// \tlet d = target.$plain\n\t// \td ? d[name] : undefined\n\t\n\t$patch(value,target,stack){\n\t\t\n\t\treturn true;\n\t}\n\t\n\t$sanitize(value){\n\t\t\n\t\treturn (typeof value == 'string') ? Number(value) : value;\n\t}\n\t\n\t$load(value,target){\n\t\t\n\t\tif (typeof value == 'string') {\n\t\t\t\n\t\t\tvalue = Number(value);\n\t\t};\n\t\t\n\t\treturn super.$load(value,target);\n\t}\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $1;defineName$__(this,'OPNumberField');inheritClass$__(this);}\n}; globalThis.OPNumberField = OPNumberField;\n\nclass ΩOPObject {\n\t\n\t\n\tαint(){\n\t\t\n\t\treturn new OPNumberField;\n\t}\n\t\n\tαnumber(){\n\t\t\n\t\treturn new OPNumberField;\n\t}\n\t\n\tαsize(){\n\t\t\n\t\t// Later wrap this for human-readable presentation\n\t\treturn new OPNumberField;\n\t}\n\t\n\tαfloat(){\n\t\t\n\t\tlet field = new OPNumberField;\n\t\tfield.pgtype = 'real';\n\t\treturn field;\n\t}\n\t\n\tαms(){\n\t\t\n\t\tlet field = new OPNumberField;\n\t\treturn field;\n\t}\n\t\n\tαevent(){\n\t\t\n\t\tlet field = new OPNumberField;\n\t\tfield.type = Date;\n\t\treturn field;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'OPObject');}\n};\nextend$__(OPObject.prototype,ΩOPObject.prototype);\n;\n","dependencies":[],"map":{"version":3,"file":"number.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/fields/number.imba"],"sourcesContent":["import './any'\n\nexport global class OPNumberField < OPPlainField\n\tpgtype = 'integer'\n\tmin = -Infinity\n\tmax = Infinity\n\n\tget valuetype\n\t\tNumber\n\n\tdef clamp min, max\n\t\tself.min = min\n\t\tself.max = max\n\n\t# def $get\\number target\n\t# \tlet d = target.$plain\n\t# \td ? d[name] : undefined\n\n\tdef $patch value, target, stack\n\t\tyes\n\n\tdef $sanitize value\n\t\ttypeof value == 'string' ? Number(value) : value\n\n\tdef $load value, target\n\t\tif typeof value == 'string'\n\t\t\tvalue = Number(value)\n\n\t\tsuper(value,target)\n\nextend class OPObject\n\n\tdef @int\n\t\tnew OPNumberField\n\n\tdef @number\n\t\tnew OPNumberField\n\n\tdef @size\n\t\t# Later wrap this for human-readable presentation\n\t\tnew OPNumberField\n\n\tdef @float\n\t\tlet field = new OPNumberField\n\t\tfield.pgtype = 'real'\n\t\treturn field\n\n\tdef @ms\n\t\tlet field = new OPNumberField\n\t\treturn field\n\n\tdef @event\n\t\tlet field = new OPNumberField\n\t\tfield.type = Date\n\t\treturn field\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,CAAC,OAAO;;AAEd,MAAM,CAAQ,KAAK,CAAC,aAAa,SAAG,YAAY,EAAA;qCAFhD;;;WAGC,MAAM,CAAA,wBAAN,MAAM;WACN,GAAG,CAAA,wBAAH,GAAG;WACH,GAAG,CAAA,wBAAH,GAAG;;EALJ;cAAA;;;EAAA;kDAAA;;;OAGC,MAAM,mBAAN,MAAM,CAAA,qBAAA,IAAG,SAAS;OAClB,GAAG,mBAAH,GAAG,CAAA,qBAAA,KAAG,CAAC,QAAQ;OACf,GAAG,mBAAH,GAAG,CAAA,qBAAA,IAAG,QAAQ;;EALf;CAOC,GAAG,CAAC,SAAS,EAAA;;EACZ,OAAA,MAAM;EAAA;;CAEH,KAAK,CAAC,GAAG,CAAE,GAAG,CAAA;;EACjB,IAAI,CAAC,GAAG,GAAG,GAAG;EACd,OAAA,IAAI,CAAC,GAAG,GAAG,GAAG;EAAA;;;;;;CAMX,MAAM,CAAC,KAAK,CAAE,MAAM,CAAE,KAAK,CAAA;;EAC9B,OAAA,IAAG;EAAA;;CAEA,SAAS,CAAC,KAAK,CAAA;;SAClB,CAAA,OAAO,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAA,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK;EAAA;;CAE7C,KAAK,CAAC,KAAK,CAAE,MAAM,CAAA;;EACtB,EAAE,EAAC,OAAO,KAAK,CAAC,EAAE,CAAC,QAAQ,EAAA;;GAC1B,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;GAAA;;EAEtB,OAAA,MAJG,KAAK,CAIF,KAAK,CAAC,MAAM,CAAC;EAAA;;;AAAA,cA1BD,aAAa,GAAb,aAAa;;AA4B1B,KAAK,CAAC,SAAQ,EAAA;;;CAEhB,IAAI,EAAA;;EACP,OAAA,GAAG,CAAC,aAAa;EAAA;;CAEd,OAAO,EAAA;;EACV,OAAA,GAAG,CAAC,aAAa;EAAA;;CAEd,KAAK,EAAA;;;EAER,OAAA,GAAG,CAAC,aAAa;EAAA;;CAEd,MAAM,EAAA;;MACL,KAAK,GAAG,GAAG,CAAC,aAAa;EAC7B,KAAK,CAAC,MAAM,GAAG,MAAM;EACrB,MAAM,CAAC,KAAK;EAAA;;CAET,GAAG,EAAA;;MACF,KAAK,GAAG,GAAG,CAAC,aAAa;EAC7B,MAAM,CAAC,KAAK;EAAA;;CAET,MAAM,EAAA;;MACL,KAAK,GAAG,GAAG,CAAC,aAAa;EAC7B,KAAK,CAAC,IAAI,GAAG,IAAI;EACjB,MAAM,CAAC,KAAK;EAAA;;;AAAA;UAxBD,QAAQ;AAwBP;AACd;"}},"css":{"code":""},"warnings":[],"errors":[]}
{"js":{"code":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};;\nfunction extend$__(target,ext){\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(ext);\n\tdelete descriptors.constructor;\n\tif(target.extend__ instanceof Function){\n\t\ttarget.extend__(descriptors,ext);\n\t} else {\n\t\t// @ts-ignore\n\t\tObject.defineProperties(target,descriptors);\n\t}\n\treturn target;\n};\nconst $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__');\nvar $1 = Symbol();\n\n/*body*/\nimport './any';\n\n// @template [Type=any]\nexport class OPRefField extends OPField {\n\t[$__patch__$]($$ = {},fields = true){\n\t\tvar $2;\n\t\tsuper[$__patch__$] && super[$__patch__$]($$,fields);\n\t\t($2 = $$.pgtype) !== undefined && (this.pgtype = $2);\n\t\t($2 = $$.enum) !== undefined && (this.enum = $2);\n\t\t($2 = $$.parent) !== undefined && (this.parent = $2);\n\t\t($2 = $$.weak) !== undefined && (this.weak = $2);\n\t\t($2 = $$.foreign) !== undefined && (this.foreign = $2);\n\t\t($2 = $$.observable) !== undefined && (this.observable = $2);\n\t\t\n\t}\n\tconstructor(){\n\t\tsuper(...arguments);\n\t\tsuper[$__init__$] || this[$__init__$]();this[$__initor__$]===$1 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t[$__init__$]($$ = null,deep = true,fields = true){\n\t\tvar $3;\n\t\tdeep && super[$__init__$] && super[$__init__$](...arguments);\n\t\tthis.pgtype = ($$ && ($3 = $$.pgtype) !== undefined) ? ($3) : 'text';\n\t\tthis.enum = ($$ && ($3 = $$.enum) !== undefined) ? ($3) : false;\n\t\tthis.parent = ($$ && ($3 = $$.parent) !== undefined) ? ($3) : false;\n\t\tthis.weak = ($$ && ($3 = $$.weak) !== undefined) ? ($3) : false;\n\t\tthis.foreign = ($$ && ($3 = $$.foreign) !== undefined) ? ($3) : false;\n\t\tthis.observable = ($$ && ($3 = $$.observable) !== undefined) ? ($3) : true;\n\t\t\n\t}\n\t\n\t\n\t// serialize only oid for type\n\t\n\t\n\t// control access / validate in relation to referenced object\n\t\n\t\n\t// disable pg-level constraints for reference?\n\t\n\t\n\tget refΦ(){\n\t\t\n\t\treturn true;\n\t}\n\t\n\tget valuetype(){\n\t\t\n\t\treturn this.type;\n\t}\n\t\n\tget reftype(){\n\t\t\n\t\treturn this.type;\n\t}\n\t\n\tget complexΦ(){\n\t\t\n\t\treturn this.parent || this.$granted;\n\t}\n\t\n\t$sanitize(value,target){\n\t\t\n\t\treturn (typeof value == 'string') ? value : ((value ? String(this.enum ? value.oid : value.id) : undefined));\n\t}\n\t\n\t$deserialize(value,target){\n\t\t\n\t\tif (!(value)) { return };\n\t\t\n\t\tif (this.enum && typeof value == 'string') {\n\t\t\t\n\t\t\tvalue = this.type.id + '9' + value;\n\t\t};\n\t\t\n\t\treturn OP.$rich[value] || this.type.get(value);\n\t}\n\t\n\t$serialize(target){\n\t\t\n\t\treturn this.$getΞplain(target);\n\t\t// value ? String(self.enum ? value.oid : value.id) : undefined\n\t}\n\t\n\t$load(value,target){\n\t\t\n\t\t// Using key now - likely busted..\n\t\tif (value !== undefined) {\n\t\t\t\n\t\t\tlet prev = target[this.key];\n\t\t\tlet curr = target[this.key] = this.$deserialize(value,target);\n\t\t\tif (prev != curr) {\n\t\t\t\t\n\t\t\t\tthis.$altered(curr,prev,target);\n\t\t\t};\n\t\t};\n\t\treturn;\n\t}\n\t\n\t/**\n\t@returns { InstanceType<Type> }\n\t*/\n\t$get(target){\n\t\t\n\t\treturn target[this.key] ||= this.$deserialize(this.$getΞplain(target),target);\n\t\t// target[key]\n\t}\n\t\n\t$set(value,target,ctx){\n\t\t\n\t\tif (typeof value == 'string') {\n\t\t\t\n\t\t\tvalue = this.$deserialize(value,target);\n\t\t};\n\t\t\n\t\t// value is not changing\n\t\tlet prev = this.$get(target);\n\t\tif (value == prev) {\n\t\t\t\n\t\t\treturn;\n\t\t};\n\t\t\n\t\ttarget[this.key] = value;\n\t\t// TODO define $hydrate and $dehydrate for values\n\t\tthis.$setΞplain(value?.id || '',target,ctx);\n\t\tthis.$altered(value,prev,target);\n\t\treturn;\n\t}\n\t\n\t$wake(target){\n\t\t\n\t\tlet v1 = this.$get(target);\n\t\tif (v1) { return this.$altered(v1,undefined,target) };\n\t}\n\t\n\t$altered(value,prev,target){\n\t\t\n\t\tif (this.parent) {\n\t\t\t\n\t\t\t// TODO reference count the parent / child thing - or make them related to field\n\t\t\t// What about when we are just building?\n\t\t\tif (prev) {\n\t\t\t\t\n\t\t\t\tprev.$children.decr(target,this);\n\t\t\t\ttarget.$parents.decr(prev,this);\n\t\t\t};\n\t\t\t\n\t\t\tif (value) {\n\t\t\t\t\n\t\t\t\tvalue.$children.incr(target,this);\n\t\t\t\ttarget.$parents.incr(value,this);\n\t\t\t};\n\t\t\t\n\t\t\t// TODO populate target.$parents as well\n\t\t};\n\t\t\n\t\tif (this.$granted) {\n\t\t\t\n\t\t\t// should we store it on the target or in this model?\n\t\t\t// In this model it is already implicitly stored - could make sense to check live\n\t\t\t// unless we are really interested in being able to fetch the connection.\n\t\t\t// Need to decide on the structure for registering this\n\t\t\t// Should likely be a separate object representing the roles-combo between an item and user\n\t\t\t// it could be stored in both places if we wanted to.\n\t\t\t// Feels pretty natural to make this part of the pov, no? But povs are meant to be for users only\n\t\t\tif (prev) {\n\t\t\t\t\n\t\t\t\ttarget.$pov(prev).$demote(this.$granted,this);\n\t\t\t};\n\t\t\tif (value) {\n\t\t\t\t\n\t\t\t\ttarget.$pov(value).$promote(this.$granted,this);\n\t\t\t\t// for this POC - expeting a single role to be set\n\t\t\t\t// FIXME this only works for very simple test - we have to essentially do reference counting here\n\t\t\t\t// let map = value.$roles ||= {}\n\t\t\t\t// (map[$granted] ||= new Set).add(target)\n\t\t\t\t// map[target]\n\t\t\t};\n\t\t\ttrue;\n\t\t};\n\t\treturn;\n\t}\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $1;defineName$__(this,'OPRefField');inheritClass$__(this);}\n}; globalThis.OPRefField = OPRefField;\n\nclass ΩOPObject {\n\t\n\t\n\t// @template [T=any]\n\t/**\n\t@param {T} type\n\t@returns { RefField<T> }\n\t*/\n\tαref(type){\n\t\t\n\t\treturn new OPRefField(type);\n\t}\n\t\n\t// @template [T=any]\n\t/**\n\t@param {T} type\n\t@returns { RefField<T> }\n\t*/\n\tαchild(type){\n\t\t\n\t\tlet field = new OPRefField(type);\n\t\tfield.child = true;\n\t\treturn field;\n\t}\n\t\n\t// @template [T=any]\n\t/**\n\t@param {T} type\n\t@returns { RefField<T> }\n\t*/\n\tαparent(type){\n\t\t\n\t\tlet field = new OPRefField(type);\n\t\tfield.parent = true;\n\t\tfield.index = true;\n\t\treturn field;\n\t}\n\t\n\t// @template [T=(typeof OPUser)]\n\t/**\n\t@param {T} type\n\t@returns { RefField<T> }\n\t*/\n\tαcreator(type){\n\t\t\n\t\tlet field = new OPRefField(type || OP.User);\n\t\tfield.as(OP.CREATOR);\n\t\tfield.default = function() { return OP.agent; };\n\t\treturn field;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'OPObject');}\n};\nextend$__(OPObject.prototype,ΩOPObject.prototype);\n;\n","dependencies":[],"map":{"version":3,"file":"ref.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/fields/ref.imba"],"sourcesContent":["import './any'\n\n# @template [Type=any]\nexport global class OPRefField < OPField\n\tpgtype = 'text'\n\n\t# serialize only oid for type\n\tenum = no\n\n\t# control access / validate in relation to referenced object\n\tparent = no\n\n\t# disable pg-level constraints for reference?\n\tweak = no\n\n\tforeign = no\n\n\tobservable = yes\n\n\tget ref?\n\t\tyes\n\n\tget valuetype\n\t\ttype\n\n\tget reftype\n\t\ttype\n\n\tget complex?\n\t\tparent or $granted\n\n\tdef $sanitize value, target\n\t\ttypeof value == 'string' ? value : (value ? String(self.enum ? value.oid : value.id) : undefined)\n\n\tdef $deserialize value, target\n\t\treturn unless value\n\n\t\tif self.enum and typeof value == 'string'\n\t\t\tvalue = type.id + '9' + value\n\n\t\treturn OP.$rich[value] or type.get(value)\n\n\tdef $serialize target\n\t\t$get-plain(target)\n\t\t# value ? String(self.enum ? value.oid : value.id) : undefined\n\n\tdef $load value, target\n\t\t# Using key now - likely busted..\n\t\tunless value === undefined\n\t\t\tlet prev = target[key]\n\t\t\tlet curr = target[key] = $deserialize(value,target)\n\t\t\tif prev != curr\n\t\t\t\t$altered(curr,prev,target)\n\t\treturn\n\n\tdef $get\\InstanceType<Type> target\n\t\ttarget[key] ||= $deserialize($get-plain(target),target)\n\t\t# target[key]\n\n\tdef $set value, target, ctx\n\t\tif typeof value == 'string'\n\t\t\tvalue = $deserialize(value,target)\n\n\t\t# value is not changing\n\t\tlet prev = $get(target)\n\t\tif value == prev\n\t\t\treturn\n\n\t\ttarget[key] = value\n\t\t# TODO define $hydrate and $dehydrate for values\n\t\t$set-plain(value..id or '', target,ctx)\n\t\t$altered(value,prev,target)\n\t\treturn\n\n\tdef $wake target\n\t\tlet v1 = $get(target)\n\t\t$altered(v1,undefined,target) if v1\n\n\tdef $altered value, prev, target\n\t\tif parent\n\t\t\t# TODO reference count the parent / child thing - or make them related to field\n\t\t\t# What about when we are just building?\n\t\t\tif prev\n\t\t\t\tprev.$children.decr(target,self)\n\t\t\t\ttarget.$parents.decr(prev,self)\n\n\t\t\tif value\n\t\t\t\tvalue.$children.incr(target,self)\n\t\t\t\ttarget.$parents.incr(value,self)\n\n\t\t\t# TODO populate target.$parents as well\n\n\t\tif $granted\n\t\t\t# should we store it on the target or in this model?\n\t\t\t# In this model it is already implicitly stored - could make sense to check live\n\t\t\t# unless we are really interested in being able to fetch the connection.\n\t\t\t# Need to decide on the structure for registering this\n\t\t\t# Should likely be a separate object representing the roles-combo between an item and user\n\t\t\t# it could be stored in both places if we wanted to.\n\t\t\t# Feels pretty natural to make this part of the pov, no? But povs are meant to be for users only\n\t\t\tif prev\n\t\t\t\ttarget.$pov(prev).$demote($granted,self)\n\t\t\tif value\n\t\t\t\ttarget.$pov(value).$promote($granted,self)\n\t\t\t\t# for this POC - expeting a single role to be set\n\t\t\t\t# FIXME this only works for very simple test - we have to essentially do reference counting here\n\t\t\t\t# let map = value.$roles ||= {}\n\t\t\t\t# (map[$granted] ||= new Set).add(target)\n\t\t\t\t# map[target]\n\t\t\tyes\n\t\treturn\n\nextend class OPObject\n\n\t# @template [T=any]\n\tdef @ref\\RefField<T> type\\T\n\t\tnew OPRefField(type)\n\n\t# @template [T=any]\n\tdef @child\\RefField<T> type\\T\n\t\tlet field = new OPRefField(type)\n\t\tfield.child = yes\n\t\treturn field\n\n\t# @template [T=any]\n\tdef @parent\\RefField<T> type\\T\n\t\tlet field = new OPRefField(type)\n\t\tfield.parent = yes\n\t\tfield.index = yes\n\t\treturn field\n\n\t# @template [T=(typeof OPUser)]\n\tdef @creator\\RefField<T> type\\T\n\t\tlet field = new OPRefField(type or OP.User)\n\t\tfield.as(OP.CREATOR)\n\t\tfield.default = do OP.agent\n\t\treturn field\n"],"names":[],"mappings":"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"}},"css":{"code":""},"warnings":[],"errors":[]}
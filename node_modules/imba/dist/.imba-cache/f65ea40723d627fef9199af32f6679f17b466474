{"js":{"code":"const $op$ = Symbol.for('#op');\n\n/*body*/\nimport './typings';\nimport './std';\nimport './core/index';\n\nexport {tsToMs,now,epoch,promising,autoname} from './utils';\n\nimport './shared';\n\n// TODO Replace with global classes\nexport {Iterable,Index,SortedIterable} from './core/iterable';\n\nexport * from './protocol';\nexport {Î±rpc} from './protocol';\n\nimport './types/index';\nimport './adapter';\n\nimport './migrate.node.imba';\n;\n\nglobalThis[$op$] ||= {};\n\n// only on web?\nimport './ui';\n\nexport default OPObject;\n","dependencies":[],"map":{"version":3,"file":"index.js","sourceRoot":"","sources":["/Users/sindre/repos/scrimba/op/src/index.imba"],"sourcesContent":["import './typings'\nimport './std'\nimport './core/index'\n\nexport { tsToMs, now, epoch, promising, autoname } from './utils'\n\nimport './shared'\n\n# TODO Replace with global classes\nexport { Iterable, Index, SortedIterable } from './core/iterable'\n\nexport * from './protocol'\nexport { @rpc } from './protocol'\n\nimport './types/index'\nimport './adapter'\nif $node$ then import './migrate.node.imba'\n\nglobal.#op ||= {}\n\n# only on web?\nimport './ui'\n\nexport default OPObject\n"],"names":[],"mappings":";;;AAAA,MAAM,CAAC,WAAW;AAClB,MAAM,CAAC,OAAO;AACd,MAAM,CAAC,cAAc;;AAErB,MAAM,EAAG,MAAM,CAAE,GAAG,CAAE,KAAK,CAAE,SAAS,CAAE,QAAQ,OAAQ,SAAS;;AAEjE,MAAM,CAAC,UAAU;;;AAGjB,MAAM,EAAG,QAAQ,CAAE,KAAK,CAAE,cAAc,OAAQ,iBAAiB;;AAEjE,MAAM,QAAQ,YAAY;AAC1B,MAAM,EAAG,IAAI,OAAQ,YAAY;;AAEjC,MAAM,CAAC,eAAe;AACtB,MAAM,CAAC,WAAW;;AACH,MAAM,CAAC,qBAAqB;AAhB3C;;AAkBA,UAAM,MAAI,KAAK,EAAE;;;AAGjB,MAAM,CAAC,MAAM;;eAEE,QAAQ;AACvB;"}},"css":{"code":""},"warnings":[],"errors":[]}